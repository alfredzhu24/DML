PROCEDURE_FORM LABEL_ENGINE (#LABEL_CONTROL_NAME,#COPIES_IN,#VAR1,#VAR2,#VAR3,#VAR4,#VAR5,#VAR6,#VAR7,#VAR8,#VAR9,#VAR10,#VAR11,#VAR12,#VAR13,#VAR14,#VAR15,#VAR16,#VAR17,#VAR18,#VAR19,#VAR20,#R_LABEL_ID)
	!INPUT:
	!#LABEL_CONTROL_NAME = the name of the label that appears in REPORT_PRINT_CONTROLS, e.g. ICC_R_004
	!#VAR1, #VAR2, etc = the variables being passed in. Any one can be an empty string ("") if it is unnecessary.
	
	!#R_LABEL_ID will be returned to the calling program so that there is only a need to display a menu once. 
	!Ex: pass in "ICC_R_001" in #LABEL_CONTROL_NAME. It will display the menu if necessary and #R_LABEL_ID will contain the chosen menu option.
	!You can then pass the result of #R_LABEL_ID back and it will not prompt the user for a menu again, unless #R_LABEL_ID=""

	#YES="Y"
	#NO="N"
	#COPIES=#COPIES_IN
	!1. #LABEL_CONTROL_NAME comes in
	!Debug:
	!#LABEL_CONTROL_NAME="ICC_R_003"
	!#VAR1="Test1"
	!#VAR2="Test2"
	!#VAR3="Test3"
	!#VAR4="Test4"
	!#VAR5="Test5"
	!#VAR6="Test6"
	!#VAR7="Test7"
	!#VAR8="Test8"
	!#VAR9="Test9"
	!#VAR10="Test10"
	!#VAR11="Test11"

	!2. Look up REPORT_PRINT_CONTROL 
	IF (#R_LABEL_ID="")
		#ID=#LABEL_CONTROL_NAME
	ELSE
		#ID=#R_LABEL_ID
	END_IF
	
	!3. Look up label for that print control
	FIND IN VOL_LABEL_TEMPLATES /WITH=REPORT_NUMBER=#LABEL_CONTROL_NAME
	#TEMPLATE=VOL_LABEL_TEMPLATES(TEMPLATE)
	!4. String-replace placeholder values with #VAR1 and beyond
	!Go in descending order because "VAR1" is part of "VAR10" but not vice versa
	PERFORM DO_REPLACE("VAR20",#VAR20)
	PERFORM DO_REPLACE("VAR19",#VAR19)
	PERFORM DO_REPLACE("VAR18",#VAR18)
	PERFORM DO_REPLACE("VAR17",#VAR17)
	PERFORM DO_REPLACE("VAR16",#VAR16)
	PERFORM DO_REPLACE("VAR15",#VAR15)
	PERFORM DO_REPLACE("VAR14",#VAR14)
	PERFORM DO_REPLACE("VAR13",#VAR13)
	PERFORM DO_REPLACE("VAR12",#VAR12)
	PERFORM DO_REPLACE("VAR11",#VAR11)
	PERFORM DO_REPLACE("VAR10",#VAR10)
	PERFORM DO_REPLACE("VAR9",#VAR9)
	PERFORM DO_REPLACE("VAR8",#VAR8)
	PERFORM DO_REPLACE("VAR7",#VAR7)
	PERFORM DO_REPLACE("VAR6",#VAR6)
	PERFORM DO_REPLACE("VAR5",#VAR5)
	PERFORM DO_REPLACE("VAR4",#VAR4)
	PERFORM DO_REPLACE("VAR3",#VAR3)
	PERFORM DO_REPLACE("VAR2",#VAR2)
	PERFORM DO_REPLACE("VAR1",#VAR1)

	!5. Print label to printer defined in REPORT_PRINT_CONTROL
	PERFORM GENERATE_AND_PRINT_LABEL(#R_LABEL_ID)

END_FORM

PROCEDURE_FORM DO_REPLACE(#REPLACE_TEXT,#REPLACE_VALUE)
	!Replace all instances of #REPLACE_VALUE with #REPLACE_TEXT in the #TEMPLATE variable.
	#PLACEHOLDER_POS = POS(#TEMPLATE,#REPLACE_TEXT,1)
	WHILE (#PLACEHOLDER_POS > 0)
		#BEFORE = LEFT(#TEMPLATE,#PLACEHOLDER_POS-1)
		#TEMPLATE=#BEFORE & #REPLACE_VALUE & RIGHT(#TEMPLATE,#PLACEHOLDER_POS+LEN(#REPLACE_TEXT))
		#PLACEHOLDER_POS = POS(#TEMPLATE,#REPLACE_TEXT,1)
	END_WHILE
END_FORM

PROCEDURE_FORM GENERATE_AND_PRINT_LABEL(#R_LABEL_ID)
	BEGIN_BLOCK WRITE_TO_FILE
		!Check if we need to display the menu
		IF (#R_LABEL_ID="")
			PERFORM CHECK_IF_MENU_NEEDED
			#R_LABEL_ID=#CURRENT_REPORT
		ELSE
			#CURRENT_REPORT=#R_LABEL_ID
		END_IF

		!#CURRENT_REPORT comes from the menu -- it will be the #ID followed by "/1" or "/2" or whatever the full report name is.
		PERFORM "GEMLB:LB_REPORT_PRINT_CONTROL" (#ID,#CURRENT_REPORT,"","","",#R_NAME,#REPORT_AUTO,#QUEUE,#FORM_TYPE,#DEFAULT_COPIES,"","","")
		OPEN_TEXT /CREATE #R_NAME AS RPTFILE
		WRITE_LINE RPTFILE #TEMPLATE
		CLOSE_TEXT RPTFILE
		IF (#REPORT_AUTO=#YES)
	
			FILES/NOQUERY/PRINT_ONLY/QUEUE=#QUEUE/FORM_TYPE=#FORM_TYPE/COPIES=#COPIES #R_NAME
		
			IF	(%STATUS=%FAILURE)
				MESSAGE/IDENTIFIER/BELL/WAIT P_57095
			END_IF
		END_IF
	END_BLOCK
END_FORM

PROCEDURE_FORM CHECK_IF_MENU_NEEDED
	BEGIN_BLOCK CHECK_REPORTS

		START_STREAM PRINT_CONTROLS_USER & 
			/LOCK=NONE &
			/STATISTIC=#RPT_COUNT=COUNT &
			/SECONDARY &
			/SELECTION="A AND B" &
			/TABLE=REPORT_PRINT_CONTROLS &
			/WITH=REPORT_NUMBER STARTING WITH #ID &
			/WITH=USERNAME = %USERNAME

		FETCH PRINT_CONTROLS_USER

		!Check for a report control by user name, display menu if there are multiple
		IF (#RPT_COUNT >= 2)	
			PERFORM CHOOSE_PRINTER_USER
			#CURRENT_REPORT = REPORT_PRINT_CONTROLS(REPORT_NUMBER)
			EXIT(%SUCCESS)
		ELSE_IF (#RPT_COUNT=1)
			FIND IN REPORT_PRINT_CONTROLS /LOCK=NONE &
				/WITH=REPORT_NUMBER STARTING WITH #ID &
				/WITH=USERNAME = %USERNAME 


			#CURRENT_REPORT = REPORT_PRINT_CONTROLS(REPORT_NUMBER)
			EXIT(%SUCCESS)
		END_IF
			
		!There's no user-specific print control, so check the number of universal controls
		START_STREAM PRINT_CONTROLS_UNIVERSAL & 
			/LOCK=NONE &
			/STATISTIC=#RPT_COUNT=COUNT &
			/SECONDARY &
			/SELECTION="A AND B" &
			/TABLE=REPORT_PRINT_CONTROLS &
			/WITH=REPORT_NUMBER STARTING WITH #ID &
			/WITH=USERNAME STARTING WITH "*"

		FETCH PRINT_CONTROLS_UNIVERSAL

		IF (#RPT_COUNT >= 2)	
			PERFORM CHOOSE_PRINTER_UNIVERSAL
			#CURRENT_REPORT = REPORT_PRINT_CONTROLS(REPORT_NUMBER)
			EXIT(%SUCCESS)
		ELSE_IF (#RPT_COUNT=1)
			FIND IN REPORT_PRINT_CONTROLS /LOCK=NONE &
				/WITH=REPORT_NUMBER STARTING WITH #ID &
				/WITH=USERNAME STARTING WITH "*"

			#CURRENT_REPORT = REPORT_PRINT_CONTROLS(REPORT_NUMBER)
			EXIT(%SUCCESS)
		END_IF
		
		EXIT(%FAILURE)
	END_BLOCK
END_FORM

TABLE_FORM CHOOSE_PRINTER_USER /ROW=10 /COL=5 /HEIGHT=10 /WIDTH=60 &
	/TABLE=REPORT_PRINT_CONTROLS &
	/SELECTION="A AND B" &
	/OPTIONS=NODELETE, MENU, NOINSERT &
	/WITH=REPORT_PRINT_CONTROLS(REPORT_NUMBER) STARTING WITH #ID &
	/WITH=REPORT_PRINT_CONTROLS(USERNAME) = %USERNAME

	OUTPUT_BLOCK DESCR /ROW=1 /COL=1 &
		/SOURCE=REPORT_PRINT_CONTROLS(CODE_DESCRIPTION)
END_FORM

TABLE_FORM CHOOSE_PRINTER_UNIVERSAL /ROW=10 /COL=5 /HEIGHT=10 /WIDTH=60 &
	/TABLE=REPORT_PRINT_CONTROLS &
	/SELECTION="A AND B" &
	/OPTIONS=NODELETE, MENU, NOINSERT &
	/WITH=REPORT_PRINT_CONTROLS(REPORT_NUMBER) STARTING WITH #ID &
	/WITH=REPORT_PRINT_CONTROLS(USERNAME) STARTING WITH "*"

	OUTPUT_BLOCK DESCR /ROW=1 /COL=1 &
		/SOURCE=REPORT_PRINT_CONTROLS(CODE_DESCRIPTION)
END_FORM