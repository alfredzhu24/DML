TITLE AP_U_016, "EFT Post File Creation Procedure"

PROCEDURE_FORM EFT_FILE_CREATION

	BEGIN_BLOCK DOCUMENTATION

		!	=====================================================
		!
		!
		!	(c) Copyright 1988-2005 Ross Systems, Inc.
		!	All Rights Reserved
		!
		!	This program is the proprietary and confidential information
		!	of Ross Systems, Inc. and may be used and disclosed only
		!	as authorized in a license agreement authorizing and
		!	controlling such use and disclosure
		!
		!	=====================================================
	END_BLOCK

	BEGIN_BLOCK DML_2

		#COMPANY_CODE			= PARAMETER("USER_COMPANY_CODE")
		#YES				= PARAMETER("LANGUAGE_YES")
		#NO				= PARAMETER("LANGUAGE_NO")
		#DOCUMENT_FORMAT_DETAIL		= PARAMETER("AP_DOCUMENT_FORMAT_DETAIL")
		#EFT_STATUS_UPDATE		= "P"
		#TTYPE_CP			= PARAMETER("TTYPE_CP")
		#PAYMENT_BY_CHECK		= PARAMETER("PAYMENT_BY_CHECK")
		AP_CONTROLS(COMPANY_CODE) 	= #COMPANY_CODE
		#MANUAL_PAYMENT_BATCH_NUMBER = 0
		#MP_BATCH_SEQUENCE_NUMBER = 0

		FIND IN COMPANY_CONTROLS /LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE

		IF  (%STATUS=%FAILURE)
		    MESSAGE/IDENTIFIER/BELL/WAIT P_00139
		    EXIT(%FAILURE)
		END_IF

		#NBR_PERIODS 		= COMPANY_CONTROLS(TOTAL_NUMBER_PERIODS)
		#COST_CENTER_SUBCLASS	= MASK("!-0@",COMPANY_CONTROLS(COST_CENTER_SUBCLASS))
		#INTERFUND		= COMPANY_CONTROLS(SYS_INTERFUND_IN_USE)
		#INC_POSTING_DATE	= COMPANY_CONTROLS(SYS_POSTING_DATE_REQD)
		#VALIDATE_POSTING_DATE	= COMPANY_CONTROLS(SYS_VALID_POSTING_DATE)
		#CO_TAX_ON_CASH		= COMPANY_CONTROLS(SYS_TAX_ON_CASH)
		#STORE_BASE2      	= COMPANY_CONTROLS(SYS_SECOND_BASE_IN_USE)

	END_BLOCK
	
	BEGIN_BLOCK GET_DATE_MASK
		#DEF_DATE_MASK = ""
		
		FIND IN SYS_COUNTRIES &
			/LOCK=NONE &
			/WITH=SYS_COUNTRY=COMPANY_CONTROLS(SYS_COUNTRY)

			IF (%STATUS<>%SUCCESS)
				MESSAGE/IDENTIFIER/BELL/WAIT P_12202, COMPANY_CONTROLS(SYS_COUNTRY)
			EXIT(%FAILURE)
		
			END_IF

		#DEF_DATE_MASK=SYS_COUNTRIES(SYS_DATE_MASK)

	END_BLOCK 

	BEGIN_BLOCK DML_2A 
	
		IF  (PARAMETER("COMPANY_SECURITY_ACTIVE") = #YES)
			FIND IN SECURITY_TRAN_TYPES_VT &
				/WITH=SOURCE_MODULE=(PARAMETER("MODULE_AP")) &
				/WITH=SECURITY_TRANSACTION_TYPE=#TTYPE_CP &
				/WITH=CREATE_TRANSACTIONS=#YES

			IF  (%STATUS = %FAILURE)
				MESSAGE/IDENTIFIER/BELL/WAIT P_00897,#TTYPE_CP
				EXIT
			END_IF
		END_IF
	END_BLOCK
	
	COMMIT
	PERFORM MAIN
	PERFORM DELETE_VTS
END_FORM                

FORM MAIN /ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
	/TITLE=(MESSAGE("P_51175"))

	START_TRANSACTION
		
	INPUT_BLOCK DIVISION /ROW=3 /COL=33 &
			/PROMPT=(FIELD_PROMPT(PAYMENT_DIVISION)) &
			/TARGET=#DIVISION &
			/USING=AP_CONTROLS(AP_DIVISION),REQUIRED &
			/LOV=SECURITY_PERIOD_ACCESS_VT(SYS_ACCESS_CODE,CODE_DESCRIPTION) &
			/LOV_WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/LOV_WITH=SOURCE_MODULE=(PARAMETER("MODULE_AP")) &
			/LOV_WITH=SYS_ALLOW_ACCESS=#YES

	BEGIN_BLOCK DIVISION_DESC

		FIND IN AP_CONTROLS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=AP_DIVISION=#DIVISION

		IF	(%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00354
			GOTO DIVISION
		END_IF

		FIND IN SECURITY_PERIOD_ACCESS_VT &
			/WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/WITH=SYS_ACCESS_CODE= #DIVISION &
			/WITH=SOURCE_MODULE=(PARAMETER("MODULE_AP"))

		IF  (%STATUS = %FAILURE)
		    MESSAGE/IDENTIFIER/BELL/WAIT P_00447
		    GOTO DIVISION
		END_IF

		IF  (SECURITY_PERIOD_ACCESS_VT(SYS_ALLOW_ACCESS) <> #YES)
		    MESSAGE/IDENTIFIER/BELL/WAIT P_00756
		    GOTO DIVISION
		END_IF


		#NO_PAST_PERIODS   	= SECURITY_PERIOD_ACCESS_VT(NUMBER_OF_PAST_PERIODS)
		#NO_FUTURE_PERIODS 	= SECURITY_PERIOD_ACCESS_VT(NUMBER_OF_FUTURE_PERIODS)

		#BASE_CURRENCY_CODE	= AP_CONTROLS(SYS_CURRENCY_CODE)
		#BASE_2_CURRENCY_CODE 	= AP_CONTROLS(SYS_SECOND_BASE_CURRENCY_CODE)
		#CURRENT_YEAR          	= AP_CONTROLS(CURRENT_YEAR)
		#CURRENT_PERIOD        	= AP_CONTROLS(CURRENT_PERIOD)
		#DEF_AP_SHORT_CODE	= AP_CONTROLS(AP_SHORT_CODE)
		#DEF_AP_FULL_ACCOUNT   	= AP_CONTROLS(AP_FULL_ACCOUNT)
		#CURRENCY_METHOD	= AP_CONTROLS(SYS_CURRENCY_METHOD)
		#DIV_TAX_ON_CASH	= AP_CONTROLS(SYS_TAX_ON_CASH)
		#DISCOUNTS_POSTED_AT	= AP_CONTROLS(DISCOUNTS_POSTED_AT)
		#DISCOUNT_FLAG		= AP_CONTROLS(DISCOUNT_FLAG)
		#PERIOD_CHECKED		= ""
		#YEAR_CHECKED		= ""
		#RUN_NUMBER_CHECKED= ""
		#POSTINGS_IN_BATCH	= #NO

		FIND IN SYS_CURRENCY_CODES &
			/LOCK=NONE &
			/WITH=SYS_CURRENCY_CODE=#BASE_CURRENCY_CODE

		#BASE_CURRENCY_DECIMAL	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
		#BASE_CURRENCY_MASK	= SYS_CURRENCY_CODES(SYS_CURRENCY_MASK)

	END_BLOCK

	BEGIN_BLOCK 2_BASE_DECIMAL
		FIND IN SYS_CURRENCY_CODES &
			/LOCK=NONE &
			/WITH=SYS_CURRENCY_CODE = #BASE_2_CURRENCY_CODE

		#BASE_2_CURRENCY_DECIMALS 	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
		#BASE_TO_BASE2_RATE		= SYS_CURRENCY_CODES(SYS_EURO_CURRENCY_RATE)

	OUTPUT_BLOCK DIV_DESC /ROW=3 /COL=36 &
		/SOURCE=(AP_CONTROLS(DIVISION_NAME))

	BEGIN_BLOCK CHECK_RUNS

		AP_CONTROLS_CHECK_RUNS(COMPANY_CODE) 	= #COMPANY_CODE
		AP_CONTROLS_CHECK_RUNS(AP_DIVISION) 	= #DIVISION

		INPUT_BLOCK  /ROW=4 /COL=33 &
			/PROMPT=(FIELD_PROMPT(PAYMENT_RUN_NUMBER)) &
			/TARGET=#RUN_NUMBER &
			/USING=AP_CONTROLS_CHECK_RUNS(PAYMENT_RUN_NUMBER),REQUIRED &
			/LOV=AP_CONTROLS_CHECK_RUNS(PAYMENT_RUN_NUMBER,PAYMENT_TYPE,BANK_CODE,PAYMENT_DATE) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=AP_DIVISION=#DIVISION &
			/LOV_WITH=STATUS_FLAG = #EFT_STATUS_UPDATE &
			/LOV_WITH=PAYMENT_TYPE <> #PAYMENT_BY_CHECK

		AP_CONTROLS_CHECK_RUNS(PAYMENT_RUN_NUMBER) 	= #RUN_NUMBER
	END_BLOCK

	BEGIN_BLOCK DOCUMENT_FORMAT
		INPUT_BLOCK  /ROW=5 /COL=33 &
			/PROMPT=(FIELD_PROMPT(PAYMENT_TYPE)) &
			/TARGET=#DOCUMENT_FORMAT &
			/USING=AP_CONTROLS_CHECK_RUNS(PAYMENT_TYPE),REQUIRED &
			/LOV=AP_CONTROLS_CHECK_RUNS(PAYMENT_TYPE,BANK_CODE,PAYMENT_DATE) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=AP_DIVISION=#DIVISION &
			/LOV_WITH=STATUS_FLAG = #EFT_STATUS_UPDATE &
			/LOV_WITH=PAYMENT_TYPE <> #PAYMENT_BY_CHECK &
			/LOV_WITH=PAYMENT_RUN_NUMBER=#RUN_NUMBER

		FIND IN AP_CONTROLS_CHECK_RUNS &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE = #COMPANY_CODE &
			/WITH=AP_DIVISION = #DIVISION &
			/WITH=PAYMENT_RUN_NUMBER = #RUN_NUMBER &
			/WITH=PAYMENT_TYPE = #DOCUMENT_FORMAT

		IF (%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_51165
			GOTO CHECK_RUNS
		END_IF

		IF	(AP_CONTROLS_CHECK_RUNS(STATUS_FLAG) <> #EFT_STATUS_UPDATE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_51178
			GOTO CHECK_RUNS
		END_IF

		FIND IN PAYMENT_TYPES &
			/LOCK=NONE &
			/WITH=PAYMENT_TYPE=AP_CONTROLS_CHECK_RUNS(PAYMENT_TYPE)

		IF (%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_51156,AP_CONTROLS_CHECK_RUNS(PAYMENT_TYPE)
			GOTO CHECK_RUNS
		END_IF

		IF (PAYMENT_TYPES(EFT_PAYMENT_TYPE) <> #YES)
			MESSAGE/IDENTIFIER/BELL/WAIT P_51157,AP_CONTROLS_CHECK_RUNS(PAYMENT_TYPE)
			GOTO CHECK_RUNS
		END_IF

		OUTPUT_BLOCK PAYMENT_TYPE /ROW=5 /COL=41 &
	       		/SOURCE=(PAYMENT_TYPES(CODE_DESCRIPTION))

		#PAYMENT_DATE     = AP_CONTROLS_CHECK_RUNS(PAYMENT_DATE)
	END_BLOCK

	BEGIN_BLOCK PERIOD

		IF ( #NO_PAST_PERIODS = 0 AND #NO_FUTURE_PERIODS = 0 )
		    #POSTING_PERIOD = #CURRENT_PERIOD
		    #POSTING_YEAR   = #CURRENT_YEAR
			
			OUTPUT_BLOCK CURR_PERIOD /ROW=6 /COL=33 &
				/SOURCE=(#POSTING_PERIOD) &
				/USING=AP_CONTROLS(CURRENT_PERIOD)

			OUTPUT_BLOCK  /ROW=6 /COL=36 &
				/SOURCE=(#POSTING_YEAR) &
				/USING=AP_CONTROLS(CURRENT_YEAR)
		ELSE
			PERFORM "GEMLB:LB_L_PERIOD_FROM_DATE" &
					(#COMPANY_CODE, &
					 #PAYMENT_DATE, &
					 #POSTING_PERIOD, &
					 #POSTING_YEAR)

			INPUT_BLOCK  /ROW=6 /COL=33 &
				/PROMPT=(MESSAGE("P_00526")) &
				/TARGET=#POSTING_PERIOD &
				/USING=AP_CONTROLS(CURRENT_PERIOD)
				
			IF (#POSTING_PERIOD = 0)                               
				MESSAGE/IDENTIFIER/BELL/WAIT P_39036           
				GOTO PERIOD
			END_IF

			IF (#POSTING_PERIOD > #NBR_PERIODS)
				MESSAGE/IDENTIFIER/BELL/WAIT P_12103,#NBR_PERIODS
		       	GOTO PERIOD
			END_IF

			INPUT_BLOCK  /ROW=6 /COL=36 &
				/TARGET=#POSTING_YEAR &
				/USING=AP_CONTROLS(CURRENT_YEAR)
		END_IF
	END_BLOCK

	BEGIN_BLOCK VALIDATE_PERIOD_YEAR
		PERFORM "GEMLB:LB_SECURITY_PERIOD_CHECK" &
					(PARAMETER("MODULE_AP"), &
					 #DIVISION, &
					 #POSTING_PERIOD, &
					 #POSTING_YEAR, &
					 #CURRENT_PERIOD, &
					 #CURRENT_YEAR)
		IF  (%STATUS = %FAILURE)
		    IF  (#NO_PAST_PERIODS = 0 AND #NO_FUTURE_PERIODS = 0)
				GOTO DIVISION
		    ELSE
				GOTO PERIOD
		    END_IF
		END_IF
		
		IF ( #PERIOD_CHECKED <> #POSTING_PERIOD OR &
			 #YEAR_CHECKED <> #POSTING_YEAR OR &
			 #RUN_NUMBER_CHECKED <> #RUN_NUMBER ) 
		
			#PERIOD_CHECKED 	= #POSTING_PERIOD
			#YEAR_CHECKED		= #POSTING_YEAR
			#RUN_NUMBER_CHECKED	= #RUN_NUMBER
			
			PERFORM CHECK_AP_TRANSACTIONS
			
			IF (%STATUS <> %EMPTY)
				MESSAGE/IDENTIFIER/BELL/WAIT P_13733
			END_IF
		END_IF
	END_BLOCK

	BEGIN_BLOCK GET_POSTING_DATE
             
		IF (#INC_POSTING_DATE = #YES)		

			FIND IN COMPANY_PERIOD_CONTROLS &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=CURRENT_YEAR=#POSTING_YEAR

			IF (%STATUS=%SUCCESS)

				#START_DATE = TABLE_DATA("COMPANY_PERIOD_CONTROLS","START_DATE_"&MASK("!-0@",#POSTING_PERIOD))
				#END_DATE = TABLE_DATA("COMPANY_PERIOD_CONTROLS","END_DATE_"&MASK("!-0@",#POSTING_PERIOD))
				
			END_IF
			#POSTING_DATE = #PAYMENT_DATE

			IF (DAYS(#POSTING_DATE) < DAYS(#START_DATE)) 
				#POSTING_DATE = #START_DATE
			ELSE
				IF (DAYS(#POSTING_DATE) > DAYS(#END_DATE))
					#POSTING_DATE = #END_DATE
				END_IF
			END_IF	
	    
			INPUT_BLOCK POSTING_DATE /ROW=6 /COL=55 &
				/PROMPT=(FIELD_PROMPT(POSTING_DATE)) &
				/TARGET=#POSTING_DATE &			      
				/USING=AP_TRANSACTIONS(POSTING_DATE) &
				/USE_IF=(#INC_POSTING_DATE = #YES)
				
			IF( DAYS(#PAYMENT_DATE) > DAYS(#POSTING_DATE))
				MESSAGE/IDENTIFIER/BELL/WAIT P_85039
				GOTO POSTING_DATE
			END_IF

			IF (#VALIDATE_POSTING_DATE = #YES)
				IF ((DAYS(#POSTING_DATE) < DAYS(#START_DATE)) OR (DAYS(#POSTING_DATE) > DAYS(#END_DATE)))
					MESSAGE/IDENTIFIER/BELL/WAIT P_83022,MASK(#DEF_DATE_MASK,#POSTING_DATE), &
						MASK(#DEF_DATE_MASK,#START_DATE),MASK(#DEF_DATE_MASK,#END_DATE)
						
					GOTO POSTING_DATE
				END_IF

				IF (DAYS(#PAYMENT_DATE) > DAYS(#POSTING_DATE))
					MESSAGE/IDENTIFIER/BELL/WAIT P_13592, #PAYMENT_DATE
					GOTO POSTING_DATE
				END_IF		
			END_IF
		ELSE
			#POSTING_DATE = #PAYMENT_DATE
		END_IF
	END_BLOCK

	BEGIN_BLOCK LOAD_VARIABLES
		#BANK_FULL_ACCOUNT		= AP_CONTROLS_CHECK_RUNS(BANK_FULL_ACCOUNT)
		#BANK_SHORT_CODE	 	= AP_CONTROLS_CHECK_RUNS(GL_BANK_SHORT_CODE)
		#BANK_CODE			= AP_CONTROLS_CHECK_RUNS(BANK_CODE)
		#EFT_PAYMENT_CURRENCY_METHOD	= AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD)

		IF	(#CURRENCY_METHOD = '0')
			#BANK_CURRENCY_CODE 		= #BASE_CURRENCY_CODE
			#CASH_CURRENCY_CODE 		= #BASE_CURRENCY_CODE
			#CURRENCY_CODE 	= #BASE_CURRENCY_CODE
			#CASH_BANK_CURRENCY_RATE 	= 1.0

			#BANK_CURRENCY_DECIMAL 		= #BASE_CURRENCY_DECIMAL
			#CASH_CURRENCY_DECIMAL 		= #BASE_CURRENCY_DECIMAL
		END_IF

		PERFORM CHECK_COST_CENTER_PATCH (#BANK_SHORT_CODE)
		#BANK_COST_CENTER_PATCHED = #COST_CENTER_PATCHED

		IF (AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "1" OR &
			AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "2")
			#BANK_CURRENCY_CODE		= AP_CONTROLS_CHECK_RUNS(SYS_BANK_CURRENCY_CODE)
			#CASH_CURRENCY_CODE		= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_CODE)
			#CASH_CURRENCY_RATE		= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATE)
			#CASH_RATE_AUTHORITY 		= AP_CONTROLS_CHECK_RUNS(SYS_RATE_AUTHORITY)
			#CASH_RATE_TYPE 		= AP_CONTROLS_CHECK_RUNS(SYS_RATE_TYPE)
			#CASH_CURRENCY_FIXED		= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_FIXED_FLAG)
			#CASH_CURRENCY_RATIO_INDIC	= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATIO_INDIC)

	  		FIND IN SYS_CURRENCY_CODES &
				/LOCK=NONE &
				/WITH=SYS_CURRENCY_CODE = #BANK_CURRENCY_CODE

			#BANK_CURRENCY_DECIMAL 	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)

			FIND IN SYS_CURRENCY_CODES &
				/LOCK=NONE &
				/WITH=SYS_CURRENCY_CODE=#CASH_CURRENCY_CODE

			#CASH_CURRENCY_DECIMAL	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
			#CASH_CURRENCY_MASK	= SYS_CURRENCY_CODES(SYS_CURRENCY_MASK)


			IF	(#CURRENCY_METHOD > '0')

				!Calculate the 2nd Rate
				PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT
				SYS_CURRENCY_CONTROL_VT(COMPANY_CODE)	= #COMPANY_CODE
				SYS_CURRENCY_CONTROL_VT(DIVISION)	= #DIVISION
				SYS_CURRENCY_CONTROL_VT(SOURCE_MODULE)	= (PARAMETER("MODULE_AP"))
				SYS_CURRENCY_CONTROL_VT(TRANSACTION_CURRENCY_CODE)	= #CASH_CURRENCY_CODE
				SYS_CURRENCY_CONTROL_VT(FIRST_CURRENCY_RATE)		= #CASH_CURRENCY_RATE
				SYS_CURRENCY_CONTROL_VT(CURRENCY_DATE)	= #PAYMENT_DATE
				SYS_CURRENCY_CONTROL_VT(RATE_OVERRIDE)	= #YES

				ADD TO SYS_CURRENCY_CONTROL_VT
				PERFORM "GEMLB:LB_S_L_CURRENCY_RATES"(#R_SUCCESS_STATUS,#R_MESSAGE)
				IF (#R_SUCCESS_STATUS <> #YES)
					ERROR/WAIT #R_MESSAGE
					EXIT(%FAILURE)
				END_IF  

				FIND IN SYS_CURRENCY_CONTROL_VT
				IF (%STATUS = %SUCCESS)
					#CASH_CURRENCY_2_RATE = SYS_CURRENCY_CONTROL_VT(CALCULATED_RATE)
				END_IF

				PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT

				IF	(#BANK_CURRENCY_CODE = #CASH_CURRENCY_CODE)
					#CASH_BANK_CURRENCY_RATE = 1.0
					#CASH_BANK_RATIO_INDIC = AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATIO_INDIC)
				END_IF

		 		IF	(#BANK_CURRENCY_CODE <> #CASH_CURRENCY_CODE)
					IF	(#BANK_CURRENCY_CODE = #BASE_CURRENCY_CODE)
						#CASH_BANK_CURRENCY_RATE = AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATE)
						#CASH_BANK_RATIO_INDIC = AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATIO_INDIC)
					ELSE
						#CURRENCY_CODE = ""
						#CURRENCY_RATE = ""
						#CURRENCY_DATE = ""

						PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT                   

						#CURRENCY_CODE = #CASH_CURRENCY_CODE
						#CURRENCY_2_CODE = #BANK_CURRENCY_CODE
						#CURRENCY_DATE = #PAYMENT_DATE
						#RATE_AUTHORITY = ""
						#RATE_TYPE = ""
						#CURRENCY_RATE = ""
						#RATE_OVERRIDE = "N"

						PERFORM LOAD_CURRENCY_CONTROL_VT

						FIND IN SYS_CURRENCY_CONTROL_VT
						IF(%STATUS = %FAILURE)
							EXIT(%FAILURE)
						END_IF

						#CURRENCY_RATIO_INDIC = SYS_CURRENCY_CONTROL_VT(CURR_RATIO_INDIC)
						#CURRENCY_RATE = SYS_CURRENCY_CONTROL_VT(FIRST_CURRENCY_RATE)

						#CASH_BANK_RATIO_INDIC 	= #CURRENCY_RATIO_INDIC
						#CASH_BANK_CURRENCY_RATE = #CURRENCY_RATE
					END_IF
				ELSE
					#CASH_BANK_CURRENCY_RATE = 1.0
					#CASH_BANK_RATIO_INDIC = PARAMETER("MULTIPLY_RATIO_INDIC")
				END_IF
			END_IF
		ELSE
			#BANK_CURRENCY_CODE		= ""
			#CASH_CURRENCY_CODE		= ""
			#CASH_CURRENCY_RATE		= 0
			#CASH_RATE_AUTHORITY 		= ""
			#CASH_RATE_TYPE 		= ""
			#CASH_CURRENCY_FIXED		= ""
			#CASH_CURRENCY_RATIO_INDIC	= ""
			#BANK_CURRENCY_DECIMAL 		= 0
		END_IF
	END_BLOCK

	OUTPUT_BLOCK BANK_CODE /ROW=7 /COL=33 &
			/PROMPT=(FIELD_PROMPT(BANK_CODE)) &
			/SOURCE=(AP_CONTROLS_CHECK_RUNS(BANK_CODE))

	OUTPUT_BLOCK SYS_CURRENCY_CODE /ROW=7 /COL=40 &
			/SOURCE=(AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_CODE)) &
			/USE_IF=(AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "1" OR &
				AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "2")

	OUTPUT_BLOCK SYS_CURRENCY_RATE /ROW=7 /COL=47 &
			/SOURCE=(AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATE)) &
			/USE_IF=(AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "1" OR &
				AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "2")

        MENU_BLOCK SELECTION /ROW=17 /COL=30 &
		/SOURCE=(MESSAGE("P_00731")) /NOREPEAT &
		/ITEM=(MESSAGE("P_00731")),(MESSAGE("P_54103")),(GOTO PROCEED) &
		/ITEM=(MESSAGE("P_00067")),(MESSAGE("P_00087")),(GOTO BATCH) &
		/ITEM=(MESSAGE("P_00257")),(MESSAGE("P_00263")),(GOTO DIVISION)

	BEGIN_BLOCK PROCEED

		COMMIT
		PERFORM CREATE_TRANSACTIONS
		EXIT
	END_BLOCK

	BEGIN_BLOCK BATCH

		PERFORM/BATCH 'GEMSYS:SYS_COMPANY_SETUP' BATCH_ENTRY ( &
				#COMPANY_CODE, &
				"GEMAP:AP_U_EFT_POST_CREATION_PROCEDURE", &
				'BATCH_SETUP', &
				#COMPANY_CODE,#DIVISION,#RUN_NUMBER,#DOCUMENT_FORMAT,#POSTING_PERIOD,#POSTING_YEAR,#POSTING_DATE)
		EXIT
	END_BLOCK
END_FORM


PROCEDURE_FORM BATCH_SETUP (#P1,#P2,#P3,#P4,#P5,#P6,#P7)

        BEGIN_BLOCK PROCESS

		#COMPANY_CODE 				= #P1
		#DIVISION				= #P2
		#RUN_NUMBER				= #P3
		#DOCUMENT_FORMAT			= #P4
		#POSTING_PERIOD				= #P5
		#POSTING_YEAR				= #P6
		#POSTING_DATE			= #P7

		PERFORM SETUP_VARIABLES
		IF (%STATUS = %FAILURE)
			EXIT(%FAILURE)
		END_IF

		PERFORM CREATE_TRANSACTIONS
	END_BLOCK
END_FORM


PROCEDURE_FORM CREATE_TRANSACTIONS

	BEGIN_BLOCK TRANSACTIONS

		START_TRANSACTION

		#REG_LINE = 0
		FIND IN AP_TRANSACTION_TYPES &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=TRANSACTION_TYPE=#TTYPE_CP

		#DORC_CP = AP_TRANSACTION_TYPES(DORC_INDICATOR)

		FIND IN AP_DOCUMENT_FORMATS &
			/LOCK=NONE &
			/WITH=AP_DOCUMENT_FORMAT = #DOCUMENT_FORMAT

		IF  (%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_51027, #DOCUMENT_FORMAT
			EXIT(%FAILURE)
		END_IF

		#STATUS_ACTIVE		 	= PARAMETER("STATUS_ACTIVE")

		PERFORM PROCESS_AP_EFT_PAYMENT_HEADERS
		IF  (%STATUS = %FAILURE)
			ROLLBACK
			EXIT(%FAILURE)
		END_IF

		COMMIT

	END_BLOCK

	BEGIN_BLOCK UPDATE_MANUAL_PAYMENT_RECORD
		IF	(#MANUAL_PAYMENT_BATCH_NUMBER <> '0')

			START_TRANSACTION

			FIND IN MANUAL_PAYMENTS &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=AP_DIVISION=#DIVISION &
				/WITH=MANUAL_PAYMENT_BATCH_NUMBER=#MANUAL_PAYMENT_BATCH_NUMBER

			MANUAL_PAYMENTS(ENTERED_MANUAL_PAYMENT_TOTAL)=#MP_CURRENCY
			MANUAL_PAYMENTS(BATCH_MP_TOTAL)=#MP_CURRENCY
			MANUAL_PAYMENTS(STATUS_FLAG) = (PARAMETER("STATUS_APPROVE"))

			COMMIT

			MESSAGE/IDENTIFIER/BELL/WAIT P_30043,#MANUAL_PAYMENT_BATCH_NUMBER

		END_IF
	END_BLOCK

	BEGIN_BLOCK CLEAR_FILES

		START_TRANSACTION

		PERFORM DELETE_PAYMENT_HEADERS_AND_LINES

		IF 	(%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32015
			ROLLBACK
			EXIT(%FAILURE)
		END_IF

		PERFORM DELETE_EFT_RUN_RECORD

		IF 	(%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32014
			ROLLBACK
			EXIT(%FAILURE)
		END_IF

		COMMIT
	END_BLOCK

END_FORM


PROCEDURE_FORM PROCESS_AP_EFT_PAYMENT_HEADERS &
	/TABLE=AP_EFT_PAYMENT_HEADERS &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=AP_DIVISION=#DIVISION &
	/WITH=PAYMENT_RUN_NUMBER=#RUN_NUMBER &
	/WITH=PAYMENT_TYPE=#DOCUMENT_FORMAT &
	/SORTED_BY=PAYEE_NUMBER

	BEGIN_BLOCK CURRENCY_BY_PAYEE

		IF (#CURRENCY_METHOD > 0 AND &
			#EFT_PAYMENT_CURRENCY_METHOD	= "3")

			#CURRENCY_CODE 	= AP_EFT_PAYMENT_HEADERS(SYS_CURRENCY_CODE)
			#DEFAULT_AUTH	= AP_EFT_PAYMENT_HEADERS(SYS_RATE_AUTHORITY)
			#DEFAULT_TYPE	= AP_EFT_PAYMENT_HEADERS(SYS_RATE_TYPE)

			PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT

			#COMPANY_CODE = #COMPANY_CODE
			#DIVISION = #DIVISION
			#CURRENCY_DATE = #PAYMENT_DATE
			#RATE_AUTHORITY = #DEFAULT_AUTH
			#RATE_TYPE = #DEFAULT_TYPE
			#RATE_OVERRIDE = "N"

			PERFORM LOAD_CURRENCY_CONTROL_VT

			FIND IN SYS_CURRENCY_CONTROL_VT
			IF(%STATUS=%FAILURE)
				EXIT(%FAILURE)
			END_IF

			#CURRENCY_RATIO_INDIC = SYS_CURRENCY_CONTROL_VT(CURR_RATIO_INDIC)
			#RATE_AUTHORITY = SYS_CURRENCY_CONTROL_VT(RATE_AUTHORITY)
			#RATE_TYPE = SYS_CURRENCY_CONTROL_VT(RATE_TYPE)
			#CURRENCY_FIXED = SYS_CURRENCY_CONTROL_VT(FIXED_RATE_INDIC)
			#CURRENCY_DECIMAL = SYS_CURRENCY_CONTROL_VT(TRANSACTION_CURRENCY_DECIMALS)

		   	#CASH_CURRENCY_CODE 			= AP_EFT_PAYMENT_HEADERS(SYS_CURRENCY_CODE)
			#CASH_CURRENCY_RATE 			= AP_EFT_PAYMENT_HEADERS(SYS_CURRENCY_RATE)
			#CASH_CURRENCY_RATIO_INDIC 		= #CURRENCY_RATIO_INDIC

			#BANK_CURRENCY_CODE     		= AP_EFT_PAYMENT_HEADERS(SYS_CURRENCY_CODE)
			#CASH_RATE_AUTHORITY			= #RATE_AUTHORITY
			#CASH_RATE_TYPE				= #RATE_TYPE
			#CASH_CURRENCY_FIXED			= #CURRENCY_FIXED

			#CASH_BANK_RATIO_INDIC    		= #CURRENCY_RATIO_INDIC

			#BANK_CURRENCY_DECIMAL 			= #CURRENCY_DECIMAL
			#CASH_BANK_CURRENCY_RATE   		= 1.0
		END_IF

	END_BLOCK

	BEGIN_BLOCK COUNT

		#CC_CURRENCY 		= 0
		#CC_BASE 		= 0
		#CP_AMOUNT_CURRENCY 	= 0
		#CP_AMOUNT_BASE 	= 0
		#CP_AMOUNT_2_BASE 	= 0
		#CP_CURRENCY_GAIN 	= 0
		#CP_CURRENCY_LOSS 	= 0
		#CD_AMOUNT 		= 0
		#CD_AMOUNT_BASE 	= 0
		#CD_AMOUNT_2_BASE 	= 0
		#CD_ALLOC_BASE 		= 0
		#CD_ALLOC_2_BASE 	= 0

		IF (#EFT_PAYMENT_CURRENCY_METHOD	<> "4")

	 		IF (AP_DOCUMENT_FORMATS(AP_DOCUMENT_SUMMARY_OR_DETAIL) = #DOCUMENT_FORMAT_DETAIL)
				PERFORM CREATE_REGISTER_FROM_LINES
			ELSE
				PERFORM CREATE_REGISTER
			END_IF

	 		IF 	(%STATUS = %FAILURE)
				MESSAGE/IDENTIFIER/BELL/WAIT P_32121
				EXIT(%FAILURE)
	  		END_IF
		END_IF

		PERFORM CREATE_CP_RECORD_BY_VENDOR

		IF 	(%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_	
			 EXIT(%FAILURE)
		END_IF

	END_BLOCK

END_FORM


PROCEDURE_FORM CREATE_CP_RECORD_BY_VENDOR &
	/TABLE=AP_EFT_PAYMENT_LINES &
	/JOINED_TO=AP_EFT_PAYMENT_HEADERS &
	/SORTED_BY=(SYS_PAYMENT_CURRENCY_CODE,AP_DIVISION,VENDOR_NUMBER,-DORC_INDICATOR, COST_CENTER) &
	/BREAK=CLEAR_AND_LOAD_SOURCE, DO_ALLOC_AND_ADD, (AP_EFT_PAYMENT_LINES(SYS_PAYMENT_CURRENCY_CODE) & &
		AP_EFT_PAYMENT_LINES(AP_DIVISION) & AP_EFT_PAYMENT_LINES(VENDOR_NUMBER)) 

	BEGIN_BLOCK PAYMENT_BY_TRANSACTION

		IF (#CURRENCY_METHOD > 0 AND &
			#EFT_PAYMENT_CURRENCY_METHOD	= "4")

			PERFORM CREATE_REGISTER_LINE
			IF 	(%STATUS <> %SUCCESS)
				EXIT(%FAILURE)
			END_IF
		END_IF
	END_BLOCK

	BEGIN_BLOCK ALLOCATIONS_BY_LINE
		IF	(AP_EFT_PAYMENT_LINES(TRANSACTION_TYPE) = (PARAMETER("TTYPE_MP")))
			PERFORM CREATE_MANUAL_PAYMENT_RECORD

			IF 	(%STATUS = %FAILURE)
				MESSAGE/IDENTIFIER/BELL/WAIT P_32118
				EXIT(%FAILURE)
				! create Manual Payment Rec
			END_IF
		ELSE

			! We do not need to do all of this for a manual
			! payment since there is no allocation and
			! therefore no discount and no currency variance

			PERFORM ACCRUE_VALUES
			PERFORM LOAD_TARGET_DATA_VT

			PERFORM "GEMLB:LB_S_L_MAKE_ALLOCATIONS" 
			IF ( %STATUS <> %SUCCESS ) 
				EXIT(%FAILURE)
			END_IF 	
		END_IF 
	
	END_BLOCK 

	BEGIN_BLOCK INITIALIZE
	END_BLOCK

END_FORM

PROCEDURE_FORM DO_ALLOC_AND_ADD

	BEGIN_BLOCK ADD_CP
		! If CP Amount Currency = 0 then it's been an MP only
		! TARGET_DATA_VTs are not added for MP's
		! So ALLOC and add CP only if TARGET_DATA_VTs exist 
		IF	(#CP_AMOUNT_CURRENCY <> 0.0)
			
			FIND IN SOURCE_DATA_VT
			
			IF (SOURCE_DATA_VT(TOTAL_ALLOCATED_CASH) <> #CP_AMOUNT_CURRENCY)
				EXIT (%FAILURE)
			END_IF
						
			
			PERFORM "GEMLB:LB_S_L_DO_ALLOCATIONS" 
			IF ( %STATUS <> %SUCCESS ) 
				EXIT(%FAILURE)
			END_IF 	

			PERFORM ADD_TRANSACTION_CP
			IF ( %STATUS <> %SUCCESS ) 
				EXIT(%FAILURE)
			END_IF 	
	 	END_IF 
	END_BLOCK 
	 
	BEGIN_BLOCK END_BLOCK 
	END_BLOCK 
END_FORM 

PROCEDURE_FORM BEFORE_CP_RECORD

	BEGIN_BLOCK INITIALIZE
		#CC_CURRENCY = 0.00
		#CC_BASE = 0.00
	END_BLOCK

	BEGIN_BLOCK SAVE_DETAILS

		#COST_CENTER= AP_EFT_PAYMENT_LINES(COST_CENTER)

		FIND IN AP_TRANSACTION_TYPES &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=TRANSACTION_TYPE=#TTYPE_CP

		IF	(%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00878,#TTYPE_CP
			EXIT(%FAILURE)
		END_IF

		#CP_AP_TRANSACTION_NUMBER		= AP_TRANSACTION_TYPES(AP_TRANSACTION_NUMBER)
		AP_TRANSACTION_TYPES(AP_TRANSACTION_NUMBER) 	= #CP_AP_TRANSACTION_NUMBER + 1
		#AP_SHORT_CODE   = #DEF_AP_SHORT_CODE
		#AP_FULL_ACCOUNT = #DEF_AP_FULL_ACCOUNT
		#TAX_ON_CASH 		= #NO

		FIND IN VENDORS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=AP_DIVISION=#DIVISION &
			/WITH=VENDOR_NUMBER=AP_EFT_PAYMENT_LINES(VENDOR_NUMBER)

		IF	(%STATUS <> %FAILURE)
			IF  ((VENDORS(AP_SHORT_CODE) <> "") OR (VENDORS(AP_FULL_ACCOUNT) <> ""))
				#AP_SHORT_CODE            = VENDORS(AP_SHORT_CODE)
				#AP_FULL_ACCOUNT          = VENDORS(AP_FULL_ACCOUNT)
			END_IF
	
			IF (#CO_TAX_ON_CASH = #YES AND #DIV_TAX_ON_CASH = #YES AND VENDORS(SYS_TAX_ON_CASH) = #YES)
				#TAX_ON_CASH = #YES
			END_IF
		END_IF

		FIND IN PAYEES &
			/LOCK=NONE &
			/WITH=COMPANY_CODE = #COMPANY_CODE &
			/WITH=AP_DIVISION = #DIVISION &
			/WITH=PAYEE_NUMBER = AP_EFT_PAYMENT_LINES(PAYEE_NUMBER)
	
	END_BLOCK

	BEGIN_BLOCK PAYMENT_BY_TRANSACTION

		IF (#CURRENCY_METHOD > 0 AND &
			#EFT_PAYMENT_CURRENCY_METHOD	= "4")

			#CURRENCY_CODE 			= AP_EFT_PAYMENT_LINES(SYS_PAYMENT_CURRENCY_CODE)
			#DEFAULT_AUTH			= AP_EFT_PAYMENT_LINES(SYS_RATE_AUTHORITY)
			#DEFAULT_TYPE			= AP_EFT_PAYMENT_LINES(SYS_RATE_TYPE)

			PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT                   
       	
			#COMPANY_CODE = #COMPANY_CODE
			#DIVISION = #DIVISION
			#CURRENCY_DATE = #PAYMENT_DATE
			#RATE_AUTHORITY = #DEFAULT_AUTH
			#RATE_TYPE = #DEFAULT_TYPE
			#RATE_OVERRIDE = "N"

			PERFORM LOAD_CURRENCY_CONTROL_VT

			FIND IN SYS_CURRENCY_CONTROL_VT
			IF(%STATUS=%FAILURE)
				EXIT(%FAILURE)
			END_IF

			#CURRENCY_RATIO_INDIC = SYS_CURRENCY_CONTROL_VT(CURR_RATIO_INDIC)
			#RATE_AUTHORITY = SYS_CURRENCY_CONTROL_VT(RATE_AUTHORITY)
			#RATE_TYPE = SYS_CURRENCY_CONTROL_VT(RATE_TYPE)
			#CURRENCY_FIXED = SYS_CURRENCY_CONTROL_VT(FIXED_RATE_INDIC)
			#CURRENCY_DECIMAL = SYS_CURRENCY_CONTROL_VT(TRANSACTION_CURRENCY_DECIMALS)

		   	#CASH_CURRENCY_CODE 			= AP_EFT_PAYMENT_LINES(SYS_PAYMENT_CURRENCY_CODE)
			#CASH_CURRENCY_RATIO_INDIC 		= #CURRENCY_RATIO_INDIC

			#BANK_CURRENCY_CODE     		= AP_EFT_PAYMENT_LINES(SYS_PAYMENT_CURRENCY_CODE)
			#CASH_CURRENCY_RATE  			= AP_EFT_PAYMENT_LINES(SYS_CASH_RATE)
			#CASH_RATE_AUTHORITY			= #RATE_AUTHORITY
			#CASH_RATE_TYPE				= #RATE_TYPE
			#CASH_CURRENCY_FIXED			= #CURRENCY_FIXED
			#CASH_CURRENCY_RATIO_INDIC    		= #CURRENCY_RATIO_INDIC

			#CASH_BANK_RATIO_INDIC    		= #CURRENCY_RATIO_INDIC

			#BANK_CURRENCY_DECIMAL 			= #CURRENCY_DECIMAL
			#CASH_BANK_CURRENCY_RATE   		= 1.0

		END_IF
	END_BLOCK

	BEGIN_BLOCK GET_SOURCE_TO_ALLOC 
		PERFORM TOTAL_SOURCE_TO_ALLOC
	END_BLOCK 

END_FORM


PROCEDURE_FORM ADD_TRANSACTION_CP

	BEGIN_BLOCK CREATE_CP_RECORD

		IF( #CP_AMOUNT_CURRENCY = 0.0) EXIT
		
		CLEAR_BUFFER AP_TRANSACTIONS

		AP_TRANSACTIONS(COMPANY_CODE)         		= SOURCE_DATA_VT(COMPANY_CODE)
		AP_TRANSACTIONS(AP_DIVISION)       		= SOURCE_DATA_VT(DIVISION)
		AP_TRANSACTIONS(ORIG_INVOICE_DIVISION)		= SOURCE_DATA_VT(DIVISION)
		AP_TRANSACTIONS(AP_TRANSACTION_NUMBER)   	= SOURCE_DATA_VT(S_TRANSACTION_NUMBER)
		AP_TRANSACTIONS(BATCH_NUMBER)			= SOURCE_DATA_VT(S_TRANSACTION_NUMBER)
		AP_TRANSACTIONS(TRANSACTION_TYPE)     		= SOURCE_DATA_VT(S_TRANSACTION_TYPE)
		AP_TRANSACTIONS(YEAR)                 		= SOURCE_DATA_VT(POSTING_YEAR)
		AP_TRANSACTIONS(PERIOD)               		= SOURCE_DATA_VT(POSTING_PERIOD)
		AP_TRANSACTIONS(TRANSACTION_DATE) 		= SOURCE_DATA_VT(SOURCE_PAYMENT_DATE)
		AP_TRANSACTIONS(POSTING_DATE)     		= SOURCE_DATA_VT(ALLOCATION_DATE)
		AP_TRANSACTIONS(ALLOCATION_DATE)  		= SOURCE_DATA_VT(ALLOCATION_DATE)
		AP_TRANSACTIONS(DUE_DATE)             		= SOURCE_DATA_VT(SOURCE_PAYMENT_DATE)
		AP_TRANSACTIONS(TRANSACTION_DESCRIPTION) 	= &
			(MESSAGE("P_36081",AP_EFT_PAYMENT_HEADERS(PAYMENT_TYPE), " ", &
			AP_EFT_PAYMENT_HEADERS(PAYMENT_RUN_NUMBER)))
		AP_TRANSACTIONS(VENDOR_NUMBER)     		= SOURCE_DATA_VT(VENDOR_NUMBER)
		AP_TRANSACTIONS(PAYEE_NUMBER)      		= SOURCE_DATA_VT(PAYEE_NUMBER)
		AP_TRANSACTIONS(DORC_INDICATOR)    		= SOURCE_DATA_VT(SOURCE_DORC)
		AP_TRANSACTIONS(LAST_ALLOCATION_YEAR)		= SOURCE_DATA_VT(POSTING_YEAR)
		AP_TRANSACTIONS(LAST_ALLOCATION_PERIOD)		= SOURCE_DATA_VT(POSTING_PERIOD)
		AP_TRANSACTIONS(VENDOR_REFERENCE)   		= SOURCE_DATA_VT(PAYMENT_RUN_NUMBER) & "/" & #REG_LINE
		AP_TRANSACTIONS(DOCUMENT_REFERENCE)		= SOURCE_DATA_VT(PAYMENT_RUN_NUMBER)
		AP_TRANSACTIONS(HOLD_FLAG)			= ""
		AP_TRANSACTIONS(PAYMENT_RUN_NUMBER)		= SOURCE_DATA_VT(PAYMENT_RUN_NUMBER)
		AP_TRANSACTIONS(PAYMENT_PRIORITY)  		= 0
		AP_TRANSACTIONS(PAYMENT_TYPE)			= AP_EFT_PAYMENT_HEADERS(PAYMENT_TYPE)
		AP_TRANSACTIONS(BANK_CODE)			= #BANK_CODE
		AP_TRANSACTIONS(GL_POSTINGS_IN_BATCH)		= #NO
		AP_TRANSACTIONS(SYS_CURRENCY_CODE)		= SOURCE_DATA_VT(SOURCE_CURR_CODE)
		AP_TRANSACTIONS(SYS_CURRENCY_RATE)		= SOURCE_DATA_VT(SOURCE_TO_BASE_RATE)
		AP_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC)	= SOURCE_DATA_VT(SOURCE_TO_BASE_RATIO)
		IF	(#STORE_BASE2 = #YES)
			AP_TRANSACTIONS(SYS_CURRENCY_2_RATE)	= SOURCE_DATA_VT(SOURCE_TO_BASE2_RATE)
			AP_TRANSACTIONS(SYS_CURRENCY_2_RATIO_INDIC) = PARAMETER("MULTIPLY_RATIO_INDIC")
		END_IF
		AP_TRANSACTIONS(SYS_RATE_TYPE)			= #CASH_RATE_TYPE
		AP_TRANSACTIONS(SYS_RATE_AUTHORITY)		= #CASH_RATE_AUTHORITY
		AP_TRANSACTIONS(SYS_CURRENCY_FIXED_FLAG)	= #CASH_CURRENCY_FIXED
		AP_TRANSACTIONS(SYS_BASE_CURRENCY_CODE)		= SOURCE_DATA_VT(BASE_CURR_CODE)
		AP_TRANSACTIONS(CASH_DISCOUNT)			= ""
		AP_TRANSACTIONS(AP_TRAN_TOTAL_CURRENCY) 	= SOURCE_DATA_VT(TOTAL_ALLOCATED_CASH)
		AP_TRANSACTIONS(AP_ALLOCATED_CURRENCY) 		= SOURCE_DATA_VT(TOTAL_ALLOCATED_CASH)

		IF	(#CURRENCY_METHOD > '0')
			AP_TRANSACTIONS(AP_ALLOCATED_BASE) 	= SOURCE_DATA_VT(TOTAL_ALLOCATED_BASE)
			AP_TRANSACTIONS(AP_TRAN_TOTAL_BASE) 	= SOURCE_DATA_VT(TOTAL_ALLOCATED_BASE)
			IF	(#STORE_BASE2 = #YES)
				AP_TRANSACTIONS(AP_TRAN_TOTAL_2_BASE) 	= SOURCE_DATA_VT(TOTAL_ALLOCATED_BASE2)
				AP_TRANSACTIONS(AP_ALLOCATED_2_BASE) 	= SOURCE_DATA_VT(TOTAL_ALLOCATED_BASE2)
			END_IF
		END_IF

		AP_TRANSACTIONS(AP_PAYMENT_ANALYSIS_1)	= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_1)
		AP_TRANSACTIONS(AP_PAYMENT_ANALYSIS_2)	= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_2)
		AP_TRANSACTIONS(AP_PAYMENT_ANALYSIS_3)	= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_3)
		AP_TRANSACTIONS(AP_PAYMENT_ANALYSIS_4)	= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_4)
		AP_TRANSACTIONS(AP_PAYMENT_ANALYSIS_5)	= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_5)

		AP_TRANSACTIONS(CONTROL_ACCOUNT_NUMBER)	= SOURCE_DATA_VT(CONTROL_ACCOUNT)
		AP_TRANSACTIONS(CONTROL_SHORT_CODE)	= SOURCE_DATA_VT(CONTROL_SHORT_CODE)

		ADD TO AP_TRANSACTIONS

		IF 	(%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32123
			EXIT(%FAILURE)
		END_IF
	END_BLOCK

	BEGIN_BLOCK ADD_EFT_REGISTER_LINE
	!Record the associated CP transaction type and number against 
	!the EFT Register Payment Run number 

		CLEAR_BUFFER AP_EFT_REGISTER_LINES

		AP_EFT_REGISTER_LINES(COMPANY_CODE) = SOURCE_DATA_VT(COMPANY_CODE)
		AP_EFT_REGISTER_LINES(AP_DIVISION) = SOURCE_DATA_VT(DIVISION)
		AP_EFT_REGISTER_LINES(BANK_CODE) = #BANK_CODE
		AP_EFT_REGISTER_LINES(PAYMENT_TYPE) = AP_EFT_PAYMENT_HEADERS(PAYMENT_TYPE)
		AP_EFT_REGISTER_LINES(PAYMENT_RUN_NUMBER) = SOURCE_DATA_VT(PAYMENT_RUN_NUMBER)
		AP_EFT_REGISTER_LINES(AP_EFT_REGISTER_SEQ) = #REG_LINE
		AP_EFT_REGISTER_LINES(TRANSACTION_TYPE) = SOURCE_DATA_VT(S_TRANSACTION_TYPE)
		AP_EFT_REGISTER_LINES(TRANSACTION_NUMBER) = SOURCE_DATA_VT(S_TRANSACTION_NUMBER)

		ADD TO AP_EFT_REGISTER_LINES
		IF      (%STATUS <> %SUCCESS) EXIT (%FAILURE)
	END_BLOCK

	BEGIN_BLOCK GL_POSTINGS_FOR_CP 
		PERFORM CREATE_GL_POSTINGS_FOR_CP
		IF 	(%STATUS = %FAILURE)
			EXIT(%FAILURE)
  		END_IF
	END_BLOCK

	BEGIN_BLOCK CLEAR
		#CP_AMOUNT_CURRENCY = 0
		#CP_CURRENCY_GAIN = 0
		#CP_CURRENCY_LOSS = 0
		#CP_AMOUNT_BASE = 0
		#CP_AMOUNT_2_BASE = 0
		#CD_AMOUNT_BASE = 0
		#CD_AMOUNT_2_BASE = 0
		#CD_AMOUNT = 0
		#CD_ALLOC_BASE = 0
		#CD_ALLOC_2_BASE = 0
	END_BLOCK

	BEGIN_BLOCK UPDATE_VENDORS_RECORD

		FIND IN VENDORS &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=AP_DIVISION=AP_TRANSACTIONS(AP_DIVISION) &
			/WITH=VENDOR_NUMBER=AP_TRANSACTIONS(VENDOR_NUMBER)

		IF (%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32328
			EXIT (%FAILURE)
		END_IF

		IF (DAYS(VENDORS(LAST_PAYMENT_DATE)) < DAYS(#PAYMENT_DATE))
			VENDORS(LAST_PAYMENT_DATE) = #PAYMENT_DATE
		END_IF

	END_BLOCK

END_FORM


PROCEDURE_FORM CREATE_REGISTER

	BEGIN_BLOCK CREATE

		CLEAR_BUFFER AP_EFT_REGISTER

		#REG_LINE 					= #REG_LINE + 1

		AP_EFT_REGISTER(COMPANY_CODE)			= AP_EFT_PAYMENT_HEADERS(COMPANY_CODE)
		AP_EFT_REGISTER(AP_DIVISION)			= AP_EFT_PAYMENT_HEADERS(AP_DIVISION)
		AP_EFT_REGISTER(PAYMENT_TYPE)			= AP_EFT_PAYMENT_HEADERS(PAYMENT_TYPE)
		AP_EFT_REGISTER(AP_EFT_REGISTER_SEQ)		= #REG_LINE
		AP_EFT_REGISTER(BANK_CODE)			= #BANK_CODE
		AP_EFT_REGISTER(AP_EFT_PAYMENT_REF)		= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT_NAME)
		AP_EFT_REGISTER(PAYEE_NUMBER)			= AP_EFT_PAYMENT_HEADERS(PAYEE_NUMBER)
      		AP_EFT_REGISTER(PAYMENT_DATE)			= AP_EFT_PAYMENT_HEADERS(PAYMENT_DATE)
		AP_EFT_REGISTER(PAYMENT_RUN_NUMBER)		= AP_EFT_PAYMENT_HEADERS(PAYMENT_RUN_NUMBER)
		AP_EFT_REGISTER(AP_PAYMENT_CURRENCY)		= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_CURRENCY)
		AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC)	= #CASH_BANK_RATIO_INDIC

		IF	(#CURRENCY_METHOD > '0')
			AP_EFT_REGISTER(AP_PAYMENT_BASE) 	= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_BASE)
			
			IF(#STORE_BASE2 = #YES)
				AP_EFT_REGISTER(AP_PAYMENT_2_BASE) = AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_2_BASE)
			END_IF

		END_IF
		IF (AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC) <> PARAMETER("MULTIPLY_RATIO_INDIC"))
			AP_EFT_REGISTER(AP_PAYMENT_BANK_CURRENCY) = ROUND(AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_CURRENCY)/ &
				#CASH_BANK_CURRENCY_RATE,#BANK_CURRENCY_DECIMAL)
		ELSE
			AP_EFT_REGISTER(AP_PAYMENT_BANK_CURRENCY) = ROUND(AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_CURRENCY) * &
				#CASH_BANK_CURRENCY_RATE,#BANK_CURRENCY_DECIMAL)
		END_IF

		AP_EFT_REGISTER(SYS_CURRENCY_CODE) 		= #BANK_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_CURRENCY_RATE)		= #CASH_CURRENCY_RATE
		AP_EFT_REGISTER(SYS_BASE_CURRENCY_CODE) 	= #BASE_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_PAYMENT_CURRENCY_CODE) 	= #CASH_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_CASH_BANK_CURRENCY_RATE)	= #CASH_BANK_CURRENCY_RATE
		AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC)	= #CASH_BANK_RATIO_INDIC

		AP_EFT_REGISTER(STATUS_FLAG) 	     		= #STATUS_ACTIVE
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_1)		= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_1)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_2)		= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_2)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_3)		= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_3)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_4)		= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_4)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_5)		= AP_EFT_PAYMENT_HEADERS(AP_PAYMENT_ANALYSIS_5)
		AP_EFT_REGISTER(PAYEE_BANK_SORT_CODE)		= AP_EFT_PAYMENT_HEADERS(BANK_SORT_CODE)
		AP_EFT_REGISTER(PAYEE_BANK_ACCOUNT)		= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT)
		AP_EFT_REGISTER(PAYEE_BANK_ACCOUNT_NAME)	= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT_NAME)
		AP_EFT_REGISTER(PAYEE_BANK_NAME)		= AP_EFT_PAYMENT_HEADERS(BANK_NAME)

		AP_EFT_REGISTER(SYS_RATE_AUTHORITY)		= #CASH_RATE_AUTHORITY
		AP_EFT_REGISTER(SYS_RATE_TYPE)			= #CASH_RATE_TYPE
		AP_EFT_REGISTER(SYS_CURRENCY_FIXED_FLAG)	= #CASH_CURRENCY_FIXED
		AP_EFT_REGISTER(SYS_CURRENCY_RATIO_INDIC)	= #CASH_CURRENCY_RATIO_INDIC
		AP_EFT_REGISTER(SYS_CURRENCY_DATE)		= AP_EFT_PAYMENT_HEADERS(SYS_CURRENCY_DATE)
		ADD TO AP_EFT_REGISTER
		

		IF 	(%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32012
			EXIT(%FAILURE)
		END_IF
	END_BLOCK

END_FORM

PROCEDURE_FORM CREATE_REGISTER_FROM_LINES &
	/TABLE=AP_EFT_PAYMENT_LINES &
	/JOINED_TO = AP_EFT_PAYMENT_HEADERS &
	/SORTED_BY=(VENDOR_NUMBER)

	BEGIN_BLOCK CREATE

		CLEAR_BUFFER AP_EFT_REGISTER

		#REG_LINE 					= #REG_LINE + 1

		AP_EFT_REGISTER(COMPANY_CODE)			= AP_EFT_PAYMENT_LINES(COMPANY_CODE)
		AP_EFT_REGISTER(AP_DIVISION)			= AP_EFT_PAYMENT_LINES(AP_DIVISION)
		AP_EFT_REGISTER(PAYMENT_TYPE)			= AP_EFT_PAYMENT_LINES(PAYMENT_TYPE)
		AP_EFT_REGISTER(AP_EFT_REGISTER_SEQ)		= #REG_LINE
		AP_EFT_REGISTER(BANK_CODE)			= #BANK_CODE
		AP_EFT_REGISTER(AP_EFT_PAYMENT_REF) 		= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT_NAME)
		AP_EFT_REGISTER(PAYEE_NUMBER)			= AP_EFT_PAYMENT_LINES(PAYEE_NUMBER)
		AP_EFT_REGISTER(PAYMENT_DATE)			= AP_EFT_PAYMENT_LINES(PAYMENT_DATE)
		AP_EFT_REGISTER(PAYMENT_RUN_NUMBER)		= AP_EFT_PAYMENT_LINES(PAYMENT_RUN_NUMBER)
		AP_EFT_REGISTER(AP_PAYMENT_CURRENCY)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)

		AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC)	= #CASH_BANK_RATIO_INDIC

		IF	(#CURRENCY_METHOD > '0')
			AP_EFT_REGISTER(AP_PAYMENT_BASE) 	= AP_EFT_PAYMENT_LINES(AP_PAYMENT_BASE)

			IF(#STORE_BASE2 = #YES)
				AP_EFT_REGISTER(AP_PAYMENT_2_BASE) = AP_EFT_PAYMENT_LINES(AP_PAYMENT_2_BASE)
			END_IF

		END_IF
		IF (AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC) <> PARAMETER("MULTIPLY_RATIO_INDIC"))
			AP_EFT_REGISTER(AP_PAYMENT_BANK_CURRENCY) = ROUND(AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)/ &
				#CASH_BANK_CURRENCY_RATE,#BANK_CURRENCY_DECIMAL)
		ELSE
			AP_EFT_REGISTER(AP_PAYMENT_BANK_CURRENCY) = ROUND(AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY) * &
				#CASH_BANK_CURRENCY_RATE,#BANK_CURRENCY_DECIMAL)
		END_IF
		AP_EFT_REGISTER(SYS_CURRENCY_CODE) 		= #BANK_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_CURRENCY_RATE)		= #CASH_CURRENCY_RATE
		AP_EFT_REGISTER(SYS_BASE_CURRENCY_CODE) 	= #BASE_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_PAYMENT_CURRENCY_CODE) 	= #CASH_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_CASH_BANK_CURRENCY_RATE)	= #CASH_BANK_CURRENCY_RATE
		AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC)	= #CASH_BANK_RATIO_INDIC
		AP_EFT_REGISTER(STATUS_FLAG) 			= #STATUS_ACTIVE

		AP_EFT_REGISTER(SYS_RATE_AUTHORITY)		= #CASH_RATE_AUTHORITY
		AP_EFT_REGISTER(SYS_RATE_TYPE)			= #CASH_RATE_TYPE
		AP_EFT_REGISTER(SYS_CURRENCY_FIXED_FLAG)	= #CASH_CURRENCY_FIXED
		AP_EFT_REGISTER(SYS_CURRENCY_RATIO_INDIC)	= #CASH_CURRENCY_RATIO_INDIC
		AP_EFT_REGISTER(SYS_CURRENCY_DATE)		= AP_EFT_PAYMENT_LINES(SYS_CURRENCY_DATE)

		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_1)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_1)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_2)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_2)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_3)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_3)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_4)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_4)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_5)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_5)
		AP_EFT_REGISTER(PAYEE_BANK_SORT_CODE)		= AP_EFT_PAYMENT_HEADERS(BANK_SORT_CODE)
		AP_EFT_REGISTER(PAYEE_BANK_ACCOUNT)		= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT)
		AP_EFT_REGISTER(PAYEE_BANK_ACCOUNT_NAME)	= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT_NAME)
		AP_EFT_REGISTER(PAYEE_BANK_NAME)		= AP_EFT_PAYMENT_HEADERS(BANK_NAME)

		ADD TO AP_EFT_REGISTER

		IF 	(%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32012
			EXIT(%FAILURE)
		END_IF
	END_BLOCK

END_FORM

PROCEDURE_FORM CREATE_REGISTER_LINE
	BEGIN_BLOCK CREATE
		! This is the same as CREATE_REGISTER_FROM_LINES except that it's sorted first by SYS_PAYMENT_CURRENCY_CODE
		CLEAR_BUFFER AP_EFT_REGISTER

		#REG_LINE 					= #REG_LINE + 1

		AP_EFT_REGISTER(COMPANY_CODE)		= AP_EFT_PAYMENT_LINES(COMPANY_CODE)
		AP_EFT_REGISTER(AP_DIVISION)		= AP_EFT_PAYMENT_LINES(AP_DIVISION)
		AP_EFT_REGISTER(PAYMENT_TYPE)		= AP_EFT_PAYMENT_LINES(PAYMENT_TYPE)
		AP_EFT_REGISTER(AP_EFT_REGISTER_SEQ)	= #REG_LINE
		AP_EFT_REGISTER(BANK_CODE)		= #BANK_CODE
		AP_EFT_REGISTER(AP_EFT_PAYMENT_REF)	= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT_NAME)
		AP_EFT_REGISTER(PAYEE_NUMBER)		= AP_EFT_PAYMENT_LINES(PAYEE_NUMBER)
		AP_EFT_REGISTER(PAYMENT_DATE)		= AP_EFT_PAYMENT_LINES(PAYMENT_DATE)
		AP_EFT_REGISTER(PAYMENT_RUN_NUMBER)	= AP_EFT_PAYMENT_LINES(PAYMENT_RUN_NUMBER)
		AP_EFT_REGISTER(AP_PAYMENT_CURRENCY)	= AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)

		AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC)	= #CASH_BANK_RATIO_INDIC
		IF	(#CURRENCY_METHOD > '0')
			AP_EFT_REGISTER(AP_PAYMENT_BASE) 	= AP_EFT_PAYMENT_LINES(AP_PAYMENT_BASE)

			IF(#STORE_BASE2 = #YES)
				AP_EFT_REGISTER(AP_PAYMENT_2_BASE) = AP_EFT_PAYMENT_LINES(AP_PAYMENT_2_BASE)
			END_IF

		END_IF
		IF (AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC) <> PARAMETER("MULTIPLY_RATIO_INDIC"))
			AP_EFT_REGISTER(AP_PAYMENT_BANK_CURRENCY) = ROUND(AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)/ &
				#CASH_BANK_CURRENCY_RATE,#BANK_CURRENCY_DECIMAL)
		ELSE
			AP_EFT_REGISTER(AP_PAYMENT_BANK_CURRENCY) = ROUND(AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY) * &
				#CASH_BANK_CURRENCY_RATE,#BANK_CURRENCY_DECIMAL)
		END_IF
		AP_EFT_REGISTER(SYS_CURRENCY_CODE) 		= #BANK_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_CURRENCY_RATE)		= #CASH_CURRENCY_RATE
		AP_EFT_REGISTER(SYS_BASE_CURRENCY_CODE) 	= #BASE_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_PAYMENT_CURRENCY_CODE) 	= #CASH_CURRENCY_CODE
		AP_EFT_REGISTER(SYS_CASH_BANK_CURRENCY_RATE)	= #CASH_BANK_CURRENCY_RATE
		AP_EFT_REGISTER(SYS_CASH_BANK_RATIO_INDIC)	= #CASH_BANK_RATIO_INDIC
		AP_EFT_REGISTER(STATUS_FLAG) 			= #STATUS_ACTIVE

		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_1)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_1)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_2)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_2)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_3)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_3)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_4)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_4)
		AP_EFT_REGISTER(AP_PAYMENT_ANALYSIS_5)		= AP_EFT_PAYMENT_LINES(AP_PAYMENT_ANALYSIS_5)
		AP_EFT_REGISTER(PAYEE_BANK_SORT_CODE)	 	= AP_EFT_PAYMENT_HEADERS(BANK_SORT_CODE)
		AP_EFT_REGISTER(PAYEE_BANK_ACCOUNT)	 	= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT)
		AP_EFT_REGISTER(PAYEE_BANK_ACCOUNT_NAME) 	= AP_EFT_PAYMENT_HEADERS(BANK_ACCOUNT_NAME)
		AP_EFT_REGISTER(PAYEE_BANK_NAME)	 	= AP_EFT_PAYMENT_HEADERS(BANK_NAME)
		AP_EFT_REGISTER(SYS_RATE_AUTHORITY)		= #CASH_RATE_AUTHORITY
		AP_EFT_REGISTER(SYS_RATE_TYPE)			= #CASH_RATE_TYPE
		AP_EFT_REGISTER(SYS_CURRENCY_FIXED_FLAG)	= #CASH_CURRENCY_FIXED
		AP_EFT_REGISTER(SYS_CURRENCY_RATIO_INDIC)	= #CASH_CURRENCY_RATIO_INDIC
		AP_EFT_REGISTER(SYS_CURRENCY_DATE)		= AP_EFT_PAYMENT_LINES(SYS_CURRENCY_DATE)

		ADD TO AP_EFT_REGISTER

		IF 	(%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_32012
			EXIT(%FAILURE)
		END_IF
	END_BLOCK

END_FORM

PROCEDURE_FORM DELETE_EFT_RUN_RECORD

	BEGIN_BLOCK DELETE
		FIND IN AP_CONTROLS_CHECK_RUNS &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=AP_DIVISION=#DIVISION &
			/WITH=PAYMENT_RUN_NUMBER = #RUN_NUMBER &
			/WITH=PAYMENT_TYPE = #DOCUMENT_FORMAT

		DELETE FROM AP_CONTROLS_CHECK_RUNS

	END_BLOCK

END_FORM


PROCEDURE_FORM DELETE_PAYMENT_HEADERS_AND_LINES &
	/TABLE=AP_EFT_PAYMENT_HEADERS &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=AP_DIVISION=#DIVISION &
	/WITH=PAYMENT_RUN_NUMBER=#RUN_NUMBER &
	/WITH=PAYMENT_TYPE = #DOCUMENT_FORMAT


	BEGIN_BLOCK ASSOC_LINES
		PERFORM DELETE_LINES

		IF 	(%STATUS <> %FAILURE) DELETE FROM AP_EFT_PAYMENT_HEADERS
	END_BLOCK

END_FORM


PROCEDURE_FORM DELETE_LINES &
	/TABLE=AP_EFT_PAYMENT_LINES &
	/JOINED_TO=AP_EFT_PAYMENT_HEADERS

	BEGIN_BLOCK DEL
		PERFORM DELETE_TEN99S
		DELETE FROM AP_EFT_PAYMENT_LINES
	END_BLOCK

END_FORM


PROCEDURE_FORM DELETE_TEN99S &
	/TABLE=AP_EFT_TEN99S &
	/JOINED_TO=AP_EFT_PAYMENT_LINES

	BEGIN_BLOCK DELETE_TEN99S
		DELETE FROM AP_EFT_TEN99S
	END_BLOCK
END_FORM

PROCEDURE_FORM SECURITY_CHECK &
	/TABLE=AP_EFT_PAYMENT_LINES &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=AP_DIVISION=#DIVISION &
	/WITH=PAYMENT_RUN_NUMBER = #RUN_NUMBER &
	/WITH=PAYMENT_TYPE = #DOCUMENT_FORMAT


	BEGIN_BLOCK CHECK
		FIND IN SECURITY_TRAN_TYPES_VT &
			/WITH=SOURCE_MODULE=(PARAMETER("MODULE_AP")) &
			/WITH=SECURITY_TRANSACTION_TYPE=AP_EFT_PAYMENT_LINES(TRANSACTION_TYPE)
		IF (%STATUS=%FAILURE OR SECURITY_TRAN_TYPES_VT(CREATE_TRANSACTIONS) <> #YES)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00897,AP_EFT_PAYMENT_LINES(TRANSACTION_TYPE)
			EXIT(%FAILURE)
		END_IF

		#TOTAL_VALUE =  ABS(AP_EFT_PAYMENT_LINES(AP_PAYMENT_BASE)) + &
				ABS(AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_BASE))

		IF (#TOTAL_VALUE > SECURITY_TRAN_TYPES_VT(MAXIMUM_VALUE))
			MESSAGE/IDENTIFIER/BELL/WAIT P_32387,AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER)
			EXIT(%FAILURE)
		END_IF
	END_BLOCK

END_FORM

PROCEDURE_FORM SETUP_VARIABLES

	BEGIN_BLOCK SETUP_VARIABLES

		START_TRANSACTION
		#YES				= PARAMETER("LANGUAGE_YES")
		#NO				= PARAMETER("LANGUAGE_NO")
		#DOCUMENT_FORMAT_DETAIL		= PARAMETER("AP_DOCUMENT_FORMAT_DETAIL")
		#EFT_STATUS_UPDATE		= "P"
		#TTYPE_CP			= PARAMETER("TTYPE_CP")
		#PAYMENT_BY_CHECK		= PARAMETER("PAYMENT_BY_CHECK")
		AP_CONTROLS(COMPANY_CODE) 	= #COMPANY_CODE
		#MANUAL_PAYMENT_BATCH_NUMBER	= 0
		#MP_BATCH_SEQUENCE_NUMBER	= 0

		FIND IN COMPANY_CONTROLS /LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE

		IF  (%STATUS=%FAILURE)
		    MESSAGE/IDENTIFIER/BELL/WAIT P_00139
		    EXIT(%FAILURE)
		END_IF

		#NBR_PERIODS 		= COMPANY_CONTROLS(TOTAL_NUMBER_PERIODS)
		#COST_CENTER_SUBCLASS	= MASK("!-0@",COMPANY_CONTROLS(COST_CENTER_SUBCLASS))
		#INTERFUND		= COMPANY_CONTROLS(SYS_INTERFUND_IN_USE)
		#INC_POSTING_DATE	= COMPANY_CONTROLS(SYS_POSTING_DATE_REQD)
		#VALIDATE_POSTING_DATE	= COMPANY_CONTROLS(SYS_VALID_POSTING_DATE)
		#CO_TAX_ON_CASH		= COMPANY_CONTROLS(SYS_TAX_ON_CASH)
		#STORE_BASE2		= COMPANY_CONTROLS(SYS_SECOND_BASE_IN_USE)

	END_BLOCK
	
	BEGIN_BLOCK GET_DATE_MASK
		#DEF_DATE_MASK = ""
		
		FIND IN SYS_COUNTRIES &
			/LOCK=NONE &
			/WITH=SYS_COUNTRY=COMPANY_CONTROLS(SYS_COUNTRY)

			IF (%STATUS<>%SUCCESS)
				MESSAGE/IDENTIFIER/BELL/WAIT P_12202, COMPANY_CONTROLS(SYS_COUNTRY)
			EXIT(%FAILURE)
		
			END_IF

		#DEF_DATE_MASK=SYS_COUNTRIES(SYS_DATE_MASK)

	END_BLOCK 

	BEGIN_BLOCK DML_2A 

	 	FIND IN AP_CONTROLS &
 			/LOCK=NONE &
 			/WITH=COMPANY_CODE=#COMPANY_CODE &
	 		/WITH=AP_DIVISION=#DIVISION

 		IF	(%STATUS = %FAILURE)
	 		MESSAGE/IDENTIFIER/BELL/WAIT P_00354
 			EXIT(%FAILURE)
	 	END_IF

 		#BASE_CURRENCY_CODE		= AP_CONTROLS(SYS_CURRENCY_CODE)
		#BASE_2_CURRENCY_CODE		= AP_CONTROLS(SYS_SECOND_BASE_CURRENCY_CODE)
	 	#CURRENT_YEAR	 		= AP_CONTROLS(CURRENT_YEAR)
 		#CURRENT_PERIOD			= AP_CONTROLS(CURRENT_PERIOD)
	 	#DEF_AP_SHORT_CODE	 	= AP_CONTROLS(AP_SHORT_CODE)
 		#DEF_AP_FULL_ACCOUNT	 	= AP_CONTROLS(AP_FULL_ACCOUNT)
	 	#CURRENCY_METHOD		= AP_CONTROLS(SYS_CURRENCY_METHOD)
		#DIV_TAX_ON_CASH		= AP_CONTROLS(SYS_TAX_ON_CASH)
		#DISCOUNTS_POSTED_AT		= AP_CONTROLS(DISCOUNTS_POSTED_AT)
		#DISCOUNT_FLAG			= AP_CONTROLS(DISCOUNT_FLAG)
		#POSTINGS_IN_BATCH		= #NO

		FIND IN SYS_CURRENCY_CODES &
			/LOCK=NONE &
			/WITH=SYS_CURRENCY_CODE=#BASE_CURRENCY_CODE

		#BASE_CURRENCY_DECIMAL	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
		#BASE_CURRENCY_MASK	= SYS_CURRENCY_CODES(SYS_CURRENCY_MASK)

		FIND IN SYS_CURRENCY_CODES &
			/LOCK=NONE &
			/WITH=SYS_CURRENCY_CODE=#BASE_2_CURRENCY_CODE

		#BASE_2_CURRENCY_DECIMALS 	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
		#BASE_TO_BASE2_RATE		 = SYS_CURRENCY_CODES(SYS_EURO_CURRENCY_RATE)

		FIND IN AP_CONTROLS_CHECK_RUNS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE =#COMPANY_CODE &
			/WITH=AP_DIVISION = #DIVISION &
			/WITH=PAYMENT_RUN_NUMBER = #RUN_NUMBER &
			/WITH=PAYMENT_TYPE=#DOCUMENT_FORMAT

		IF	(%STATUS <> %SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_51165
			EXIT(%FAILURE)
		END_IF

		IF	(AP_CONTROLS_CHECK_RUNS(STATUS_FLAG) <> #EFT_STATUS_UPDATE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00932
			EXIT(%FAILURE)
		END_IF

		#BANK_FULL_ACCOUNT		= AP_CONTROLS_CHECK_RUNS(BANK_FULL_ACCOUNT)
		#BANK_SHORT_CODE		= AP_CONTROLS_CHECK_RUNS(GL_BANK_SHORT_CODE)
		#BANK_CODE			= AP_CONTROLS_CHECK_RUNS(BANK_CODE)
		#PAYMENT_DATE			= AP_CONTROLS_CHECK_RUNS(PAYMENT_DATE)
		#EFT_PAYMENT_CURRENCY_METHOD	= AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD)

		IF	(#CURRENCY_METHOD = '0')
			#BANK_CURRENCY_CODE 	= #BASE_CURRENCY_CODE
			#CASH_CURRENCY_CODE 	= #BASE_CURRENCY_CODE
			#CURRENCY_CODE 	= #BASE_CURRENCY_CODE
			#CASH_BANK_CURRENCY_RATE 	= 1.0

			#BANK_CURRENCY_DECIMAL 		= #BASE_CURRENCY_DECIMAL
			#CASH_CURRENCY_DECIMAL 		= #BASE_CURRENCY_DECIMAL
		END_IF

		PERFORM CHECK_COST_CENTER_PATCH (#BANK_SHORT_CODE)
		#BANK_COST_CENTER_PATCHED = #COST_CENTER_PATCHED

		IF (AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "1" OR &
			AP_CONTROLS_CHECK_RUNS(EFT_PAYMENT_CURRENCY_METHOD) = "2")
			#BANK_CURRENCY_CODE		= AP_CONTROLS_CHECK_RUNS(SYS_BANK_CURRENCY_CODE)
			#CASH_CURRENCY_CODE	 	= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_CODE)
				#CASH_CURRENCY_RATE		= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATE)
			#CASH_RATE_AUTHORITY 		= AP_CONTROLS_CHECK_RUNS(SYS_RATE_AUTHORITY)
			#CASH_RATE_TYPE 		= AP_CONTROLS_CHECK_RUNS(SYS_RATE_TYPE)
			#CASH_CURRENCY_FIXED		= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_FIXED_FLAG)
			#CASH_CURRENCY_RATIO_INDIC	= AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATIO_INDIC)

			FIND IN SYS_CURRENCY_CODES &
				/LOCK=NONE &
				/WITH=SYS_CURRENCY_CODE = #BANK_CURRENCY_CODE

			#BANK_CURRENCY_DECIMAL 		= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)

			IF	(#CURRENCY_METHOD > '0')

				!Calculate the 2nd Rate
				PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT
				SYS_CURRENCY_CONTROL_VT(COMPANY_CODE) = #COMPANY_CODE
				SYS_CURRENCY_CONTROL_VT(DIVISION) = #DIVISION
				SYS_CURRENCY_CONTROL_VT(SOURCE_MODULE) = (PARAMETER("MODULE_AP"))
				SYS_CURRENCY_CONTROL_VT(TRANSACTION_CURRENCY_CODE) = #CASH_CURRENCY_CODE
				SYS_CURRENCY_CONTROL_VT(FIRST_CURRENCY_RATE) = #CASH_CURRENCY_RATE
				SYS_CURRENCY_CONTROL_VT(CURRENCY_DATE) = #PAYMENT_DATE
				SYS_CURRENCY_CONTROL_VT(RATE_OVERRIDE) = #YES

				ADD TO SYS_CURRENCY_CONTROL_VT
				PERFORM "GEMLB:LB_S_L_CURRENCY_RATES"(#R_SUCCESS_STATUS,#R_MESSAGE)
				IF (#R_SUCCESS_STATUS <> #YES)
					ERROR/WAIT #R_MESSAGE
					EXIT(%FAILURE)
				END_IF  

				FIND IN SYS_CURRENCY_CONTROL_VT
				IF (%STATUS = %SUCCESS)
					#CASH_CURRENCY_2_RATE = SYS_CURRENCY_CONTROL_VT(CALCULATED_RATE)
				END_IF

				PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT

				IF	(#BANK_CURRENCY_CODE = #CASH_CURRENCY_CODE)
					#CASH_BANK_CURRENCY_RATE = 1.0
					#CASH_BANK_RATIO_INDIC = AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATIO_INDIC)
				END_IF

				IF	(#BANK_CURRENCY_CODE <> #CASH_CURRENCY_CODE)
					IF	(#BANK_CURRENCY_CODE = #BASE_CURRENCY_CODE)
						#CASH_BANK_CURRENCY_RATE = AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATE)
						#CASH_BANK_RATIO_INDIC = AP_CONTROLS_CHECK_RUNS(SYS_CURRENCY_RATIO_INDIC)
					ELSE
						#CURRENCY_CODE = #CASH_CURRENCY_CODE
						#CURRENCY_RATE = ""
						#CURRENCY_DATE = ""

						PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT

						#CURRENCY_CODE = #CASH_CURRENCY_CODE
						#CURRENCY_2_CODE = #BANK_CURRENCY_CODE
						#CURRENCY_DATE = #PAYMENT_DATE
						#RATE_AUTHORITY = ""
						#RATE_TYPE = ""
						#CURRENCY_RATE = ""
						#RATE_OVERRIDE = "N"

						PERFORM LOAD_CURRENCY_CONTROL_VT

						FIND IN SYS_CURRENCY_CONTROL_VT
						IF(%STATUS = %FAILURE)
							EXIT(%FAILURE)
						END_IF

						#CURRENCY_RATIO_INDIC = SYS_CURRENCY_CONTROL_VT(CURR_RATIO_INDIC)
						#CURRENCY_RATE = SYS_CURRENCY_CONTROL_VT(FIRST_CURRENCY_RATE)

						#CASH_BANK_CURRENCY_RATE 	= #CURRENCY_RATE
						#CASH_BANK_RATIO_INDIC		= #CURRENCY_RATIO_INDIC
					END_IF
			ELSE
					#CASH_BANK_CURRENCY_RATE = 1.0
					#CASH_BANK_RATIO_INDIC = PARAMETER("MULTIPLY_RATIO_INDIC")
			END_IF
	END_IF

		ELSE
			#BANK_CURRENCY_CODE		= ""
			#CASH_CURRENCY_CODE		= ""
      			#CASH_CURRENCY_RATE		= 0
			#CASH_RATE_AUTHORITY		= ""
			#CASH_RATE_TYPE			= ""
			#CASH_CURRENCY_FIXED		= ""
			#CASH_CURRENCY_RATIO_INDIC	= ""
	 		#BANK_CURRENCY_DECIMAL 		= 0
		END_IF

	COMMIT
	END_BLOCK

END_FORM

PROCEDURE_FORM CHECK_COST_CENTER_PATCH (#SHORT_CODE)

	BEGIN_BLOCK READ_SHORT_CODES

		#COST_CENTER_PATCHED = ""
		IF (#SHORT_CODE <> "")
			FIND IN GL_SHORT_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=GL_SHORT_CODE=#SHORT_CODE

			IF ( #COST_CENTER_SUBCLASS <> "00" AND &
				GL_SHORT_CODES(PATCHING_FLAG) = #YES )

				IF ( TABLE_DATA( "GL_SHORT_CODES", "GL_ELEMENT_" & #COST_CENTER_SUBCLASS ) = "" )
					#COST_CENTER_PATCHED = #YES
				END_IF
			END_IF
		END_IF
	END_BLOCK
END_FORM



PROCEDURE_FORM LOAD_CURRENCY_CONTROL_VT

	BEGIN_BLOCK LOAD_VT

		DELETE ALL FROM SYS_CURRENCY_CONTROL_VT
		CLEAR_BUFFER SYS_CURRENCY_CONTROL_VT
		SYS_CURRENCY_CONTROL_VT(COMPANY_CODE) = #COMPANY_CODE
		SYS_CURRENCY_CONTROL_VT(DIVISION) = #DIVISION
		SYS_CURRENCY_CONTROL_VT(SOURCE_MODULE) = (PARAMETER("MODULE_AP"))
		SYS_CURRENCY_CONTROL_VT(TRANSACTION_CURRENCY_CODE) =#CURRENCY_CODE
		SYS_CURRENCY_CONTROL_VT(TRANS_2_CURRENCY_CODE)= #CURRENCY_2_CODE
		SYS_CURRENCY_CONTROL_VT(FIRST_CURRENCY_RATE) = #CURRENCY_RATE
		SYS_CURRENCY_CONTROL_VT(TRANSACTION_RATE) = #CURRENCY_RATE
		SYS_CURRENCY_CONTROL_VT(SECOND_CURRENCY_RATE) = #CURRENCY_2_RATE
		SYS_CURRENCY_CONTROL_VT(CURR_RATIO_INDIC) = #CURR_RATIO_INDIC
		SYS_CURRENCY_CONTROL_VT(RATE_OVERRIDE) = #RATE_OVERRIDE
		SYS_CURRENCY_CONTROL_VT(RATE_AUTHORITY) = #RATE_AUTHORITY
		SYS_CURRENCY_CONTROL_VT(RATE_TYPE) = #RATE_TYPE
		SYS_CURRENCY_CONTROL_VT(CURRENCY_DATE) = #CURRENCY_DATE
	
		ADD TO SYS_CURRENCY_CONTROL_VT
	END_BLOCK

	BEGIN_BLOCK CALL_ENGINE_CURRENCY_RATE_ROUTINE

		PERFORM "GEMLB:LB_S_L_CURRENCY_RATES" &
			(#SUCCESS,#RETURN_MESSAGE)

		IF (#SUCCESS = #NO)

			ERROR/TEXT_ONLY/WAIT #RETURN_MESSAGE
			EXIT(%FAILURE)
		END_IF
	END_BLOCK	
END_FORM

PROCEDURE_FORM CLEAR_SYS_CURRENCY_CONTROL_VT &
	/TABLE = SYS_CURRENCY_CONTROL_VT

	BEGIN_BLOCK DELETE
		DELETE FROM SYS_CURRENCY_CONTROL_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM CLEAR_SYS_POSTINGS_CONTROL_VT &
	/TABLE = SYS_POSTINGS_CONTROL_VT

	BEGIN_BLOCK DELETE
		DELETE FROM SYS_POSTINGS_CONTROL_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM CLEAR_SYS_POSTINGS_VT &
	/TABLE = SYS_POSTINGS_VT

	BEGIN_BLOCK DELETE
		DELETE FROM SYS_POSTINGS_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM DELETE_VTS
	BEGIN_BLOCK DELETE
		DELETE ALL FROM SYS_CURRENCY_CONTROL_VT
		DELETE ALL FROM SYS_POSTINGS_CONTROL_VT
		DELETE ALL FROM SYS_POSTINGS_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM CLEAR_SYS_CURRENCY_VALUES_VT &
	/TABLE=SYS_CURRENCY_VALUES_VT

	BEGIN_BLOCK DELETE_RECORD
		DELETE FROM SYS_CURRENCY_VALUES_VT
	END_BLOCK	
END_FORM

PROCEDURE_FORM CREATE_MANUAL_PAYMENT_RECORD

	BEGIN_BLOCK CHECK_FOR_HEADER
		IF	(#MANUAL_PAYMENT_BATCH_NUMBER = 0)

			FIND IN AP_TRANSACTION_TYPES &
				/LOCK=WRITE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=DIVISION=#DIVISION &
				/WITH=TRANSACTION_TYPE=(PARAMETER("TTYPE_MB"))

			#MANUAL_PAYMENT_BATCH_NUMBER = AP_TRANSACTION_TYPES(AP_TRANSACTION_NUMBER)

			AP_TRANSACTION_TYPES(AP_TRANSACTION_NUMBER) = #MANUAL_PAYMENT_BATCH_NUMBER + 1

			MANUAL_PAYMENTS(AP_DIVISION) = #DIVISION
			MANUAL_PAYMENTS(COMPANY_CODE) = #COMPANY_CODE
			MANUAL_PAYMENTS(STATUS_FLAG) = (PARAMETER("STATUS_UPDATE"))
			MANUAL_PAYMENTS(MANUAL_PAYMENT_BATCH_NUMBER) = #MANUAL_PAYMENT_BATCH_NUMBER
			MANUAL_PAYMENTS(BANK_DATE) = #PAYMENT_DATE

			MANUAL_PAYMENTS(PERIOD) = #POSTING_PERIOD
			MANUAL_PAYMENTS(YEAR)   = #POSTING_YEAR

			MANUAL_PAYMENTS(SYS_BANK_CURRENCY_CODE)	= #BANK_CURRENCY_CODE
			MANUAL_PAYMENTS(SYS_BANK_CURRENCY_RATE)	= #CASH_CURRENCY_RATE
			MANUAL_PAYMENTS(SYS_BANK_RATIO_INDIC)	= #CASH_CURRENCY_RATIO_INDIC
			MANUAL_PAYMENTS(BANK_CODE) = #BANK_CODE
			MANUAL_PAYMENTS(BANK_FULL_ACCOUNT) = #BANK_FULL_ACCOUNT
			MANUAL_PAYMENTS(GL_BANK_SHORT_CODE) = #BANK_SHORT_CODE

			ADD TO MANUAL_PAYMENTS
		END_IF

		#MP_BATCH_SEQUENCE_NUMBER = #MP_BATCH_SEQUENCE_NUMBER + 1

		MANUAL_PAYMENT_LINES(COMPANY_CODE)=#COMPANY_CODE
		MANUAL_PAYMENT_LINES(AP_DIVISION)=#DIVISION
		MANUAL_PAYMENT_LINES(MANUAL_PAYMENT_BATCH_NUMBER) = #MANUAL_PAYMENT_BATCH_NUMBER
		MANUAL_PAYMENT_LINES(MP_BATCH_SEQUENCE_NUMBER) = #MP_BATCH_SEQUENCE_NUMBER
		MANUAL_PAYMENT_LINES(BANK_CODE) = #BANK_CODE
		MANUAL_PAYMENT_LINES(CASH_DISCOUNT) = 0
		MANUAL_PAYMENT_LINES(TRANSACTION_DATE) = AP_EFT_PAYMENT_LINES(PAYMENT_DATE)
		MANUAL_PAYMENT_LINES(VENDOR_NUMBER) = AP_EFT_PAYMENT_LINES(VENDOR_NUMBER)
		MANUAL_PAYMENT_LINES(PAYEE_NUMBER) = AP_EFT_PAYMENT_LINES(PAYEE_NUMBER)
		MANUAL_PAYMENT_LINES(PAYMENT_REFERENCE) = #MANUAL_PAYMENT_BATCH_NUMBER
		MANUAL_PAYMENT_LINES(SYS_CURRENCY_CODE) = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_CODE)
		MANUAL_PAYMENT_LINES(SYS_CURRENCY_RATE) = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_RATE)
		MANUAL_PAYMENT_LINES(SYS_CURRENCY_DATE) = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_DATE)
		MANUAL_PAYMENT_LINES(SYS_CURRENCY_RATIO_INDIC)= AP_EFT_PAYMENT_LINES(SYS_CURRENCY_RATIO_INDIC)
		MANUAL_PAYMENT_LINES(SYS_RATE_TYPE)	= AP_EFT_PAYMENT_LINES(SYS_RATE_TYPE)
		MANUAL_PAYMENT_LINES(SYS_RATE_AUTHORITY)= AP_EFT_PAYMENT_LINES(SYS_RATE_AUTHORITY)
		MANUAL_PAYMENT_LINES(SYS_CURRENCY_FIXED_FLAG)=AP_EFT_PAYMENT_LINES(SYS_CURRENCY_FIXED_FLAG)
		MANUAL_PAYMENT_LINES(SYS_BASE_CURRENCY_CODE) = AP_EFT_PAYMENT_LINES(SYS_BASE_CURRENCY_CODE)
		IF	(#STORE_BASE2 = #YES)
			MANUAL_PAYMENT_LINES(SYS_CURRENCY_2_FIXED_FLAG) = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_2_FIXED_FLAG)
			MANUAL_PAYMENT_LINES(SYS_CURRENCY_2_RATE) = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_2_RATE)
			MANUAL_PAYMENT_LINES(SYS_CURRENCY_2_RATIO_INDIC) = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_2_RATIO_INDIC)
			MANUAL_PAYMENT_LINES(SYS_RATE_2_AUTHORITY) = AP_EFT_PAYMENT_LINES(SYS_RATE_2_AUTHORITY)
			MANUAL_PAYMENT_LINES(SYS_RATE_2_TYPE) = AP_EFT_PAYMENT_LINES(SYS_RATE_2_TYPE)
			MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_2_BASE)= AP_EFT_PAYMENT_LINES(AP_ALLOCATION_2_BASE)
		END_IF

		MANUAL_PAYMENT_LINES(AP_TRANSACTION_NUMBER) = AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER)
		MANUAL_PAYMENT_LINES(TRANSACTION_DATE)	= AP_EFT_PAYMENT_LINES(TRANSACTION_DATE)
		MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_CURRENCY)= AP_EFT_PAYMENT_LINES(AP_ALLOCATION_CURRENCY)
		IF	(#CURRENCY_METHOD > '0')
			MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_BASE)= AP_EFT_PAYMENT_LINES(AP_ALLOCATION_BASE)
		END_IF

		MANUAL_PAYMENT_LINES(SYS_CASH_BANK_RATIO_INDIC) = #CASH_BANK_RATIO_INDIC
		MANUAL_PAYMENT_LINES(SYS_CASH_BANK_CURRENCY_RATE) = #CASH_BANK_CURRENCY_RATE

		#MP_CURRENCY = #MP_CURRENCY+MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_CURRENCY)

		FIND IN AP_TRANSACTIONS &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=AP_DIVISION=#DIVISION &
			/WITH=AP_TRANSACTION_NUMBER=AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER) &
			/WITH=TRANSACTION_TYPE=(PARAMETER("TTYPE_MP"))

		MANUAL_PAYMENT_LINES(VENDOR_REFERENCE) = AP_EFT_PAYMENT_LINES(PAYMENT_RUN_NUMBER) & "/" & #REG_LINE

		ADD TO MANUAL_PAYMENT_LINES

		!Record the associated MP transaction type and number against 
		!the EFT Register Payment Run number 

		CLEAR_BUFFER AP_EFT_REGISTER_LINES

		AP_EFT_REGISTER_LINES(COMPANY_CODE) = #COMPANY_CODE
		AP_EFT_REGISTER_LINES(AP_DIVISION) = #DIVISION
		AP_EFT_REGISTER_LINES(BANK_CODE) = #BANK_CODE
		AP_EFT_REGISTER_LINES(PAYMENT_TYPE) = AP_EFT_PAYMENT_HEADERS(PAYMENT_TYPE)
		AP_EFT_REGISTER_LINES(PAYMENT_RUN_NUMBER) = AP_EFT_PAYMENT_LINES(PAYMENT_RUN_NUMBER)
		AP_EFT_REGISTER_LINES(AP_EFT_REGISTER_SEQ) = #REG_LINE
		AP_EFT_REGISTER_LINES(TRANSACTION_TYPE) = PARAMETER("TTYPE_MP")
		AP_EFT_REGISTER_LINES(TRANSACTION_NUMBER) = AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER)

		ADD TO AP_EFT_REGISTER_LINES
		IF      (%STATUS <> %SUCCESS) EXIT (%FAILURE)

		AP_TRANSACTIONS(BATCH_NUMBER) = #MANUAL_PAYMENT_BATCH_NUMBER
		AP_TRANSACTIONS(BATCH_SEQUENCE_NUMBER) = #MP_BATCH_SEQUENCE_NUMBER
		AP_TRANSACTIONS(BANK_CODE) = #BANK_CODE
		AP_TRANSACTIONS(PAYMENT_RUN_NUMBER) = ""
		AP_TRANSACTIONS(PERIOD)	= #POSTING_PERIOD
		AP_TRANSACTIONS(YEAR)	= #POSTING_YEAR

		FIND IN MANUAL_PAYMENT_LINES &
			/LOCK=NONE &
			/WITH=COMPANY_CODE = #COMPANY_CODE &
			/WITH=AP_DIVISION=#DIVISION &
			/WITH=MANUAL_PAYMENT_BATCH_NUMBER = #MANUAL_PAYMENT_BATCH_NUMBER &
			/WITH=MP_BATCH_SEQUENCE_NUMBER = #MP_BATCH_SEQUENCE_NUMBER

		PERFORM CREATE_GL_POSTINGS_FOR_MP
		IF (%STATUS <> %SUCCESS)
			EXIT (%FAILURE)
		END_IF
	
	END_BLOCK


END_FORM


PROCEDURE_FORM CHECK_AP_TRANSACTIONS &
	/TABLE=AP_TRANSACTIONS &
	/LOCK=NONE &
	/WITH=COMPANY_CODE = #COMPANY_CODE &
	/WITH=AP_DIVISION = #DIVISION &
	/WITH=PAYMENT_RUN_NUMBER = #RUN_NUMBER &
	/WITH=PAYMENT_TYPE = #DOCUMENT_FORMAT &
	/WITH=YEAR > #POSTING_YEAR &
	/WITH=PERIOD > #POSTING_PERIOD &
	/WITH=YEAR = #POSTING_YEAR &
	/SELECTION="A AND B AND C AND D AND (E OR (F AND G))"
END_FORM 

PROCEDURE_FORM ACCRUE_VALUES 

	BEGIN_BLOCK ADD_THEM_UP

			#CC_CURRENCY 		= #CC_CURRENCY + AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)
			#CC_BASE 		= #CC_BASE + AP_EFT_PAYMENT_LINES(AP_PAYMENT_BASE)
			#CC_2_BASE 		= #CC_2_BASE + AP_EFT_PAYMENT_LINES(AP_PAYMENT_2_BASE) 
			#CP_AMOUNT_CURRENCY 	= #CP_AMOUNT_CURRENCY + AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)
			#CP_AMOUNT_BASE 	= #CP_AMOUNT_BASE + AP_EFT_PAYMENT_LINES(AP_PAYMENT_BASE)
			#CP_AMOUNT_2_BASE 	= #CP_AMOUNT_2_BASE + AP_EFT_PAYMENT_LINES(AP_PAYMENT_2_BASE)
			#CP_CURRENCY_GAIN 	= #CP_CURRENCY_GAIN + AP_EFT_PAYMENT_LINES(SYS_CURRENCY_GAIN_REALISED)
			#CP_CURRENCY_LOSS 	= #CP_CURRENCY_LOSS + AP_EFT_PAYMENT_LINES(SYS_CURRENCY_LOSS_REALISED)
			#CD_AMOUNT 		= #CD_AMOUNT + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT)
			#CD_AMOUNT_BASE 	= #CD_AMOUNT_BASE + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_BASE)
			#CD_AMOUNT_2_BASE 	= #CD_AMOUNT_2_BASE + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_2_BASE)
			#CD_ALLOC_BASE 		= #CD_ALLOC_BASE + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_ALLOC_BASE)
			#CD_ALLOC_2_BASE 	= #CD_ALLOC_2_BASE + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_ALLOC_2_BASE)
			#COST_CENTER		= AP_EFT_PAYMENT_LINES(COST_CENTER)
	END_BLOCK 

END_FORM 

PROCEDURE_FORM LOAD_TARGET_DATA_VT

	BEGIN_BLOCK TARGET_DETAILS 
	
		FIND IN AP_TRANSACTIONS &
			/LOCK=NONE &
			/SECONDARY &
			/STREAM_NAME = LTD &
			/WITH=COMPANY_CODE = #COMPANY_CODE &
			/WITH=AP_DIVISION = #DIVISION &
			/WITH=AP_TRANSACTION_NUMBER = AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER) &
			/WITH=TRANSACTION_TYPE = AP_EFT_PAYMENT_LINES(TRANSACTION_TYPE)
			 
		FIND IN SYS_CURRENCY_CODES &
				/LOCK=NONE &
				/WITH=SYS_CURRENCY_CODE = AP_EFT_PAYMENT_LINES(SYS_CURRENCY_CODE)
	
	END_BLOCK 

	BEGIN_BLOCK OS_BAL
		! The target must only be allocated with the values determined by CHECK_LINES
		#OS_BAL_CURR	= ABS(AP_EFT_PAYMENT_LINES(AP_ALLOCATION_CURRENCY) + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT)) 
		IF (#OS_BAL_CURR = LTD:AP_TRANSACTIONS(AP_OS_BALANCE_CURRENCY))
			#OS_BAL_BASE	= LTD:AP_TRANSACTIONS(AP_OS_BALANCE_BASE)
			#OS_BAL_BASE2	= LTD:AP_TRANSACTIONS(AP_OS_BALANCE_2_BASE)
		ELSE
			#OS_BAL_BASE	= ABS(AP_EFT_PAYMENT_LINES(AP_ALLOCATION_BASE) + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_BASE))
			#OS_BAL_BASE2	= ABS(AP_EFT_PAYMENT_LINES(AP_ALLOCATION_2_BASE) + AP_EFT_PAYMENT_LINES(CASH_DISCOUNT_2_BASE))
		END_IF
	END_BLOCK
	
	BEGIN_BLOCK LOAD_VT
	
		CLEAR_BUFFER TARGET_DATA_VT
		
		TARGET_DATA_VT(T_TRANSACTION_NUMBER) 	= AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER)
		TARGET_DATA_VT(T_TRANSACTION_TYPE)	= AP_EFT_PAYMENT_LINES(TRANSACTION_TYPE)
		TARGET_DATA_VT(TARGET_DORC)		= AP_EFT_PAYMENT_LINES(DORC_INDICATOR)
		TARGET_DATA_VT(TARGET_CURR_MASK)	= SYS_CURRENCY_CODES(SYS_CURRENCY_MASK)
		TARGET_DATA_VT(TARGET_CURR_CODE)	= AP_EFT_PAYMENT_LINES(SYS_CURRENCY_CODE)
		
		TARGET_DATA_VT(TARGET_OS_BAL_CURRENCY) 	= #OS_BAL_CURR
 		TARGET_DATA_VT(TARGET_OS_BAL_BASE) 	= #OS_BAL_BASE
 		TARGET_DATA_VT(TARGET_OS_BAL_BASE2) 	= #OS_BAL_BASE2
		TARGET_DATA_VT(TARGET_OS_BAL_DISC)	= ABS(AP_EFT_PAYMENT_LINES(CASH_DISCOUNT))
		TARGET_DATA_VT(TARGET_OS_BAL_CASH)	= 0.0

		IF (SOURCE_DATA_VT(CURRENCY_METHOD) = "0")
			TARGET_DATA_VT(TARGET_OS_BAL_BASE)	= #OS_BAL_CURR
		END_IF

		TARGET_DATA_VT(TOTAL_ALLOCATED_CURRENCY)	= 0.0
		TARGET_DATA_VT(TOTAL_ALLOCATED_BASE)		= 0.0
		TARGET_DATA_VT(TOTAL_ALLOCATED_BASE2)		= 0.0
		TARGET_DATA_VT(TOTAL_ALLOCATED_DISCOUNT)	= 0.0

		! Target Rate at Target date
		TARGET_DATA_VT(TARGET_TO_BASE2_RATE) 	= LTD:AP_TRANSACTIONS(SYS_CURRENCY_2_RATE)
		TARGET_DATA_VT(TARGET_TO_BASE_RATE) 	= LTD:AP_TRANSACTIONS(SYS_CURRENCY_RATE)
		TARGET_DATA_VT(TARGET_TO_BASE_RATIO) 	= LTD:AP_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC)
		TARGET_DATA_VT(TARGET_TO_SOURCE_RATE)	= AP_EFT_PAYMENT_LINES(SYS_TRANS_CASH_RATE) 
		TARGET_DATA_VT(TARGET_TO_SOURCE_RATIO)	= PARAMETER("MULTIPLY_RATIO_INDIC")
		TARGET_DATA_VT(TARGET_TO_BASE_S_DATE_RATE)	= AP_EFT_PAYMENT_LINES(SYS_TRAN_RATE_CR) 
		TARGET_DATA_VT(TARGET_TO_BASE_S_DATE_RATIO)	= AP_EFT_PAYMENT_LINES(SYS_TRAN_RATIO_CR)

		TARGET_DATA_VT(TARGET_EMU_CURR)			= SYS_CURRENCY_CODES(SYS_EURO_CURRENCY) 
 		TARGET_DATA_VT(TARGET_ALLOCATED_CURRENCY) 	= LTD:AP_TRANSACTIONS(AP_ALLOCATED_CURRENCY) 
 		TARGET_DATA_VT(TARGET_DISCOUNT_DATE)		= #PAYMENT_DATE
 		TARGET_DATA_VT(TARGET_DISCOUNT_AMT)		= AP_EFT_PAYMENT_LINES(CASH_DISCOUNT)
		TARGET_DATA_VT(TARGET_DECIMALS)			= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS) 
 		TARGET_DATA_VT(CONTROL_ACCOUNT)			= LTD:AP_TRANSACTIONS(CONTROL_ACCOUNT_NUMBER) 
 		TARGET_DATA_VT(CONTROL_SHORT_CODE)		= LTD:AP_TRANSACTIONS(CONTROL_SHORT_CODE) 

		TARGET_DATA_VT(COST_CENTER) 		= AP_EFT_PAYMENT_LINES(COST_CENTER)
! 		TARGET_DATA_VT(CURRENCY_VARIANCE)	= AP_EFT_PAYMENT_LINES(SYS_CURRENCY_GAIN_REALISED) &
!							- AP_EFT_PAYMENT_LINES(SYS_CURRENCY_LOSS_REALISED)
!??? No fund
!		TARGET_DATA_VT(SYS_FUND)			= AP_EFT_PAYMENT_LINES(SYS_FUND)

		TARGET_DATA_VT(TAX_VALUE)	= LTD:AP_TRANSACTIONS(TAX_VAL)
		TARGET_DATA_VT(FUNDS_DR)	= 0.0
		TARGET_DATA_VT(FUNDS_CR)	= 0.0
		TARGET_DATA_VT(TOTAL_FUND_AMOUNT)	= 0.0
		TARGET_DATA_VT(TOTAL_SYS_FUND)		= 0.0
		TARGET_DATA_VT(EVENLY_ALLOC)		= ""
		
		ADD TO TARGET_DATA_VT
		
	END_BLOCK
	
END_FORM

PROCEDURE_FORM TOTAL_SOURCE_TO_ALLOC &
	/TABLE=AP_EFT_PAYMENT_LINES &
	/SECONDARY &
	/STREAM_NAME= SRC &
	/WITH= COMPANY_CODE = #COMPANY_CODE &
	/WITH= AP_DIVISION = #DIVISION &
	/WITH= PAYMENT_RUN_NUMBER = #RUN_NUMBER &
	/WITH= PAYMENT_TYPE=#DOCUMENT_FORMAT &
	/WITH= TRANSACTION_TYPE <> PARAMETER("TTYPE_MP") &
	/WITH= VENDOR_NUMBER = AP_EFT_PAYMENT_LINES(VENDOR_NUMBER) &
	/WITH= SYS_PAYMENT_CURRENCY_CODE = AP_EFT_PAYMENT_LINES(SYS_PAYMENT_CURRENCY_CODE) &
	/STATISTIC=#SRC_CURRENCY_TO_ALLOC = TOTAL(SRC:AP_EFT_PAYMENT_LINES(AP_PAYMENT_CURRENCY)) &
	/STATISTIC=#SRC_BASE_TO_ALLOC = TOTAL(SRC:AP_EFT_PAYMENT_LINES(AP_PAYMENT_BASE)) &
	/STATISTIC=#SRC_BASE2_TO_ALLOC = TOTAL(SRC:AP_EFT_PAYMENT_LINES(AP_PAYMENT_2_BASE)) 

END_FORM 

PROCEDURE_FORM LOAD_SOURCE_DATA_VT

	BEGIN_BLOCK LOAD_VT
	
		CLEAR_BUFFER SOURCE_DATA_VT
		
		SOURCE_DATA_VT(COMPANY_CODE)		= #COMPANY_CODE
		SOURCE_DATA_VT(DIVISION)		= #DIVISION
		SOURCE_DATA_VT(SOURCE_DORC)		= #DORC_CP
		SOURCE_DATA_VT(CURRENCY_METHOD)		= #CURRENCY_METHOD
		SOURCE_DATA_VT(BASE_CURR_MASK)		= #BASE_CURRENCY_MASK

		SOURCE_DATA_VT(S_TRANSACTION_TYPE)	= #S_TRANSACTION_TYPE
		SOURCE_DATA_VT(S_TRANSACTION_NUMBER)	= #CP_AP_TRANSACTION_NUMBER
		SOURCE_DATA_VT(CONTROL_ACCOUNT)		= #AP_FULL_ACCOUNT
		SOURCE_DATA_VT(CONTROL_SHORT_CODE)	= #AP_SHORT_CODE

		SOURCE_DATA_VT(ORIG_CASH_TO_ALLOC)  	= 0.0
		SOURCE_DATA_VT(ORIG_BASE_TO_ALLOC)	= 0.0 
		SOURCE_DATA_VT(ORIG_BASE2_TO_ALLOC)	= 0.0 

		SOURCE_DATA_VT(REMAIN_CASH_TO_ALLOC) 	= #SRC_CURRENCY_TO_ALLOC 
		SOURCE_DATA_VT(REMAIN_BASE_TO_ALLOC)	= #SRC_BASE_TO_ALLOC 
		SOURCE_DATA_VT(REMAIN_BASE2_TO_ALLOC)	= #SRC_BASE2_TO_ALLOC 

		IF (SOURCE_DATA_VT(CURRENCY_METHOD) = "0")
			SOURCE_DATA_VT(REMAIN_BASE_TO_ALLOC)	= #SRC_CURRENCY_TO_ALLOC
		END_IF

		SOURCE_DATA_VT(TOTAL_ALLOCATED_CURRENCY)	= 0.0 
		SOURCE_DATA_VT(TOTAL_ALLOCATED_BASE)		= 0.0 
		SOURCE_DATA_VT(TOTAL_ALLOCATED_BASE2)		= 0.0 
		SOURCE_DATA_VT(TOTAL_ALLOCATED_CASH)		= 0.0 

		SOURCE_DATA_VT(BASE_CURR_CODE)		= #BASE_CURRENCY_CODE
		SOURCE_DATA_VT(BASE2_CURR_CODE)		= #BASE_2_CURRENCY_CODE
		SOURCE_DATA_VT(BASE_DECIMALS)		= #BASE_CURRENCY_DECIMAL
		SOURCE_DATA_VT(BASE2_DECIMALS)		= #BASE_2_CURRENCY_DECIMALS

		SOURCE_DATA_VT(SOURCE_DECIMALS)		= #CASH_CURRENCY_DECIMAL
		SOURCE_DATA_VT(SOURCE_CURR_MASK)	= #CASH_CURRENCY_MASK
		SOURCE_DATA_VT(SOURCE_CURR_CODE)	= #CASH_CURRENCY_CODE
		SOURCE_DATA_VT(SOURCE_TO_BASE2_RATE)	= #CASH_CURRENCY_2_RATE
		SOURCE_DATA_VT(SOURCE_TO_BASE_RATE)	= #CASH_CURRENCY_RATE
		SOURCE_DATA_VT(SOURCE_TO_BASE_RATIO)	= #CASH_CURRENCY_RATIO_INDIC
		SOURCE_DATA_VT(BASE_TO_BASE2_RATE)	= #BASE_TO_BASE2_RATE

		SOURCE_DATA_VT(DISCOUNTS_POSTED_AT)	= #DISCOUNTS_POSTED_AT
		SOURCE_DATA_VT(SOURCE_PAYMENT_DATE)	= #PAYMENT_DATE
		SOURCE_DATA_VT(ALLOCATION_DATE)		= #POSTING_DATE
		SOURCE_DATA_VT(POSTING_PERIOD)		= #POSTING_PERIOD
		SOURCE_DATA_VT(POSTING_YEAR)		= #POSTING_YEAR
		SOURCE_DATA_VT(SOURCE_MODULE)		= PARAMETER("MODULE_AP")
		SOURCE_DATA_VT(VENDOR_NUMBER)		= AP_EFT_PAYMENT_LINES(VENDOR_NUMBER)
		SOURCE_DATA_VT(PAYEE_NUMBER)		= AP_EFT_PAYMENT_LINES(PAYEE_NUMBER) 

		SOURCE_DATA_VT(INTERFUND_FLAG)	= #INTERFUND
		SOURCE_DATA_VT(TAX_ON_CASH)		= #TAX_ON_CASH
		SOURCE_DATA_VT(CASH_DISCOUNT_TAX)	= #DISCOUNT_FLAG
		SOURCE_DATA_VT(COST_CENTER)		= AP_EFT_PAYMENT_LINES(COST_CENTER)
		SOURCE_DATA_VT(PAYMENT_REFERENCE)	= AP_EFT_PAYMENT_LINES(PAYMENT_RUN_NUMBER)
		SOURCE_DATA_VT(PAYMENT_RUN_NUMBER)	= AP_EFT_PAYMENT_LINES(PAYMENT_RUN_NUMBER)
		SOURCE_DATA_VT(TEN99_IN_USE)		= PAYEES(SYS_TEN99_IN_USE)

		SOURCE_DATA_VT(BANK_ACCOUNT)			= #BANK_FULL_ACCOUNT
		SOURCE_DATA_VT(BANK_SHORT_CODE)			= #BANK_SHORT_CODE
		SOURCE_DATA_VT(BANK_COST_CENTER_PATCHED)	= #BANK_COST_CENTER_PATCHED
		SOURCE_DATA_VT(BANK_CODE)			= #BANK_CODE

		SOURCE_DATA_VT(CURRENCY_VARIANCE)	= 0.0
		SOURCE_DATA_VT(MUST_FULLY_ALLOC)	= ""
		SOURCE_DATA_VT(CUSTOMER_NUMBER)		= ""
				
		ADD TO SOURCE_DATA_VT
		
	END_BLOCK  

END_FORM 

PROCEDURE_FORM CLEAR_TARGET_DATA_VT

	BEGIN_BLOCK CLEAR_ALL
		DELETE ALL FROM TARGET_DATA_VT
		DELETE ALL FROM ALLOCATIONS_VT
	END_BLOCK  
END_FORM
	
PROCEDURE_FORM CLEAR_AND_LOAD_SOURCE

	BEGIN_BLOCK CLEAR
		#CD_AMOUNT = 0
		#CP_AMOUNT_CURRENCY = 0
		#CP_CURRENCY_GAIN = 0
		#CP_CURRENCY_LOSS = 0
		#CP_AMOUNT_BASE = 0
		#CP_AMOUNT_2_BASE = 0
		#CD_AMOUNT_BASE = 0
		#CD_AMOUNT = 0
		#CD_ALLOC_BASE = 0
		#CD_ALLOC_2_BASE = 0

		PERFORM BEFORE_CP_RECORD
	 	PERFORM CREATE_ALLOC_POSTING_VT
		PERFORM CLEAR_TARGET_DATA_VT
		DELETE ALL FROM SOURCE_DATA_VT
	END_BLOCK

	BEGIN_BLOCK LOAD_SOURCE 
		! Load the Source Data Vt from thin air
		#S_TRANSACTION_TYPE = #TTYPE_CP
		PERFORM LOAD_SOURCE_DATA_VT
	END_BLOCK 
END_FORM 

PROCEDURE_FORM CREATE_GL_POSTINGS_FOR_CP

	BEGIN_BLOCK GL_POSTINGS
		! Debit AP Control, Credit Bank.

		#DR_SHORT_CODE	= AP_TRANSACTIONS(CONTROL_SHORT_CODE)
		#DR_GL_ACCOUNT	= AP_TRANSACTIONS(CONTROL_ACCOUNT_NUMBER)
		#CR_SHORT_CODE	= #BANK_SHORT_CODE
		#CR_GL_ACCOUNT	= #BANK_FULL_ACCOUNT

		#SYS_POST_TYPE_DR = PARAMETER("GL_POSTING_AUTOMATIC")
		#SYS_POST_TYPE_CR = ""

		#GL_POSTING_CURRENCY	= AP_TRANSACTIONS(AP_TRAN_TOTAL_CURRENCY)
		#GL_POSTING_BASE	= AP_TRANSACTIONS(AP_TRAN_TOTAL_BASE)
		#GL_POSTING_2_BASE      = AP_TRANSACTIONS(AP_TRAN_TOTAL_2_BASE)

		#TRANSACTION_TYPE	= AP_TRANSACTIONS(TRANSACTION_TYPE)
		#POSTING_DESCRIPTION	= AP_TRANSACTIONS(VENDOR_REFERENCE)
		#POSTING_REFERENCE	= AP_TRANSACTIONS(AP_TRANSACTION_NUMBER) 
		#SOURCE_REFERENCE	= AP_TRANSACTIONS(VENDOR_NUMBER)

		#CURRENCY_CODE		= AP_TRANSACTIONS(SYS_CURRENCY_CODE)
		#CURRENCY_RATE		= AP_TRANSACTIONS(SYS_CURRENCY_RATE)
		#CURR_RATIO_INDIC	= AP_TRANSACTIONS(SYS_CURRENCY_RATIO_INDIC)

		#CURRENCY_2_RATE	= AP_TRANSACTIONS(SYS_CURRENCY_2_RATE) 

		#RATE_OVERRIDE 		= #YES
		#RATE_AUTHORITY		= AP_TRANSACTIONS(SYS_RATE_AUTHORITY)
		#RATE_TYPE		= AP_TRANSACTIONS(SYS_RATE_TYPE)
		#CURRENCY_DATE		= #PAYMENT_DATE

		#CP_AMOUNT_CURRENCY 	= #GL_POSTING_CURRENCY
		#JOURNAL_BATCH_NUMBER	= AP_TRANSACTIONS(AP_TRANSACTION_NUMBER)
		
		PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT
		PERFORM LOAD_CURRENCY_CONTROL_VT

		PERFORM SETUP_CR_POSTING
		PERFORM SETUP_DR_POSTING

		PERFORM "GEMLB:LB_S_L_ALLOC_POSTINGS"(#SUCCESS,#RETURN_MESSAGE)
			IF (#SUCCESS = #NO)
				ERROR/TEXT_ONLY/BELL/WAIT #RETURN_MESSAGE
				EXIT(%FAILURE)
		END_IF
	END_BLOCK

END_FORM 

PROCEDURE_FORM CREATE_GL_POSTINGS_FOR_MP 

	BEGIN_BLOCK POST_GL_FOR_MANUAL_PAYMENT

		#DR_SHORT_CODE		= #AP_SHORT_CODE
		#DR_GL_ACCOUNT		= #AP_FULL_ACCOUNT
		#CR_SHORT_CODE		= #BANK_SHORT_CODE
		#CR_GL_ACCOUNT		= #BANK_FULL_ACCOUNT

		#SYS_POST_TYPE_DR = PARAMETER("GL_POSTING_AUTOMATIC")
		#SYS_POST_TYPE_CR = ""

		#GL_POSTING_CURRENCY	= MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_CURRENCY)
		#GL_POSTING_BASE	= MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_BASE)
		#GL_POSTING_2_BASE	= MANUAL_PAYMENT_LINES(AP_TRAN_TOTAL_2_BASE)

		#TRANSACTION_TYPE	= AP_EFT_PAYMENT_LINES(TRANSACTION_TYPE)
		#POSTING_DESCRIPTION	= MESSAGE("P_51240")
		#POSTING_REFERENCE	= AP_EFT_PAYMENT_LINES(AP_TRANSACTION_NUMBER)
	  	#SOURCE_REFERENCE	= AP_EFT_PAYMENT_LINES(VENDOR_NUMBER)

		#CURRENCY_CODE		= MANUAL_PAYMENT_LINES(SYS_CURRENCY_CODE)
		#CURRENCY_RATE		= MANUAL_PAYMENT_LINES(SYS_CURRENCY_RATE)
		#CURR_RATIO_INDIC	= MANUAL_PAYMENT_LINES(SYS_CURRENCY_RATIO_INDIC)

		#CURRENCY_2_RATE	= MANUAL_PAYMENT_LINES(SYS_CURRENCY_2_RATE) 

		#RATE_OVERRIDE	= #YES
		#RATE_AUTHORITY	= MANUAL_PAYMENT_LINES(SYS_RATE_AUTHORITY)
		#RATE_TYPE 	= MANUAL_PAYMENT_LINES(SYS_RATE_TYPE)
		#CURRENCY_DATE	= #PAYMENT_DATE

		#JOURNAL_BATCH_NUMBER	= MANUAL_PAYMENTS(MANUAL_PAYMENT_BATCH_NUMBER)

		PERFORM CLEAR_SYS_CURRENCY_CONTROL_VT
		PERFORM LOAD_CURRENCY_CONTROL_VT

		PERFORM SETUP_CR_POSTING
		PERFORM SETUP_DR_POSTING

		PERFORM "GEMLB:LB_S_L_ALLOC_POSTINGS"(#SUCCESS,#RETURN_MESSAGE)
			IF (#SUCCESS = #NO)
				ERROR/TEXT_ONLY/BELL/WAIT #RETURN_MESSAGE
				EXIT(%FAILURE)
		END_IF
		! Clear the ALLOC_POSTINGS_VT out again afterwards
	 	PERFORM CREATE_ALLOC_POSTING_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM SETUP_DR_POSTING
	
	BEGIN_BLOCK SETUP_DR_POSTING
			
		#GL_SHORT_CODE 		= #DR_SHORT_CODE
		#GL_ACCOUNT_NUMBER 	= #DR_GL_ACCOUNT
		#GL_POSTING_CURRENCY_DR = #GL_POSTING_CURRENCY
		#GL_POSTING_CURRENCY_CR = 0.0
		#GL_POSTING_BASE_DR 	= #GL_POSTING_BASE
		#GL_POSTING_BASE_CR 	= 0.0
		#GL_POSTING_2_BASE_DR 	= #GL_POSTING_2_BASE
		#GL_POSTING_2_BASE_CR 	= 0.0	
		#SYS_POST_TYPE 		= #SYS_POST_TYPE_DR

		PERFORM LOAD_ALLOC_POSTING_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM SETUP_CR_POSTING
	BEGIN_BLOCK SETUP_CR_POSTING
	
		#GL_SHORT_CODE 		= #CR_SHORT_CODE
		#GL_ACCOUNT_NUMBER 	= #CR_GL_ACCOUNT
		#GL_POSTING_CURRENCY_DR = 0.0
		#GL_POSTING_CURRENCY_CR = #GL_POSTING_CURRENCY
		#GL_POSTING_BASE_DR 	= 0.0
		#GL_POSTING_BASE_CR 	= #GL_POSTING_BASE
		#GL_POSTING_2_BASE_DR 	= 0.0
		#GL_POSTING_2_BASE_CR 	= #GL_POSTING_2_BASE
		#SYS_POST_TYPE 		= #SYS_POST_TYPE_CR

		PERFORM LOAD_ALLOC_POSTING_VT
	END_BLOCK
                        			
END_FORM

PROCEDURE_FORM LOAD_ALLOC_POSTING_VT

	BEGIN_BLOCK ADD

		CLEAR_BUFFER ALLOC_POSTING_VT

		IF (#CURRENCY_CODE = #BASE_2_CURRENCY_CODE)
			#CURRENCY_2_RATE = 1.0
		END_IF

		ALLOC_POSTING_VT(COMPANY_CODE)		= #COMPANY_CODE
		ALLOC_POSTING_VT(DIVISION)		= #DIVISION
		ALLOC_POSTING_VT(SOURCE_MODULE)		= (PARAMETER("MODULE_AP"))
		ALLOC_POSTING_VT(CURRENCY_METHOD)	= #CURRENCY_METHOD
		ALLOC_POSTING_VT(POSTING_DATE) 		= #POSTING_DATE
		ALLOC_POSTING_VT(SOURCE_REFERENCE)	= #SOURCE_REFERENCE
		ALLOC_POSTING_VT(ACTIVATION_STATUS)	= (PARAMETER("STATUS_ACTIVE"))
		ALLOC_POSTING_VT(TRANSACTION_CURRENCY_CODE)	= #CURRENCY_CODE
		ALLOC_POSTING_VT(BASE_CURRENCY_CODE)	= #BASE_CURRENCY_CODE
		ALLOC_POSTING_VT(BASE_2_CURRENCY_CODE)	= #BASE_2_CURRENCY_CODE
		ALLOC_POSTING_VT(TRANSACTION_RATE)	= #CURRENCY_RATE
		ALLOC_POSTING_VT(FIRST_CURRENCY_RATE)	= #CURRENCY_RATE
		ALLOC_POSTING_VT(SECOND_CURRENCY_RATE)	= #CURRENCY_2_RATE
		ALLOC_POSTING_VT(CURR_RATIO_INDIC)	= #CURR_RATIO_INDIC
		ALLOC_POSTING_VT(CURRENCY_DATE) 	= #CURRENCY_DATE
		ALLOC_POSTING_VT(MODULE_TRANSACTION_TYPE)	= #TRANSACTION_TYPE
		ALLOC_POSTING_VT(DOCUMENT_NUMBER)	= #POSTING_REFERENCE
		ALLOC_POSTING_VT(COST_CENTER)		= #COST_CENTER		
		ALLOC_POSTING_VT(GL_SHORT_CODE)		= #GL_SHORT_CODE
		ALLOC_POSTING_VT(ACCOUNT_NUMBER)	= #GL_ACCOUNT_NUMBER
		ALLOC_POSTING_VT(POSTING_REFERENCE)	= #POSTING_REFERENCE
		ALLOC_POSTING_VT(GL_POSTINGS_IN_BATCH)	= #POSTINGS_IN_BATCH
		ALLOC_POSTING_VT(ACCOUNT_IDENT)		= (PARAMETER("ACCOUNT_IDENT_ACTUAL"))
		ALLOC_POSTING_VT(POSTING_DESCRIPTION)	= #POSTING_DESCRIPTION
		ALLOC_POSTING_VT(SYS_POST_TYPE)		= #SYS_POST_TYPE
		ALLOC_POSTING_VT(BATCH_NUMBER)		= #RUN_NUMBER
		ALLOC_POSTING_VT(JOURNAL_BATCH_NUMBER)	= #JOURNAL_BATCH_NUMBER
		ALLOC_POSTING_VT(YEAR)		= #POSTING_YEAR
		ALLOC_POSTING_VT(PERIOD)	= #POSTING_PERIOD
!		ALLOC_POSTING_VT(GL_LINK_REFERENCE) 		= #LINK_REFERENCE
!		ALLOC_POSTING_VT(GL_LINK_TRANSACTION_TYPE) 	= #LINK_TRANSACTION_TYPE
		ALLOC_POSTING_VT(GL_POSTING_CURRENCY_DR)	= #GL_POSTING_CURRENCY_DR
		ALLOC_POSTING_VT(GL_POSTING_CURRENCY_CR)	= #GL_POSTING_CURRENCY_CR
		IF	(#CURRENCY_METHOD > '0')
			ALLOC_POSTING_VT(GL_POSTING_BASE_DR)	= #GL_POSTING_BASE_DR
			ALLOC_POSTING_VT(GL_POSTING_BASE_CR)	= #GL_POSTING_BASE_CR
		END_IF
		IF	(#STORE_BASE2 = #YES)
			ALLOC_POSTING_VT(GL_POSTING_BASE_2_DR)	= #GL_POSTING_2_BASE_DR
			ALLOC_POSTING_VT(GL_POSTING_BASE_2_CR)	= #GL_POSTING_2_BASE_CR
		END_IF

		ADD TO ALLOC_POSTING_VT

		#SYS_POST_TYPE = ""

	END_BLOCK
				
END_FORM

PROCEDURE_FORM CREATE_ALLOC_POSTING_VT

	BEGIN_BLOCK ADD
		#A=TABLE_CHECK("ALLOC_POSTING_VT","")
		IF (#A=%NORMAL)
			DELETE TABLE ALLOC_POSTING_VT
		END_IF
		
		ADD TABLE ALLOC_POSTING_VT &
			/VIRTUAL &
			/DESCRIPTION = "Table ALLOC_POSTING_VT [VIRTUAL]" &
			/ADD_FIELD = COMPANY_CODE &
			/ADD_FIELD = DIVISION &
			/ADD_FIELD = SOURCE_MODULE &
			/ADD_FIELD = CURRENCY_METHOD BASED_ON SYS_CURRENCY_METHOD &
			/ADD_FIELD = POSTING_DATE &
			/ADD_FIELD = SOURCE_REFERENCE &
			/ADD_FIELD = ACTIVATION_STATUS &						
			/ADD_FIELD = TRANSACTION_CURRENCY_CODE BASED_ON SYS_CURRENCY_CODE  &
			/ADD_FIELD = BASE_CURRENCY_CODE BASED_ON SYS_CURRENCY_CODE &
			/ADD_FIELD = BASE_2_CURRENCY_CODE BASED_ON SYS_CURRENCY_CODE &
			/ADD_FIELD = TRANSACTION_RATE BASED_ON SYS_CURRENCY_RATE &
			/ADD_FIELD = FIRST_CURRENCY_RATE BASED_ON SYS_CURRENCY_RATE &
			/ADD_FIELD = SECOND_CURRENCY_RATE BASED_ON SYS_CURRENCY_RATE &
			/ADD_FIELD = CALCULATED_RATE BASED_ON SYS_CURRENCY_RATE  &
			/ADD_FIELD = CURR_RATIO_INDIC BASED_ON SYS_CURRENCY_RATIO_INDIC  &			
			/ADD_FIELD = MODULE_TRANSACTION_TYPE &
			/ADD_FIELD = DOCUMENT_NUMBER &
			/ADD_FIELD = COST_CENTER &
			/ADD_FIELD = WAREHOUSE &
			/ADD_FIELD = GL_SHORT_CODE  &    
			/ADD_FIELD = ACCOUNT_NUMBER  &            
			/ADD_FIELD = POSTING_REFERENCE  &
			/ADD_FIELD = ACCOUNT_IDENT  &
			/ADD_FIELD = POSTING_DESCRIPTION  &
			/ADD_FIELD = SYS_POST_TYPE  &
			/ADD_FIELD = YEAR  &
			/ADD_FIELD = PERIOD &
			/ADD_FIELD = GL_POSTINGS_IN_BATCH &
			/ADD_FIELD = BATCH_NUMBER &
			/ADD_FIELD = JOURNAL_BATCH_NUMBER &
			/ADD_FIELD = GL_LINK_TRANSACTION_TYPE BASED_ON TRANSACTION_TYPE &
			/ADD_FIELD = GL_LINK_REFERENCE BASED_ON POSTING_REFERENCE &
			/ADD_FIELD = GL_POSTING_CURRENCY_DR BASED_ON GL_POSTING_CURRENCY &
			/ADD_FIELD = GL_POSTING_CURRENCY_CR BASED_ON GL_POSTING_CURRENCY &
			/ADD_FIELD = GL_POSTING_BASE_DR BASED_ON GL_POSTING_BASE &
			/ADD_FIELD = GL_POSTING_BASE_CR BASED_ON GL_POSTING_BASE &
			/ADD_FIELD = GL_POSTING_BASE_2_DR BASED_ON GL_POSTING_2_BASE &
			/ADD_FIELD = GL_POSTING_BASE_2_CR BASED_ON GL_POSTING_2_BASE &
			/ADD_FIELD = GL_ANALYSIS_CODE_1 &
			/ADD_FIELD = GL_ANALYSIS_CODE_2 &
			/ADD_FIELD = GL_ANALYSIS_CODE_3 &
			/ADD_FIELD = CURRENCY_DATE BASED_ON SYS_CURRENCY_DATE

			
			IF (%STATUS<>%SUCCESS)
				MESSAGE/BELL/IDENTIFIER/WAIT P_02678,"ALLOC_POSTING_VT"
			END_IF
	
	END_BLOCK
END_FORM

