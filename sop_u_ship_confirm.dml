!Changelog
!Change 001 - Allow despatch date to be set by the user in all circumstances
!Change 002 - Allow PRO number to be set by user
!Change 003 - Allow Freight Mode to be changed at confirm time

TITLE SOP_U_002, "Confirm Despatch Notes"

PROCEDURE_FORM START_UP

	BEGIN_BLOCK DOCUMENTATION

		!	=====================================================
		!
		!	(c) Copyright 1988-2009 CDC Software
		!	All Rights Reserved
		!
		!	This program is the proprietary and confidential information
		!	of CDC Software and may be used and disclosed only
		!	as authorized in a license agreement authorizing and
		!	controlling such use and disclosure
		!
		!	=====================================================

	END_BLOCK

	BEGIN_BLOCK INIT
		PERFORM INITIALIZE_DESPATCH
		IF (%STATUS=%FAILURE)
			EXIT
		END_IF
		
		#SHIPMENT_CONFIRM_NONE         = '0'
		#SHIPMENT_CONFIRM_SOME         = '1'
		#SHIPMENT_CONFIRM_ALL          = '2'

		PERFORM SALES_DESPATCH_ENTRY

	END_BLOCK

END_FORM


FORM SALES_DESPATCH_ENTRY /ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
	/BASE &
	/TITLE=(MESSAGE("P_50064"))


	BEGIN_BLOCK SELECT
		PERFORM INIT_SOP_DESPATCH_NOTES_VT
		PERFORM DELETE_ALL_RS_SHIP_CONFIRM
		DELETE ALL FROM RS_SYS_MESSAGES
		
		FIND IN AR_CONTROLS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=REQUIRE_SHIP_INFO_FLAG=#YES
		
		IF (%STATUS <> %SUCCESS)
			#IS_CARR_INFO_REQ = #NO
			#SHOW_SHIP_NOTES = #YES
		ELSE
			#IS_CARR_INFO_REQ = #YES
			#SHOW_SHIP_NOTES = #NO
		END_IF
		
		COMMIT
		
		PERFORM SALES_DESPATCH_UI
		IF (%STATUS <> %SUCCESS)
			EXIT
		END_IF
		
		IF (#SHIPMENT_NUM<>"")
			#ENTRY_BY_SHIPMENT=#YES
		ELSE
			#ENTRY_BY_SHIPMENT=#NO
		END_IF
		
		IF (#ENTRY_BY_SHIPMENT=#YES)
			#P="P_37293"
			#TITLE=(MESSAGE(#P,#SHIPMENT_NUM))
		ELSE
			#TITLE=(MESSAGE("P_50063",#SHIP_NOTES))
		END_IF
	END_BLOCK

	BEGIN_BLOCK PROCESS_INITIAL
		! Load the VT for passing to the Ship Confirm Library routine
		#COUNT = 0
		#WMS_WAREHOUSE_FOUND = #NO
		#DC_WAREHOUSE_FOUND = #NO
		PERFORM LOAD_RS_SHIP_CONFIRM
		IF (%STATUS <> %SUCCESS OR #COUNT = 0)
			IF (#WMS_WAREHOUSE_FOUND = #YES)
				! This function cannot confirm shipments from a WMS warehouse
				MESSAGE/IDENTIFIER/BELL/WAIT P_22683
			END_IF
			IF (#DC_WAREHOUSE_FOUND = #YES)
   			! This function cannot amend shipments from a DC warehouse
   			MESSAGE/IDENTIFIER/BELL/WAIT P_23028
  		END_IF
			MESSAGE/IDENTIFIER/BELL/WAIT FA_00342
			GOTO SELECT
		END_IF

		! Call Ship Confirm routine to load despatch notes vt
		PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" PRE_UPDATE_LOAD_SOP
		IF (%STATUS <> %SUCCESS)
			! vt load failed, and Despatch Header status
			! flag updates should have rolled back
			PERFORM "GEMLB:LB_L_DISPLAY_MESSAGES" ("", "Y")
			GOTO SELECT
		END_IF

		PERFORM DISPLAY_SALES_TOP
	END_BLOCK
	
	BEGIN_BLOCK DESPATCH_LINES_DISP
	
		PERFORM DISPLAY_DESPATCH_LINES
		IF (%STATUS <> %SUCCESS)
			! Call Ship Confirm routine to reset all header status flags
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT (#COMPANY_CODE)
			GOTO SELECT
		END_IF
	END_BLOCK
		
	BEGIN_BLOCK CARRIER_INFO_ENTRY
	
		#CARRIER_FORWARD = #NO
		IF(#IS_CARR_INFO_REQ = #YES) 
		
			#SHIPMENT_NUMBER               = ""
			#CARRIER_ID                    = ""
			#SHIP_INFO_CODE                = ""
			#CARRIER_NAME          		   = ""
			#SHIP_INFO_DESCRIPTION         = ""
			
			#CARRIER_ID_PRE                = ""
			#SHIP_INFO_CODE_PRE            = ""
			#SHIPMENT_CARRIER_ID           = ""
			#SHIPMENT_SHIP_INFO_CODE       = ""
			#CARRIER_SHIP_INFO_CHANGE_FLAG = #YES
			
			PERFORM GET_SHIPMENT_NUMBER
			
			CLEAR_ARRAY #ARR_SHIPPING_INFO_LINES()
			
			PERFORM GET_SHIPMENT_CARRIER_SHIP (#SHIPMENT_NUMBER,#CARRIER_SHIP_INFO_CHANGE_FLAG)
			
			IF ( #SHIPMENT_NUMBER <> "0" ) 
				START_STREAM SDV &
					/LOCK=NONE &
					/TABLE=SHIPMENT_CARRIER_SHIPPING_VT
		
				WHILE(1)
					FETCH SDV /FAILURE=(CONTINUE OUT)
			
					#ARR_SHIPPING_INFO_LINES(SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)) = SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE)
				END_WHILE					
			END_IF 
			
			
			#CARRIER_ID_PRE     = #CARRIER_ID
			#SHIP_INFO_CODE_PRE = #SHIP_INFO_CODE
			
			IF ( #SHIPMENT_NUMBER <> "" ) 
				#SHIPMENT_CARRIER_ID           = #CARRIER_ID
				#SHIPMENT_SHIP_INFO_CODE       = #SHIP_INFO_CODE				
			END_IF 
			
			PERFORM GET_CARRIER_SHIP_DESC 
			
			PERFORM CARRIER_SHIPPING_CODE_ENTRY
			
			IF(%STATUS=%BACK)
		
				GOTO DESPATCH_LINES_DISP
			ELSE_IF(%STATUS=%EXIT)
			
				PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT (#COMPANY_CODE)
				GOTO SELECT
			END_IF
			#CARRIER_FORWARD = #YES
		END_IF
	END_BLOCK
	
	BEGIN_BLOCK CONFIRM_PROCESSING
	
		MESSAGE/IDENTIFIER/BELL/WAIT P_01285

		! Call Ship Confirm routine for shipment validation
		PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" &
				(#RUN_TYPE_SOP, &
				#CALL_MODE_I, &
				#SHIP_VALIDATE, &
				"", &
				"", &
				"", &
				#R_EXCEEDED, &
				#R_PICK_EXCEEDED, &
				#R_UNDERSHIPED, &
				#R_ERROR_PART, &
				#R_ERROR_PACK_DESP_QTY, &
				#R_ERROR_QOH_SOL, &
				#R_ERROR_UNIT, &
				#R_ERROR_LOT, &
				#R_ERROR_LOT_SEQ, &
				#R_ERROR_BIN, &
				#R_ERROR_MH, &
				#R_ERROR_MASK, &
				#R_ERROR_UNDERSHIP_MSG, &
				#R_XFER_USER_INTERACTION)

		IF (%STATUS <> %SUCCESS)
			IF (#R_EXCEEDED)
				PERFORM QTY_EXCEEDED
			ELSE_IF (#R_PICK_EXCEEDED)
				PERFORM PICKED_QTY_EXCEEDED
			ELSE_IF (#R_UNDERSHIPED)
				PERFORM PICKED_QTY_UNDERSHIP
			ELSE
				PERFORM "GEMLB:LB_L_DISPLAY_MESSAGES" ("", "Y")
			END_IF

			GOTO SELECT
		END_IF

		#OPT = ""
		PERFORM CONFIRM_MENU
		IF (%STATUS <> %SUCCESS)
			! Call Ship Confirm routine to reset all header status flags
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT (#COMPANY_CODE)
			GOTO SELECT
		END_IF

	END_BLOCK

	BEGIN_BLOCK DESPATCH
		COMMIT
		IF (#OPT="BATCH") GOTO BATCH_PROCESS
		
		! Call Ship Confirm routine to update shipments
		PERFORM /NODEADLOCK_EXIT "GEMSOP:SOP_S_L_SHIP_CONFIRM" &
				(#RUN_TYPE_SOP, &
				#CALL_MODE_I, &
				#SHIP_UPDATE, &
				#MV_YEAR, &
				#MV_PERIOD, &
				#DESPATCH_DATE)
		
		IF(%STATUS = %DEADLOCK)

			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT(#COMPANY_CODE)
			GOTO SELECT
		END_IF
		
		IF ( #IS_CARR_INFO_REQ = #YES ) 
			PERFORM SAVE_SHIPMENT_CARRIER_INFO
			
			PERFORM UPDATE_SHIPMENT_STATUS
		END_IF
		
		!---Create workflow for ShipNoteConfirm and UnderOverShipment workflow---		
		
		PERFORM "GEMLB:LB_L_SHIPNOTE_EVENTS" CONFIRM
					
		PERFORM "GEMLB:LB_L_DISPLAY_MESSAGES"

		PERFORM DELETE_ALL_RS_SHIP_CONFIRM
		GOTO SELECT
	END_BLOCK

	BEGIN_BLOCK BATCH_PROCESS
                IF (#LEGAL_POSTING_CODE <> #JAPAN_LEGAL_POSTING)
                        #MV_YEAR        = ""
                        #MV_PERIOD      = ""
                        #DESPATCH_DATE  = ""
                END_IF

		PERFORM/BATCH 'GEMSYS:SYS_COMPANY_SETUP' BATCH_ENTRY ( &
			#COMPANY_CODE, &
			'GEMSOP:SOP_S_L_SHIP_CONFIRM', &
			'SALES_BATCH_SETUP', &
			#DIVISION,&
			#ID, &
			#SHIP_NOTES, &
			#MV_YEAR, &
			#MV_PERIOD, &
			#DESPATCH_DATE)
			
		IF (%STATUS = %EXIT OR %STATUS = %BACK)
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT (#COMPANY_CODE)
			GOTO SELECT
		END_IF
	END_BLOCK

END_FORM


PROCEDURE_FORM LOAD_RS_SHIP_CONFIRM &
	/TABLE=DESPATCH_NOTES &
	/LOCK=NONE &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=DIVISION=#DIVISION &
	/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES &
	/WITH=CONFIRM_DESPATCH<>#YES &
	/WITH=TM_LOAD_PLANNING <> #YES &
	/WITH=PRINT_FLAG=#YES &
	/SORTED_BY=(DESPATCH_NOTE) &
	/GROUPED_BY=(DESPATCH_NOTE)

	BEGIN_BLOCK CHECK_WAREHOUSE 
	
	    IF (DESPATCH_NOTES(WAREHOUSE) <> "")
			FIND IN WAREHOUSE_CONTROLS &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=WAREHOUSE=DESPATCH_NOTES(WAREHOUSE)

			IF (%STATUS <> %SUCCESS) 
				GOTO NEXT
			ELSE
				IF (WAREHOUSE_CONTROLS(WMS_IN_USE) = #YES) 
					#WMS_WAREHOUSE_FOUND = #YES
					GOTO NEXT
				END_IF 
				IF (WAREHOUSE_CONTROLS(DATA_CAPTURE_IN_USE) = #YES) 
					#DC_WAREHOUSE_FOUND = #YES
					GOTO NEXT
				END_IF
			END_IF 
		END_IF

	END_BLOCK 

	BEGIN_BLOCK UPDATE_RS_SHIP_CONFIRM

		CLEAR_BUFFER RS_SHIP_CONFIRM

		RS_SHIP_CONFIRM(COMPANY_CODE)  = #COMPANY_CODE
		RS_SHIP_CONFIRM(DIVISION)      = #DIVISION
		RS_SHIP_CONFIRM(SHIP_NOTE)     = DESPATCH_NOTES(DESPATCH_NOTE)

		IF (#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
			RS_SHIP_CONFIRM(SHIP_DATE) = #DESPATCH_DATE
		ELSE
			RS_SHIP_CONFIRM(SHIP_DATE) = ""
		END_IF

		ADD TO RS_SHIP_CONFIRM

		IF (%STATUS <> %SUCCESS)
			EXIT (%FAILURE)
		END_IF

		#COUNT = #COUNT + 1

	END_BLOCK

	BEGIN_BLOCK NEXT 
	END_BLOCK 

END_FORM

PROCEDURE_FORM SHIPPING_ENTRY

	BEGIN_BLOCK INIT

		PERFORM INITIALIZE_DESPATCH
		IF (%STATUS <> %SUCCESS) 
			EXIT (%FAILURE)		
		END_IF 

		PERFORM SHIPPING_DESPATCH_ENTRY

	END_BLOCK

END_FORM


FORM SHIPPING_DESPATCH_ENTRY /ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
	/BASE &
	/TITLE=(MESSAGE("P_50064"))

	BEGIN_BLOCK SELECT
		PERFORM INIT_SOP_DESPATCH_NOTES_VT
		PERFORM DELETE_ALL_RS_SHIP_CONFIRM_TM
		DELETE ALL FROM RS_SYS_MESSAGES
		
		START_TRANSACTION

		PERFORM SHIPPING_DESPATCH_UI
		IF (%STATUS <> %SUCCESS)
			ROLLBACK
			EXIT
		ELSE
			COMMIT
		END_IF

	END_BLOCK

	BEGIN_BLOCK PROCESS_DESPATCH
		! Load the VT for passing to the Ship Confirm Library routine
		#COUNT = 0
		#WMS_WAREHOUSE_FOUND = #NO
		#DC_WAREHOUSE_FOUND = #NO
		PERFORM LOAD_RS_SHIP_CONFIRM_TM
		IF (%STATUS <> %NORMAL OR #COUNT = 0)
			IF (#WMS_WAREHOUSE_FOUND = #YES)
				! This function cannot confirm shipments from a WMS warehouse
				MESSAGE/IDENTIFIER/BELL/WAIT P_22683
			END_IF
			IF (#DC_WAREHOUSE_FOUND = #YES)
      	! This function cannot amend shipments from a DC warehouse
      	MESSAGE/IDENTIFIER/BELL/WAIT P_23028
    	END_IF
			MESSAGE/IDENTIFIER/BELL/WAIT FA_00342
			GOTO SELECT
		END_IF

		! Call Ship Confirm routine to load despatch notes vt
		PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" PRE_UPDATE_LOAD_TM

		IF (%STATUS <> %SUCCESS)
			! vt load failed, and Despatch and Shipping Run
			! status updates should have rolled back
			PERFORM "GEMLB:LB_L_DISPLAY_MESSAGES" ("", "Y")
			GOTO SELECT
		END_IF

		PERFORM DISPLAY_SHIPPING_TOP
		PERFORM DISPLAY_DESPATCH_LINES
		IF (%STATUS <> %SUCCESS)
			! Call Ship Confirm routine to reset status flags and Run Controls
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT (#COMPANY_CODE)
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_SHIPPING_RUN_CONTROLS &
						(#COMPANY_CODE, &
						#DIVISION, &
						#SOP_SHIPPING_RUN_NUMBER, &
						#ACCESSIBLE_WAREHOUSES)
			GOTO SELECT
		END_IF

		! Call Ship Confirm routine for shipment validation
		PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" &
				(#RUN_TYPE_TM, &
				#CALL_MODE_I, &
				#SHIP_VALIDATE, &
				"", &
				"", &
				"", &
				#R_EXCEEDED, &
				#R_PICK_EXCEEDED, &
				#R_UNDERSHIPED, &
				#R_ERROR_PART, &
				#R_ERROR_PACK_DESP_QTY, &
				#R_ERROR_QOH_SOL, &
				#R_ERROR_UNIT, &
				#R_ERROR_LOT, &
				#R_ERROR_LOT_SEQ, &
				#R_ERROR_BIN, &
				#R_ERROR_MH, &
				#R_ERROR_MASK, &
				#R_ERROR_UNDERSHIP_MSG, &
				#R_XFER_USER_INTERACTION)

		IF (%STATUS <> %SUCCESS)
			IF (#R_EXCEEDED)
				PERFORM QTY_EXCEEDED
			ELSE_IF (#R_PICK_EXCEEDED)
				PERFORM PICKED_QTY_EXCEEDED
			ELSE_IF (#R_UNDERSHIPED)
				PERFORM PICKED_QTY_UNDERSHIP
			ELSE
				PERFORM "GEMLB:LB_L_DISPLAY_MESSAGES" ("", "Y")
			END_IF

			GOTO SELECT
		END_IF

		#OPT = ""
		PERFORM CONFIRM_MENU
		IF (%STATUS <> %SUCCESS)
			! Call Ship Confirm routine to reset status flags and Run Controls
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_HEADER_STATUS_BY_VT (#COMPANY_CODE)
			PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_SHIPPING_RUN_CONTROLS &
						(#COMPANY_CODE, &
						#DIVISION, &
						#SOP_SHIPPING_RUN_NUMBER, &
						#ACCESSIBLE_WAREHOUSES)
			GOTO SELECT
		END_IF

	END_BLOCK

	BEGIN_BLOCK DESPATCH
		COMMIT
		IF (#OPT="BATCH") GOTO BATCH_PROCESS

		! Call Ship Confirm routine to update shipments
		PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" &
				(#RUN_TYPE_TM, &
				#CALL_MODE_I, &
				#SHIP_UPDATE)

		PERFORM "GEMLB:LB_L_DISPLAY_MESSAGES"

		PERFORM DELETE_ALL_RS_SHIP_CONFIRM_TM
		GOTO SELECT
	END_BLOCK

	BEGIN_BLOCK BATCH_PROCESS
		PERFORM/BATCH 'GEMSYS:SYS_COMPANY_SETUP' BATCH_ENTRY ( &
			#COMPANY_CODE, &
			'GEMSOP:SOP_S_L_SHIP_CONFIRM', &
			'SHIPPING_BATCH_SETUP', &
			#DIVISION,&
			#ID, &
			#SOP_SHIPPING_RUN_NUMBER, &
			#SOP_LOAD_ID, &
			#SHIP_NOTES)
	END_BLOCK

END_FORM


PROCEDURE_FORM LOAD_RS_SHIP_CONFIRM_TM &
	/TABLE=DESPATCH_NOTES &
	/LOCK=NONE &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=DIVISION=#DIVISION &
	/WITH=CONFIRM_DESPATCH<>#YES &
	/WITH=SOP_SHIPPING_RUN_NUMBER=#SOP_SHIPPING_RUN_NUMBER &
	/WITH=SOP_LOAD_ID AMONG #SOP_LOAD_ID &
	/WITH=TM_LOAD_PLANNING=#YES &
	/WITH=PRINT_FLAG=#YES &
	/SORTED_BY=(SOP_SHIPPING_RUN_NUMBER, SOP_LOAD_ID) &
	/GROUPED_BY=(SOP_SHIPPING_RUN_NUMBER, SOP_LOAD_ID)

	BEGIN_BLOCK CHECK_WAREHOUSE 
	
	    IF (DESPATCH_NOTES(WAREHOUSE) <> "")
			FIND IN WAREHOUSE_CONTROLS &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=WAREHOUSE=DESPATCH_NOTES(WAREHOUSE)

			IF (%STATUS <> %SUCCESS) 
				GOTO NEXT
			ELSE
				IF (WAREHOUSE_CONTROLS(WMS_IN_USE) = #YES) 
					#WMS_WAREHOUSE_FOUND = #YES
					GOTO NEXT
				END_IF 
				IF (WAREHOUSE_CONTROLS(DATA_CAPTURE_IN_USE) = #YES) 
					#DC_WAREHOUSE_FOUND = #YES
					GOTO NEXT
				END_IF 
			END_IF 
		END_IF

	END_BLOCK 

	BEGIN_BLOCK UPDATE_RS_SHIP_CONFIRM_TM

		CLEAR_BUFFER RS_SHIP_CONFIRM_TM

		RS_SHIP_CONFIRM_TM(COMPANY_CODE) = #COMPANY_CODE
		RS_SHIP_CONFIRM_TM(DIVISION)     = #DIVISION
		RS_SHIP_CONFIRM_TM(SOP_SHIPPING_RUN_NUMBER) = #SOP_SHIPPING_RUN_NUMBER
		RS_SHIP_CONFIRM_TM(SOP_LOAD_ID)  = DESPATCH_NOTES(SOP_LOAD_ID)

		ADD TO RS_SHIP_CONFIRM_TM

		IF (%STATUS <> %SUCCESS)
			EXIT (%FAILURE)
		END_IF

		#COUNT = #COUNT + 1

	END_BLOCK

	BEGIN_BLOCK NEXT 
	END_BLOCK 

END_FORM


FORM SALES_DESPATCH_UI /ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
	/TITLE=(MESSAGE("P_50064"))

	BEGIN_BLOCK DIV
		DISPLAY CLEAN

		INPUT_BLOCK  /ROW=2 /COL=35 &
			/PROMPT=(FIELD_PROMPT(DIVISION)) &
			/TARGET=#DIVISION &
			/USING=DESPATCH_HEADERS(DIVISION) &
			/LOV=SECURITY_PERIOD_ACCESS_VT(SYS_ACCESS_CODE,CODE_DESCRIPTION) &
			/LOV_WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/LOV_WITH=SOURCE_MODULE=(PARAMETER("MODULE_SO")) &
			/LOV_WITH=SYS_ALLOW_ACCESS=#YES

		FIND IN AR_CONTROLS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION

		IF (AR_CONTROLS(SOP_ACTIVE) <> #YES)
			MESSAGE/IDENTIFIER/BELL/WAIT P_22297
			GOTO DIV
		END_IF

		#DIV_NAME = AR_CONTROLS(DIVISION_NAME)
		#IS_CARR_INFO_REQ = AR_CONTROLS(REQUIRE_SHIP_INFO_FLAG)		
		#SHOW_SHIP_NOTES=#YES		
		
		DISPLAY CLEAN
		
		OUTPUT_BLOCK  /ROW=2 /COL=35 &
			/PROMPT=(FIELD_PROMPT(DIVISION)) &
			/SOURCE=#DIVISION
		
		IF ( #IS_CARR_INFO_REQ = #YES )
			FIND IN SOP_TRANSACTION_TYPES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=DIVISION=#DIVISION &
				/WITH=TRANSACTION_TYPE=(PARAMETER("TTYPE_LN"))
				
			IF ( %STATUS <> %SUCCESS ) 
				MESSAGE/IDENTIFIER/BELL P_00878,PARAMETER("TTYPE_LN")
				GOTO DIV
			END_IF  
		END_IF		
		
		IF ((#IS_CARR_INFO_REQ=#NO) AND (#P0P_MSG=#YES))		
			#P = "P_37284"
			MESSAGE /IDENTIFIER/WAIT #P			
		END_IF
		
		IF (#IS_CARR_INFO_REQ=#YES)
			#P0P_MSG=#YES
		END_IF
		
		PERFORM "GEMLB:LB_CHECK_SECURITY_PERIOD_ACCESS" ( &
			#COMPANY_CODE, &
			#ACCESS_TYPE_DIVISION, &
			#SOURCE_MODULE_SOP, &
			#DIVISION, &
			#CURRENT_PERIOD, &
			#CURRENT_YEAR, &
			#POSTING_PERIOD, &
			#POSTING_YEAR, &
			#YES, &
			#R_STATUS, &
			#R_MESSAGE_NUMBER, &
			#R_MESSAGE_TEXT)

		IF (%STATUS = %FAILURE OR #R_STATUS <> 0)
			ERROR (#R_MESSAGE_TEXT)
			EXIT (%FAILURE)
		END_IF


	END_BLOCK

	OUTPUT_BLOCK DIV_NAME /ROW=2 /COL=39 &
			/SOURCE=(AR_CONTROLS(DIVISION_NAME))
	
	BEGIN_BLOCK INIT
		#SHIP_NOTES = ""
		#SHIPMENT_NUM=""
		IF (#IS_CARR_INFO_REQ <> #YES)
			GOTO DESPATCH_NOTE
		END_IF
	END_BLOCK
	
	INPUT_BLOCK SHIPMENT_NUMBER /ROW=4 /COL=35 &
		/PROMPT=FIELD_PROMPT(SHIPMENT_HEADERS,SHIPMENT_NUMBER) &
		/TARGET=#SHIPMENT_NUM &
		/USING=SHIPMENT_HEADERS(SHIPMENT_NUMBER) &
		/LOV=SHIPMENT_HEADERS(SHIPMENT_NUMBER,SOP_SHIP_DATE) &
		/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
		/LOV_WITH=DIVISION=#DIVISION &
		/LOV_WITH=SHIPMENT_HEADERS(STATUS_FLAG)<> #SHIPMENT_CONFIRM_ALL &
		/LOV_SORTED_BY=SHIPMENT_NUMBER &
		/USE_IF=((#IS_CARR_INFO_REQ=#YES) AND (#SHOW_SHIP_NOTES=#YES))
		
	BEGIN_BLOCK VALIDATE_SHIPMENT
		IF (#SHIPMENT_NUM="")
			GOTO DESPATCH_NOTE
		END_IF
		
		FIND IN SHIPMENT_HEADERS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=SHIPMENT_NUMBER=#SHIPMENT_NUM
		
		IF (%STATUS <> %SUCCESS)
			#P="P_37285"
			MESSAGE /IDENTIFIER/WAIT #P
			GOTO SHIPMENT_NUMBER
		ELSE_IF (SHIPMENT_HEADERS(STATUS_FLAG)=#SHIPMENT_CONFIRM_ALL)
			#P="P_37283"
			MESSAGE /IDENTIFIER/WAIT #P
			GOTO SHIPMENT_NUMBER
		END_IF
		
		#FIRST_TIME=#YES
		#SHIP_NOTES=""
		#PREV_SHIP_NOTE=""
		#TO_SHIP_NOTE=""
		
		PERFORM GET_SHIP_NOTES
		IF (#TO_SHIP_NOTE<>"")
			#SHIP_NOTES = (#SHIP_NOTES & '-' & #PREV_SHIP_NOTE)
		END_IF
		
		IF (#SHIP_NOTES<>"")
			GOTO VALIDATE_DESPATCH
		ELSE
			#P="P_37294"
			MESSAGE /IDENTIFIER/WAIT #P
			GOTO SHIPMENT_NUMBER
		END_IF
	END_BLOCK
	
	INPUT_BLOCK DESPATCH_NOTE /ROW=6 /COL=35 &
			/PROMPT=(FIELD_PROMPT(DESPATCH_NOTE)) &
			/TARGET=#SHIP_NOTES &
			/TITLE=(FIELD_PROMPT(DESPATCH_NOTE)) &
			/USING=DESPATCH_NOTES(DESPATCH_NOTE),REQUIRED,MULTIPLE &
			/LOV=DESPATCH_NOTES(DESPATCH_NOTE,REQUIRED_DATE,ORDER_NUMBER) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=DIVISION=#DIVISION &
			/LOV_WITH=PRINT_FLAG=#YES &
			/LOV_WITH=CONFIRM_DESPATCH=#NO &
			/LOV_WITH=WAREHOUSE AMONG #ACCESSIBLE_WAREHOUSES &
			/LOV_WITH=WAREHOUSED_FLAG = #NO &
			/LOV_WITH=TM_LOAD_NUMBER = ""	&
			/LOV_SELECTION="A AND B AND C AND D AND (E OR F) AND G" &
			/LOV_SORTED_BY=(DESPATCH_NOTE) &
			/LOV_REDUCED_TO=(DESPATCH_NOTE,ORDER_NUMBER) &
			/USE_IF=(#SHOW_SHIP_NOTES=#YES)

	BEGIN_BLOCK VALIDATE_DESPATCH
		
		FIND IN DESPATCH_NOTES	&
			/LOCK=NONE	&
			/WITH=COMPANY_CODE = #COMPANY_CODE	&
			/WITH=DIVISION = #DIVISION	&
			/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES	&
			/WITH=CONFIRM_DESPATCH<>#YES	&
			/WITH=PRINT_FLAG=#YES	&
			/WITH=TM_LOAD_NUMBER=""
		IF (%STATUS <> %SUCCESS)
			MESSAGE /IDENTIFIER/WAIT P_71557
			IF (#SHIPMENT_NUM="")
				GOTO DESPATCH_NOTE
			ELSE
				GOTO SHIPMENT_NUMBER
			END_IF
		END_IF

		FIND IN DESPATCH_HEADERS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES &
			/WITH=AMEND_ACTIVE_FLAG = #SYS_YES

		IF (%STATUS = %SUCCESS)
			MESSAGE /IDENTIFIER/WAIT P_12777,DESPATCH_HEADERS(DESPATCH_NOTE)
			IF (#SHIPMENT_NUM="")
				GOTO DESPATCH_NOTE
			ELSE
				GOTO SHIPMENT_NUMBER
			END_IF
		END_IF
		
		IF (( #IS_CARR_INFO_REQ = #YES ) AND (#SHIP_NOTES <> ""))
			PERFORM CHECK_SHIP_NOTES_SHIPMENT_NUMBER (#SAME_SHIPMENT_NUMBER_FLAG)
		
			IF ( #SAME_SHIPMENT_NUMBER_FLAG = #NO ) 
				MESSAGE/IDENTIFIER/BELL P_37281
				IF (#SHIPMENT_NUM="")
					GOTO DESPATCH_NOTE
				ELSE
					GOTO SHIPMENT_NUMBER
				END_IF
			END_IF 
		END_IF

		
		!Change 002
		FIND IN DESPATCH_HEADERS &
			/WITH=DESPATCH_NOTE=#SHIP_NOTES

		DISPLAY DEFAULTS
		!Change 002 End


	END_BLOCK

!Change 001, Change 002, Change 003
!	BEGIN_BLOCK MOVEMENT_DATE
!
!		IF (#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
!
!			INPUT_BLOCK DESPATCH_DATE /ROW=8 /COL=35 &
!				/PROMPT=(FIELD_PROMPT(DESPATCH_DATE)) &
!				/SOURCE=DESPATCH_NOTES(REQUIRED_DATE) &
!				/TARGET=#DESPATCH_DATE &
!				/USING=DESPATCH_NOTES(DESPATCH_DATE) &
!				/USE_IF=(#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
!
!			#R_ERROR_FLAG           = ""
!			#R_ERROR_MESSAGE        = ""
!			#R_YEAR                 = ""
!			#R_PERIOD               = ""
!			#R_MOVEMENT_DATE        = ""
!
!			!Set the date you want to check.
!			#MOVEMENT_DATE          = #DESPATCH_DATE
!
!			PERFORM "GEMLB:LB_L_CHECK_MOVEMENT_DATE"( &
!							#COMPANY_CODE, &
!							#DIVISION, &
!							#MOVEMENT_DATE, &
!							#R_ERROR_MESSAGE, &
!							#R_ERROR_FLAG, &
!							#R_YEAR, &
!							#R_PERIOD, &
!							#R_MOVEMENT_DATE)
!
!			IF (#R_ERROR_FLAG = "")
!				#MV_YEAR 	= #R_YEAR
!				#MV_PERIOD	= #R_PERIOD
!				#DESPATCH_DATE  = #R_MOVEMENT_DATE
!
!				IF (#R_ERROR_MESSAGE <> "")
!					MESSAGE/IDENTIFIER/BELL/WAIT #R_ERROR_MESSAGE
!				END_IF
!			ELSE
!				MESSAGE/IDENTIFIER/BELL/WAIT #R_ERROR_MESSAGE
!				!Back to date input block.		
!				GOTO DESPATCH_DATE
!			END_IF
!
!			!Display returned date
!			OUTPUT_BLOCK DISPLAY_DESPATCH_DATE /ROW=8 /COL=35 &
!				/SOURCE=#DESPATCH_DATE &
!				/USING=DESPATCH_NOTES(DESPATCH_DATE) &
!				/USE_IF=(#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
!
!			YESNO_BLOCK CONFIRM_DESPATCH_DATE /ROW=18 /COL=35 &
!				/PROMPT=MESSAGE("P_00142") &
!				/FAILURE=(GOTO DESPATCH_DATE) &
!				/USE_IF=(#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
!		END_IF
!
!	END_BLOCK 


!Change 001, Change 002, Change 003
	DISPLAY DEFAULTS

                INPUT_BLOCK DESPATCH_DATE /ROW=8 /COL=35 &
                                /PROMPT=(FIELD_PROMPT(DESPATCH_DATE)) &
                                !/SOURCE=DESPATCH_NOTES(REQUIRED_DATE) &
				/SOURCE=%TODAY &
                                /TARGET=#DESPATCH_DATE &
                                /USING=DESPATCH_NOTES(DESPATCH_DATE) &
                                !/USE_IF=(#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)


                !Set the date you want to check.
                #MOVEMENT_DATE          = #DESPATCH_DATE



                !Display returned date
                OUTPUT_BLOCK DISPLAY_DESPATCH_DATE /ROW=8 /COL=35 &
                                /SOURCE=#DESPATCH_DATE &
                                /USING=DESPATCH_NOTES(DESPATCH_DATE) &
                !                /USE_IF=(#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
		!Change 001 End

		!Change 002 - Add PRO number to despatch confirmation
		INPUT_BLOCK PRO_NUMBER /ROW=10 /COL=35 &
			/TARGET=#PRO_NUMBER &
			/SOURCE=DESPATCH_HEADERS(VOL_SHIPMENT_PRO_NUMBER) & 
			/PROMPT=FIELD_PROMPT(VOL_SHIPMENT_PRO_NUMBER) &
			/USING=DESPATCH_HEADERS(VOL_SHIPMENT_PRO_NUMBER)
		!Change 002 End
				
		BEGIN_BLOCK REQUIRED_PRO
			IF (#PRO_NUMBER="")
				ERROR /TEXT_ONLY "Please enter a PRO Number."
				GOTO PRO_NUMBER
			END_IF
		END_BLOCK

		!Change 003 - Freight mode
		INPUT_BLOCK FREIGHT_MODE /ROW=12 /COL=35 &
			/TARGET=#FREIGHT_MODE &
			/SOURCE=DESPATCH_HEADERS(SYS_FREIGHT_MODE) &
			/PROMPT=FIELD_PROMPT(SYS_FREIGHT_MODE) &
			/USING=DESPATCH_HEADERS(SYS_FREIGHT_MODE) &
			/LOV=SYS_FREIGHT_MODES(SYS_FREIGHT_MODE,DESCRIPTION)

		BEGIN_BLOCK REQUIRED_FREIGHT 
			IF (#FREIGHT_MODE="") 
				ERROR /TEXT_ONLY "Please choose a valid freight mode."		
				GOTO FREIGHT_MODE
			END_IF
		END_BLOCK
		!Change 003 End
		!Change 001
			
			
                YESNO_BLOCK CONFIRM_DESPATCH_DATE /ROW=18 /COL=35 &
                                /PROMPT=MESSAGE("P_00142") &
                                /FAILURE=(GOTO DESPATCH_DATE) 
                !                /USE_IF=(#LEGAL_POSTING_CODE = #JAPAN_LEGAL_POSTING)
		!Change 001 End

		!Change 002 / Change 003
		START_TRANSACTION
		START_STREAM PROUPDATE /TABLE=DESPATCH_HEADERS &
				/LOCK=WRITE &
				/SECONDARY &
				/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES
		
		FETCH PROUPDATE
		WHILE (%STATUS=%SUCCESS)
			PROUPDATE:DESPATCH_HEADERS(VOL_SHIPMENT_PRO_NUMBER)=#PRO_NUMBER
			PROUPDATE:DESPATCH_HEADERS(SYS_FREIGHT_MODE)=#FREIGHT_MODE
			FETCH PROUPDATE
		END_WHILE
		COMMIT
		!Change 002 / Change 003 End
        END_BLOCK

END_FORM


FORM SHIPPING_DESPATCH_UI/ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
	/TITLE=(MESSAGE("P_50064"))

	BEGIN_BLOCK DIV
		INPUT_BLOCK  /ROW=2 /COL=35 &
			/PROMPT=(FIELD_PROMPT(DIVISION)) &
			/TARGET=#DIVISION &
			/USING=DESPATCH_HEADERS(DIVISION) &
			/LOV=SECURITY_PERIOD_ACCESS_VT(SYS_ACCESS_CODE,CODE_DESCRIPTION) &
			/LOV_WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/LOV_WITH=SOURCE_MODULE=(PARAMETER("MODULE_SO")) &
			/LOV_WITH=SYS_ALLOW_ACCESS=#YES

		FIND IN AR_CONTROLS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION

		IF (AR_CONTROLS(SOP_ACTIVE) <> #YES)
			MESSAGE/IDENTIFIER/BELL/WAIT P_22297
			GOTO DIV
		END_IF 

		#DIV_NAME         = AR_CONTROLS(DIVISION_NAME)
		#IS_CARR_INFO_REQ = AR_CONTROLS(REQUIRE_SHIP_INFO_FLAG)

		PERFORM "GEMLB:LB_CHECK_SECURITY_PERIOD_ACCESS" ( &
			#COMPANY_CODE, &
			#ACCESS_TYPE_DIVISION, &
			#SOURCE_MODULE_SOP, &
			#DIVISION, &
			#CURRENT_PERIOD, &
			#CURRENT_YEAR, &
			#POSTING_PERIOD, &
			#POSTING_YEAR, &
			#YES, &
			#R_STATUS, &
			#R_MESSAGE_NUMBER, &
			#R_MESSAGE_TEXT)

		IF (%STATUS = %FAILURE OR #R_STATUS <> 0)
			ERROR (#R_MESSAGE_TEXT)
			GOTO DIV
		END_IF


	END_BLOCK

	OUTPUT_BLOCK DIV_NAME /ROW=2 /COL=39 &
			/SOURCE=(AR_CONTROLS(DIVISION_NAME))

	BEGIN_BLOCK SHIPPING_RUN_NUMBER

		INPUT_BLOCK /ROW=4 /COL=35 &
			/PROMPT=(FIELD_PROMPT(SOP_SHIPPING_RUN_NUMBER)) &
			/TARGET=#SOP_SHIPPING_RUN_NUMBER	&
			/USING=DESPATCH_NOTES(SOP_SHIPPING_RUN_NUMBER), REQUIRED &
			/LOV=DESPATCH_NOTES(SOP_SHIPPING_RUN_NUMBER,DESPATCH_NUMBER,REQUIRED_DATE,ORDER_NUMBER) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=DIVISION=#DIVISION &
			/LOV_WITH=PRINT_FLAG=#YES &
			/LOV_WITH=CONFIRM_DESPATCH=#NO &
			/LOV_WITH=TM_LOAD_PLANNING = #YES	&
			/LOV_WITH=WAREHOUSE AMONG #ACCESSIBLE_WAREHOUSES &
			/LOV_SELECTION="A AND B AND C AND D AND (E OR F)" &
			/LOV_SORTED_BY=(SOP_SHIPPING_RUN_NUMBER, DESPATCH_NOTE) &
			/LOV_REDUCED_TO=(SOP_SHIPPING_RUN_NUMBER)

		FIND IN SOP_SHIPPING_RUN_CONTROL &
			/LOCK=NONE &
			/WITH=COMPANY_CODE = #COMPANY_CODE	&
			/WITH=DIVISION = #DIVISION	&
			/WITH=SOP_SHIPPING_RUN_NUMBER = #SOP_SHIPPING_RUN_NUMBER	&
			/WITH=WAREHOUSE AMONG #ACCESSIBLE_WAREHOUSES
		IF (%STATUS <> %SUCCESS)
			MESSAGE /IDENTIFIER/WAIT P_96046
			GOTO SHIPPING_RUN_NUMBER
		END_IF
		!If the controls record is flagged as being currently processed,
		!then inform the user of by whom and when.

		IF (SOP_SHIPPING_RUN_CONTROL(IN_PROGRESS_STATUS) <> '')
		      	PERFORM ALREADY_IN_UPDATE
			IF (%STATUS = %BACK)
				GOTO SHIPPING_RUN_NUMBER
			ELSE
				PERFORM "GEMSOP:SOP_S_L_SHIP_CONFIRM" RESET_SHIPPING_RUN_CONTROLS &
							(#COMPANY_CODE, &
							#DIVISION, &
							#SOP_SHIPPING_RUN_NUMBER, &
							#ACCESSIBLE_WAREHOUSES)
			END_IF
		END_IF
	END_BLOCK

	BEGIN_BLOCK LOAD_SEQUENCE
		INPUT_BLOCK /ROW=6 /COL=35 &
			/PROMPT=(FIELD_PROMPT(SOP_LOAD_ID)) &
			/TARGET=#SOP_LOAD_ID	&
			/USING=TM_SHIPMENT_LOAD(SOP_LOAD_ID),MULTIPLE &
			/LOV=DESPATCH_NOTES(SOP_LOAD_ID,TM_LOAD_NUMBER,DESPATCH_NOTE)	&
			/LOV_WITH=COMPANY_CODE = #COMPANY_CODE	&
			/LOV_WITH=DIVISION = #DIVISION	&
			/LOV_WITH=SOP_SHIPPING_RUN_NUMBER = #SOP_SHIPPING_RUN_NUMBER	&
			/LOV_REDUCED_TO=(SOP_LOAD_ID)	&
			/LOV_SORTED_BY=(SOP_LOAD_ID,TM_LOAD_NUMBER,DESPATCH_NOTE)

		START_STREAM DESP_CNT &
 			/TABLE=DESPATCH_NOTES &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=SOP_SHIPPING_RUN_NUMBER=#SOP_SHIPPING_RUN_NUMBER	&
			/WITH=CONFIRM_DESPATCH<>#YES &
			/WITH=PRINT_FLAG = #YES	&
			/WITH=SOP_LOAD_ID AMONG #SOP_LOAD_ID &
			/REDUCED_TO=(DESPATCH_NOTE)

		WHILE (1)
			FETCH DESP_CNT /FAILURE=(CONTINUE OUT)
			IF (#LOAD_SHIP_NOTES = "")
				#LOAD_SHIP_NOTES = DESP_CNT:DESPATCH_NOTES(DESPATCH_NOTE)
			ELSE
				#LOAD_SHIP_NOTES = #LOAD_SHIP_NOTES & "," & DESP_CNT:DESPATCH_NOTES(DESPATCH_NOTE)
			END_IF
		END_WHILE

		IF (#LOAD_SHIP_NOTES = "")
			MESSAGE /IDENTIFIER/WAIT P_96069
			GOTO LOAD_SEQUENCE
		END_IF

		FIND IN DESPATCH_HEADERS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=DESPATCH_NOTE AMONG #LOAD_SHIP_NOTES &
			/WITH=AMEND_ACTIVE_FLAG = #SYS_YES

		IF (%STATUS = %SUCCESS)
			MESSAGE /IDENTIFIER/WAIT P_12777,DESPATCH_HEADERS(DESPATCH_NOTE)
			GOTO LOAD_SEQUENCE
		END_IF
	END_BLOCK

END_FORM

PROCEDURE_FORM INITIALIZE_DESPATCH

	BEGIN_BLOCK SETUP
		#ID		      	= PARAMETER("FACILITY_ID")
		#RUN_TYPE_TM		= PARAMETER("MODULE_TM")
		#RUN_TYPE_SOP		= PARAMETER("MODULE_SOP")
		#CALL_MODE_I		= PARAMETER("CALL_MODE_I")
		#COMPANY_CODE		= PARAMETER("USER_COMPANY_CODE")
		#NO		      	= PARAMETER("LANGUAGE_NO")
		#YES		      	= PARAMETER("LANGUAGE_YES")
		#SYS_YES		= PARAMETER("SYS_YES")
		#SOURCE_MODULE_SOP	= PARAMETER("MODULE_SOP")
		#TTYPE_DR		= PARAMETER("TTYPE_DR")
		#ACCESS_TYPE_DIVISION	= PARAMETER("ACCESS_TYPE_DIVISION")
		!These variables are for legal posting
		#JAPAN_LEGAL_POSTING 	= PARAMETER("JAPAN_LEGAL_POSTING")
		#SHIP_VALIDATE		= PARAMETER("SOP_SHIP_VALIDATION")
		#SHIP_UPDATE		= PARAMETER("SOP_SHIP_UPDATE")

	END_BLOCK

	BEGIN_BLOCK VALIDATE_SECURITY_AND_ACCESS
			! Security. Get a string of all accessible Warehouses.
			!
		PERFORM "GEMLB:LB_SECURITY_CODE_ACCESS" &
			((PARAMETER("MODULE_SO")), &
			 PARAMETER("ACCESS_TYPE_WAREHOUSE"), &
			 #ACCESSIBLE_WAREHOUSES)

		IF (%STATUS=%FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_10638
			EXIT (%FAILURE)
		END_IF

		IF (#ACCESSIBLE_WAREHOUSES = "##NONE##")
			MESSAGE/IDENTIFIER/BELL/WAIT P_10639,PARAMETER("MODULE_SO")
			EXIT (%FAILURE)
		END_IF

	     	PERFORM "GEMLB:LB_CHECK_SET_COMPANY_ACCESS" (&
			#COMPANY_CODE, &
			#R_STATUS, &
			#R_MESSAGE_NUMBER, &
			#R_MESSAGE_TEXT)

		IF (%STATUS = %FAILURE OR #R_STATUS = 1)
			ERROR (#R_MESSAGE_TEXT)
			EXIT (%FAILURE)
		END_IF

		PERFORM "GEMLB:LB_CHECK_SECURITY_TRAN_TYPE" ( &
			#COMPANY_CODE, &
			#SOURCE_MODULE_SOP, &
			#TTYPE_DR, &
			#R_STATUS, &
			#R_MESSAGE_NUMBER, &
			#R_MESSAGE_TEXT, &
			#MAX_TRANSACTION_VALUE)

		IF (%STATUS = %FAILURE)
			ERROR (#R_MESSAGE_TEXT)
			EXIT (%FAILURE)
		END_IF
		!Getting the legal posting option
		#LEGAL_POSTING_CODE = PARAMETER("LEGAL_POSTING_OPTION")
	END_BLOCK

	BEGIN_BLOCK CHECK_FOR_ESIG
		PERFORM "GEMLB:LB_L_SIGNATURE" ESIG_IN_USE_FOR_FACILITY ("",#R1)
		#ESIG_IN_USE = #R1
	END_BLOCK

	BEGIN_BLOCK CREATE_VT
	
		PERFORM CREATE_SHIPMENT_CARRIER_SHIPPING_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM INIT_SOP_DESPATCH_NOTES_VT &
	/TABLE=SOP_DESPATCH_NOTES_VT	&

	BEGIN_BLOCK DELETE
		DELETE FROM SOP_DESPATCH_NOTES_VT
	END_BLOCK
END_FORM


PROCEDURE_FORM DEFINE_VT

	BEGIN_BLOCK CREATE_SHIPMENT_DETAILS_VT

		IF ( TABLE_CHECK("SHIPMENT_DETAILS_VT","") = %SUCCESS )
			DELETE TABLE SHIPMENT_DETAILS_VT
		END_IF

		ADD TABLE SHIPMENT_DETAILS_VT &
			/VIRTUAL &
			/DESCRIPTION="Shipment Details for Load Assignment"&
			/ADD_FIELD=COMPANY_CODE &
			/ADD_FIELD=DIVISION &
			/ADD_FIELD=ORDER_NUMBER &
			/ADD_FIELD=ORDER_LINE_NUMBER &
			/ADD_FIELD=SEQUENCE &
			/ADD_FIELD=SOP_SHIPPING_RUN_NUMBER &
			/ADD_FIELD=SOP_SHIPPING_LIST_LINE &
			/ADD_FIELD = SOP_LOAD_ID &
			/ADD_FIELD=AP_DIVISION &
			/ADD_FIELD=TM_LOAD_NUMBER &
			/ADD_FIELD = SHIPPING_REQUIREMENT_NUMBER &
			/ADD_FIELD = SHIPPING_LEG	&
			/ADD_FIELD = WAREHOUSE &
			/ADD_FIELD=PART_CODE &
			/ADD_FIELD = SALES_QTY_TO_SHIP	&
			/ADD_FIELD = PACK_QTY_TO_SHIP	&
			/ADD_FIELD = NOMINATED_QTY_TO_SHIP	&
			/ADD_FIELD = OTHER_QTY_TO_SHIP	&
			/ADD_FIELD=SOP_LOAD_WEIGHT based_on WEIGHT &
			/ADD_FIELD=SOP_PRODUCT_WEIGHT based_on WEIGHT &
			/ADD_FIELD=WEIGHT_UOM &
			/ADD_FIELD=SOP_LOAD_SIZE based_on CUBIC_SIZE &
			/ADD_FIELD=CUBIC_SIZE_UOM &
			/ADD_FIELD = CUSTOMER_NUMBER &
			/ADD_FIELD = MP_SHIPPING_CUSTOMER	&
			/ADD_FIELD = SALES_QTY_PROCESSED	&
			/ADD_FIELD = PACK_QTY_PROCESSED	&
			/ADD_FIELD = NOMINATED_QTY_PROCESSED	&
			/ADD_FIELD = OTHER_QTY_PROCESSED	&
			/ADD_FIELD=PREASSIGNED_FLAG based_on FLAG &
			/ADD_FIELD=TM_SERVICE_ID	&
			/ADD_FIELD = UNIT_SALES	&
			/ADD_FIELD = IC_PACK_UNIT	&
			/ADD_FIELD = SOP_NOMINATED_UNIT	&
			/ADD_FIELD = IC_OTHER_INVENTORY_UNIT	&
			/ADD_FIELD = SHIPMENT_SPLIT_SEQUENCE BASED_ON SEQUENCE
	END_BLOCK
END_FORM


PROCEDURE_FORM DELETE_ALL_RS_SHIP_CONFIRM &
	/TABLE=RS_SHIP_CONFIRM

	BEGIN_BLOCK DELETE_NOW
		DELETE FROM RS_SHIP_CONFIRM
	END_BLOCK

END_FORM

PROCEDURE_FORM DELETE_ALL_RS_SHIP_CONFIRM_TM &
	/TABLE=RS_SHIP_CONFIRM_TM

	BEGIN_BLOCK DELETE_NOW
		DELETE FROM RS_SHIP_CONFIRM_TM
	END_BLOCK

END_FORM

PROCEDURE_FORM DISPLAY_SYS_MESSAGE	&
	/TABLE = SYS_MESSAGES	&
	/LOCK=NONE

	BEGIN_BLOCK DISPLAY
		ERROR/WAIT SYS_MESSAGES(TEXT_MESSAGE)
	END_BLOCK
END_FORM

PROCEDURE_FORM SELECT_DESPATCH_NOTE

	BEGIN_BLOCK DESPATCH_NOTE
		#SELECT_DESPATCH_NOTE = ''

		START_STREAM NOTES &
			/TABLE=DESPATCH_HEADERS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=SOP_SHIPPING_RUN_NUMBER = #SOP_SHIPPING_RUN_NUMBER &
			/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES


		#FIRST_TIME = #YES
		WHILE (1)
			FETCH NOTES /FAILURE=(CONTINUE OUT)

			FIND IN DESPATCH_NOTES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=DIVISION=#DIVISION &
				/WITH=DESPATCH_NOTE=DESPATCH_HEADERS(DESPATCH_NOTE) &
				/WITH=SOP_SHIPPING_RUN_NUMBER = #SOP_SHIPPING_RUN_NUMBER	&
				/WITH=SOP_LOAD_ID AMONG #SOP_LOAD_ID	&
				/WITH=TM_LOAD_PLANNING = #YES	&
				/WITH=CONFIRM_DESPATCH <> #YES	&
				/WITH=PRINT_FLAG = #YES

			IF (%STATUS = %SUCCESS)
				IF (#FIRST_TIME = #YES)
					#SELECT_DESPATCH_NOTE = (#SELECT_DESPATCH_NOTE & DESPATCH_NOTES(DESPATCH_NOTE))
					#DISPLAY_SOP_LOAD_ID	= DESPATCH_NOTES(SOP_LOAD_ID)
					#FIRST_TIME = #NO
				ELSE
					#SELECT_DESPATCH_NOTE = (#SELECT_DESPATCH_NOTE & ',' & DESPATCH_NOTES(DESPATCH_NOTE))
					#DISPLAY_SOP_LOAD_ID	= (#DISPLAY_SOP_LOAD_ID & ","& DESPATCH_NOTES(SOP_LOAD_ID))
				END_IF
			END_IF
		END_WHILE

		IF (#SELECT_DESPATCH_NOTE = '')
			EXIT(%EMPTY)
		ELSE
			EXIT(%SUCCESS)
		END_IF
	END_BLOCK
END_FORM

FORM ALREADY_IN_UPDATE /ROW=15 /COL=2 /HEIGHT=9 /WIDTH=78 &
	/TITLE=(MESSAGE("P_92890"))

	OUTPUT_BLOCK NOTIFY /ROW=3 /COL=3 /LEN=65 &
			/SOURCE_IF=(SOP_SHIPPING_RUN_CONTROL(IN_PROGRESS_STATUS) = PARAMETER("STATUS_LOAD_ASSIGNMENT")), &
				(MESSAGE("P_93064")) &
			 /SOURCE_IF=(SOP_SHIPPING_RUN_CONTROL(IN_PROGRESS_STATUS) = PARAMETER("STATUS_TRANSPORT_LIST")), &
				(MESSAGE("P_93065")) &
			/ATTRIBUTES=NONE

	OUTPUT_BLOCK USERNAME /ROW=5 /COL=35 &
			/PROMPT=(FIELD_PROMPT(USERNAME)) &
			/SOURCE=(SOP_SHIPPING_RUN_CONTROL(USERNAME))

	OUTPUT_BLOCK DATETIME /ROW=6 /COL=35 &
			/PROMPT=(FIELD_PROMPT(SYS_MOD_DATE_TIME)) &
			/SOURCE=(SOP_SHIPPING_RUN_CONTROL(SYS_MOD_DATE_TIME))

	YESNO_BLOCK CONFIRM_OVERWRITE /ROW=7 /COL=35 &
			/PROMPT=(MESSAGE("P_62089")) &
			/FAILURE=(EXIT(%BACK))
END_FORM

FORM DISPLAY_SHIPPING_TOP	/ROW=3 /COL=2 /HEIGHT=4 /WIDTH=78 &
	/REMAIN &
	/TITLE=(MESSAGE("P_50064"))

	BEGIN_BLOCK INIT_1
		PERFORM SELECT_DESPATCH_NOTE
		#SHIP_NOTES	= #SELECT_DESPATCH_NOTE
	END_BLOCK

	OUTPUT_BLOCK  /ROW=1 /COL=23 &
		/PROMPT=(FIELD_PROMPT(DIVISION)) &
		/SOURCE = #DIVISION &
		/USING = DESPATCH_HEADERS(DIVISION)

	BEGIN_BLOCK /DISPLAY_ONLY DIV_DESC
		FIND IN AR_CONTROLS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION

		FIND IN SECURITY_PERIOD_ACCESS_VT &
			/WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/WITH=SYS_ACCESS_CODE= #DIVISION &
			/WITH=SOURCE_MODULE=(PARAMETER("MODULE_SO"))
		#DIV_DESC	= SECURITY_PERIOD_ACCESS_VT(CODE_DESCRIPTION)
	END_BLOCK

	OUTPUT_BLOCK DIV_NAME /ROW=1 /COL=25 &
			/SOURCE = #DIV_DESC

	OUTPUT_BLOCK RUN /ROW=2 /COL=23 &
			/PROMPT=(FIELD_PROMPT(SOP_SHIPPING_RUN_NUMBER)) &
			/SOURCE = #SOP_SHIPPING_RUN_NUMBER &

	OUTPUT_BLOCK /ROW=3 /COL=23 &
			/PROMPT=(FIELD_PROMPT(SOP_LOAD_ID)) &
			/SOURCE = #DISPLAY_SOP_LOAD_ID &

	OUTPUT_BLOCK DESPATCH_NOTE /ROW=4 /COL=23 &
			/PROMPT=(FIELD_PROMPT(DESPATCH_NOTE)) &
			/SOURCE = #SHIP_NOTES &

END_FORM


FORM DISPLAY_SALES_TOP /ROW=3 /COL=2 /HEIGHT=4 /WIDTH=78 &
	/REMAIN &
	/ATTRIBUTES=NOBORDER

	OUTPUT_BLOCK /ROW=2 /COL=35 &
		/SOURCE=#DIVISION	&
		/PROMPT=FIELD_PROMPT(DIVISION) &
		/USING=DESPATCH_HEADERS(DIVISION)

	OUTPUT_BLOCK DIV_NAME /ROW=2 /COL=39 &
		/SOURCE=#DIV_NAME

	OUTPUT_BLOCK /ROW=3 /COL=35 &
		/PROMPT=FIELD_PROMPT(DESPATCH_NOTE) &
		/SOURCE=#SHIP_NOTES &
		/USE_IF=(#ENTRY_BY_SHIPMENT=#NO)
		
	OUTPUT_BLOCK /ROW=3 /COL=35 &
		/PROMPT=FIELD_PROMPT(SHIPMENT_HEADERS,SHIPMENT_NUMBER) &
		/SOURCE=#SHIPMENT_NUM &
		/USE_IF=(#ENTRY_BY_SHIPMENT=#YES)

END_FORM

TABLE_FORM DISPLAY_DESPATCH_LINES /ROW=8 /COL=2 /HEIGHT=16 /WIDTH=78 &
	/REMAIN &
	/TITLE=#TITLE &
	/OPTIONS=NOINSERT,NOMODIFY,NODELETE,EXIT_EMPTY &
	/TABLE=SOP_DESPATCH_NOTES_VT &
	/ROW_HEIGHT=3

	BEGIN_BLOCK /DISPLAY_ONLY SET_DESPATCH_CONTEXT
		#QUANTITY_2 = ""
		#UNIT_2 = ""
		FIND IN DESPATCH_NOTES	&
			/LOCK=NONE	&
			/WITH=COMPANY_CODE = #COMPANY_CODE	&
			/WITH=DIVISION = SOP_DESPATCH_NOTES_VT(DIVISION)	&
			/WITH=DESPATCH_NOTE = SOP_DESPATCH_NOTES_VT(DESPATCH_NOTE)	&
			/WITH=DESPATCH_LINE = SOP_DESPATCH_NOTES_VT(DESPATCH_LINE)

		FIND IN DESPATCH_NOTE_QTYS	&
			/LOCK=NONE	&
			/WITH=COMPANY_CODE = #COMPANY_CODE	&
			/WITH=DIVISION = DESPATCH_NOTES(DIVISION)	&
			/WITH=DESPATCH_NOTE = DESPATCH_NOTES(DESPATCH_NOTE)	&
			/WITH=DESPATCH_LINE = DESPATCH_NOTES(DESPATCH_LINE)	&
			/WITH=UNIT_OF_MEASURE = DESPATCH_NOTES(SOP_NOMINATED_UNIT)

		IF (DESPATCH_NOTES(NONSTOCK) = #NO)
			FIND IN PRODUCT_MASTER &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=PART_CODE=DESPATCH_NOTES(PART_CODE)
			#DESC = PRODUCT_MASTER(PART_DESC_1)
			#IC_PACKAGED_PRODUCT = PRODUCT_MASTER(IC_PACKAGED_PRODUCT)
			#IC_UNIT_CAPACITY = PRODUCT_MASTER(IC_UNIT_CAPACITY)
		ELSE
			#DESC = MID(DESPATCH_NOTES(NONSTOCK_DESCRIPTION),1,25)
			#IC_PACKAGED_PRODUCT = #NO
			#IC_UNIT_CAPACITY = DESPATCH_NOTES(SOP_NOMINATED_UNIT)
		END_IF

		IF (DESPATCH_NOTES(NONSTOCK) = #YES)
			#DESC = DESPATCH_NOTES(NONSTOCK_DESCRIPTION)
			#QUANTITY_1 = DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH)
			#UNIT_1 = DESPATCH_NOTES(SOP_NOMINATED_UNIT)
			#MASK_1 = "!-@@@@@@@@@@0.0@"
		ELSE
			IF (#IC_UNIT_CAPACITY = DESPATCH_NOTES(SOP_NOMINATED_UNIT))
				#QUANTITY_1 = DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH)
				#UNIT_1 = DESPATCH_NOTES(SOP_NOMINATED_UNIT)
				IF (DESPATCH_NOTES(IC_OTHER_INVENTORY_UNIT) <> "")
					FIND IN DESPATCH_NOTE_QTYS	&
						/LOCK=NONE	&
						/WITH=COMPANY_CODE = #COMPANY_CODE	&
						/WITH=DIVISION = DESPATCH_NOTES(DIVISION)	&
						/WITH=DESPATCH_NOTE = DESPATCH_NOTES(DESPATCH_NOTE)	&
						/WITH=DESPATCH_LINE = DESPATCH_NOTES(DESPATCH_LINE)	&
						/WITH=UNIT_OF_MEASURE = DESPATCH_NOTES(IC_OTHER_INVENTORY_UNIT)
					#QUANTITY_2 = DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH)
					#UNIT_2 = DESPATCH_NOTES(IC_OTHER_INVENTORY_UNIT)
				END_IF
			ELSE
				#QUANTITY_2 = DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH)
				#UNIT_2 = DESPATCH_NOTES(SOP_NOMINATED_UNIT)
				IF (DESPATCH_NOTES(IC_OTHER_INVENTORY_UNIT) <> "")
					FIND IN DESPATCH_NOTE_QTYS	&
						/LOCK=NONE	&
						/WITH=COMPANY_CODE = #COMPANY_CODE	&
						/WITH=DIVISION = DESPATCH_NOTES(DIVISION)	&
						/WITH=DESPATCH_NOTE = DESPATCH_NOTES(DESPATCH_NOTE)	&
						/WITH=DESPATCH_LINE = DESPATCH_NOTES(DESPATCH_LINE)	&
						/WITH=UNIT_OF_MEASURE = DESPATCH_NOTES(IC_OTHER_INVENTORY_UNIT)
					#QUANTITY_1 = DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH)
					#UNIT_1 = DESPATCH_NOTES(IC_OTHER_INVENTORY_UNIT)
				END_IF
			END_IF

			IF (#IC_PACKAGED_PRODUCT = #YES)
				FIND IN DESPATCH_NOTE_QTYS	&
						/LOCK=NONE	&
						/WITH=COMPANY_CODE = #COMPANY_CODE	&
						/WITH=DIVISION = DESPATCH_NOTES(DIVISION)	&
						/WITH=DESPATCH_NOTE = DESPATCH_NOTES(DESPATCH_NOTE)	&
						/WITH=DESPATCH_LINE = DESPATCH_NOTES(DESPATCH_LINE)	&
						/WITH=UNIT_OF_MEASURE = DESPATCH_NOTES(IC_PACK_UNIT)
				#QUANTITY_1 = DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH)
				#UNIT_1 = DESPATCH_NOTES(IC_PACK_UNIT)
			END_IF

			FIND IN IC_PRODUCT_MASTER_UNITS &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=PART_CODE=DESPATCH_NOTES(PART_CODE) &
				/WITH=UNIT_OF_MEASURE=#UNIT_1
			IF (%STATUS = %FAILURE &
			OR IC_PRODUCT_MASTER_UNITS(IC_QUANTITY_MASK) = '')
				FIND IN UNITS_OF_MEASURE &
					/LOCK=NONE &
					/WITH=UNIT_OF_MEASURE=#UNIT_1

				IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)

				#MASK_1 = UNITS_OF_MEASURE(IC_QUANTITY_MASK)
			ELSE
				#MASK_1 = IC_PRODUCT_MASTER_UNITS(IC_QUANTITY_MASK)
			END_IF

			IF (#UNIT_2 <> "")
				FIND IN IC_PRODUCT_MASTER_UNITS &
					/LOCK=NONE &
					/WITH=COMPANY_CODE=#COMPANY_CODE &
					/WITH=PART_CODE=DESPATCH_NOTES(PART_CODE) &
					/WITH=UNIT_OF_MEASURE=#UNIT_2

				IF (%STATUS = %FAILURE &
				OR IC_PRODUCT_MASTER_UNITS(IC_QUANTITY_MASK) = '')
					FIND IN UNITS_OF_MEASURE &
						/LOCK=NONE &
						/WITH=UNIT_OF_MEASURE=#UNIT_2

					IF (%STATUS <> %SUCCESS) EXIT (%FAILURE)

					#MASK_2 = UNITS_OF_MEASURE(IC_QUANTITY_MASK)
				ELSE
					#MASK_2 = IC_PRODUCT_MASTER_UNITS(IC_QUANTITY_MASK)
				END_IF
			END_IF
		END_IF
	END_BLOCK

	OUTPUT_BLOCK DESPATCH_NOTE_5 /ROW=1 /COL=2 &
			/SOURCE=(DESPATCH_NOTES(DESPATCH_NOTE)) &
			/RHEADING=FIELD_HEADING(DESPATCH_NOTE)

	OUTPUT_BLOCK DESPATCH_LINE_6 /ROW=1 /COL=12 &
			/SOURCE=(DESPATCH_NOTES(DESPATCH_LINE)) &
			/RHEADING=FIELD_HEADING(DESPATCH_LINE)

	OUTPUT_BLOCK WAREHOUSE_7 /ROW=1 /COL=16 &
			/SOURCE=(DESPATCH_NOTES(WAREHOUSE)) &
			/HEADING=FIELD_HEADING(WAREHOUSE)

	OUTPUT_BLOCK PART_CODE_8 /ROW=1 /COL=19 &
			/SOURCE=(DESPATCH_NOTES(PART_CODE)) &
			/HEADING=FIELD_HEADING(PART_CODE)

	OUTPUT_BLOCK PART_DESC_9 /ROW=2 /COL=2 /LEN=25 &
			/SOURCE=(#DESC)

	OUTPUT_BLOCK  /ROW=1 /COL=35 &
			/SOURCE=DESPATCH_NOTES(IC_LOT_NUMBER) &
			/HEADING=FIELD_HEADING(IC_LOT_NUMBER)

	OUTPUT_BLOCK  /ROW=1 /COL=51 &
			/RHEADING=(FIELD_HEADING(IC_LOT_SEQUENCE)) &
			/SOURCE=DESPATCH_NOTES(IC_LOT_SEQUENCE)

	OUTPUT_BLOCK  /ROW=2 /COL=37 &
			/SOURCE=DESPATCH_NOTES(BIN_LOCATION) &
			/PROMPT=FIELD_SHORT_PROMPT(BIN_LOCATION)

	OUTPUT_BLOCK  /ROW=3 /COL=43 &
			/PROMPT=(FIELD_SHORT_PROMPT(MH_NUMBER)) &
			/SOURCE=DESPATCH_NOTES(MH_NUMBER)

	OUTPUT_BLOCK UNIT_1 /ROW=1 /COL=73 &
		/SOURCE=(#UNIT_1) &
		/USING=DESPATCH_NOTES(UNIT_SALES) &
		/HEADING=FIELD_HEADING(UNIT_OF_MEASURE)

	OUTPUT_BLOCK  /ROW=1 /COL=58 /LEN=14 &
		/SOURCE=(#QUANTITY_1) &
		/RHEADING=FIELD_HEADING(DESPATCH_QTY_ACTUAL) &
		/OUTPUT_MASK=(#MASK_1)

	OUTPUT_BLOCK UNIT_2 /ROW=2 /COL=73 &
		/SOURCE=(#UNIT_2) &
		/USING=DESPATCH_NOTES(UNIT_SALES) &
		/NOHEADING &
		/USE_IF=(#UNIT_2 <> "")

	OUTPUT_BLOCK DISP_QTY_2 /ROW=2 /COL=58 /LEN=14 &
		/SOURCE=(#QUANTITY_2) &
		/NOHEADING &
		/OUTPUT_MASK=(#MASK_2) &
		/USE_IF=(#UNIT_2 <> "" )

END_FORM

FORM QTY_EXCEEDED /ROW=11 /COL=26 /HEIGHT=11 /WIDTH=54 &
	/TITLE=(MESSAGE("P_56088"))

	TEXT /ROW=2 /COL=7	(MESSAGE("P_01288"))
	TEXT /ROW=2 /COL=36	(MESSAGE("P_01289"))
	TEXT /ROW=10 /COL=2	(MESSAGE("P_01290"))


	OUTPUT_BLOCK TOTAL_PACK_QTY /ROW=2 /COL=21 &
			/SOURCE=(#R_ERROR_PACK_DESP_QTY) &
			/USING=DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH) &
			/OUTPUT_MASK=(#R_ERROR_MASK)

	OUTPUT_BLOCK PART /ROW=4 /COL=24 &
			/PROMPT=(FIELD_PROMPT(PART_CODE)) &
			/SOURCE=(#R_ERROR_PART) &
			/USING=SOP_DESPATCH_NOTES_VT(PART_CODE)

	OUTPUT_BLOCK BATCH /ROW=5 /COL=24 &
			/PROMPT=(FIELD_PROMPT(IC_LOT_NUMBER)) &
			/SOURCE=(#R_ERROR_LOT) &
			/USING=SOP_DESPATCH_NOTES_VT(IC_LOT_NUMBER) &
			/USE_IF=(#R_ERROR_LOT <> "")

	OUTPUT_BLOCK LOT_SEQUENCE /ROW=5 /COL=24 &
			/PROMPT=(FIELD_PROMPT(IC_LOT_SEQUENCE)) &
			/SOURCE=(#R_ERROR_LOT_SEQ) &
			/USING=SOP_DESPATCH_NOTES_VT(IC_LOT_SEQUENCE) &
			/USE_IF=(#R_ERROR_LOT_SEQ <> "")

	OUTPUT_BLOCK BIN /ROW=6 /COL=24 &
			/PROMPT=(FIELD_PROMPT(BIN_LOCATION)) &
			/SOURCE=(#R_ERROR_BIN) &
			/USING=SOP_DESPATCH_NOTES_VT(BIN_LOCATION) &
			/USE_IF=(#R_ERROR_BIN <> "")

	OUTPUT_BLOCK MH /ROW=7 /COL=24 &
			/PROMPT=(FIELD_PROMPT(MH_NUMBER)) &
			/SOURCE=(#R_ERROR_MH) &
			/SOURCE=SOP_DESPATCH_NOTES_VT(MH_NUMBER) &
			/USE_IF=(#R_ERROR_MH <> "")

	OUTPUT_BLOCK QTY /ROW=8 /COL=24 /LEN=14 &
			/PROMPT=(MESSAGE("P_44061")) &
			/SOURCE=(#R_ERROR_QOH_SOL) &
			/OUTPUT_MASK=(#R_ERROR_MASK) &
			/USING=IC_PRODUCT_STATUS(IC_QUANTITY)

	OUTPUT_BLOCK UNIT /ROW=8 /COL=39 &
			/SOURCE=(#R_ERROR_UNIT) &
			/USING=DESPATCH_NOTES(UNIT_SALES)

	PAUSE_BLOCK PAUSE_1 /ROW=11 /COL=39

END_FORM

FORM PICKED_QTY_EXCEEDED /ROW=12 /COL=26 /HEIGHT=10 /WIDTH=54 &
	/TITLE=(MESSAGE("P_01293"))

	TEXT /ROW=2 /COL=4	(MESSAGE("P_01291"))
	TEXT /ROW=4 /COL=4	(MESSAGE("P_01292"))
	TEXT /ROW=9 /COL=4	(MESSAGE("P_01290"))

	OUTPUT_BLOCK TOTAL_QTY /ROW=2 /COL=30 /LEN=14 &
			/SOURCE=(#R_ERROR_PACK_DESP_QTY) &
			/USING=DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH) &
			/OUTPUT_MASK=(#R_ERROR_MASK)

	OUTPUT_BLOCK UNIT /ROW=2 /COL=45 &
			/SOURCE=(#R_ERROR_UNIT) &
			/USING=DESPATCH_NOTES(UNIT_SALES)

	OUTPUT_BLOCK PART /ROW=6 /COL=25 &
			/PROMPT=(FIELD_PROMPT(PART_CODE)) &
			/SOURCE=(#R_ERROR_PART) &
			/USING=SOP_DESPATCH_NOTES_VT(PART_CODE)

	OUTPUT_BLOCK QTY /ROW=7 /COL=25 /LEN=14 &
			/PROMPT=(MESSAGE("P_01294")) &
			/SOURCE=(#R_ERROR_QOH_SOL) &
			/USING=DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH) &
			/OUTPUT_MASK=(#R_ERROR_MASK)

	OUTPUT_BLOCK UNIT_2 /ROW=7 /COL=40 &
			/SOURCE=(#R_ERROR_UNIT) &
			/USING=DESPATCH_NOTES(UNIT_SALES)

	PAUSE_BLOCK PAUSE_1 /ROW=10 /COL=34

END_FORM

FORM PICKED_QTY_UNDERSHIP /ROW=12 /COL=26 /HEIGHT=7 /WIDTH=54 &
	/TITLE=(#R_ERROR_UNDERSHIP_MSG)

	TEXT /ROW=2 /COL=4	(MESSAGE("P_01291"))
	TEXT /ROW=6 /COL=4	(MESSAGE("P_01290"))

	OUTPUT_BLOCK TOTAL_QTY /ROW=2 /COL=30 /LEN=14 &
			/SOURCE=(#R_ERROR_PACK_DESP_QTY) &
			/USING=DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH) &
			/OUTPUT_MASK=(#R_ERROR_MASK)

	OUTPUT_BLOCK UNIT /ROW=2 /COL=45 &
			/SOURCE=(#R_ERROR_UNIT) &
			/USING=DESPATCH_NOTES(UNIT_SALES)

	OUTPUT_BLOCK PART /ROW=4 /COL=25 &
			/PROMPT=(FIELD_PROMPT(PART_CODE)) &
			/SOURCE=(#R_ERROR_PART) &
			/USING=SOP_DESPATCH_NOTES_VT(PART_CODE)

	OUTPUT_BLOCK QTY /ROW=5 /COL=25 /LEN=14 &
			/PROMPT=(MESSAGE("P_01294")) &
			/SOURCE=(#R_ERROR_QOH_SOL) &
			/USING=DESPATCH_NOTE_QTYS(IC_QTY_IN_DESPATCH) &
			/OUTPUT_MASK=(#R_ERROR_MASK)

	OUTPUT_BLOCK UNIT_2 /ROW=5 /COL=40 &
			/SOURCE=(#R_ERROR_UNIT) &
			/USING=DESPATCH_NOTES(UNIT_SALES)

	PAUSE_BLOCK PAUSE_1 /ROW=7 /COL=34

END_FORM

PROCEDURE_FORM CONFIRM_MENU

	BEGIN_BLOCK DOC
		! If any of the Shipping Notes in the entered range are for a Transfer Order,
		! and #R_XFER_USER_INTERACTION = #YES, the update cannot be completed in Batch Mode
		! because Inventory putaway information may be required to be entered as part of the
		! Confirmation.
		! Also, Batch mode is not allowed if an electronic signature is required
	END_BLOCK

	MENU_BLOCK CONFIRM /ROW=4 /COL=43 &
			/SOURCE=(MESSAGE("P_00109")) /NOREPEAT &
			/BACK=(EXIT(%BACK)) &
			/EXIT=(EXIT(%BACK)) &
			/ITEM=(MESSAGE("P_00109")),(MESSAGE("P_54025")),(#OPT="UPDATE") &
			/ITEM_IF=(#R_XFER_USER_INTERACTION <> #YES AND #ESIG_IN_USE <> #YES AND #CARRIER_FORWARD <> #YES), &
					(MESSAGE("P_00067")),(MESSAGE("P_54014")),(#OPT="BATCH") &
			/ITEM=(MESSAGE("P_00257")),(MESSAGE("P_00263")),(EXIT(%BACK))

	BEGIN_BLOCK GET_ESIG
		IF (#ESIG_IN_USE = #YES)
        		PERFORM "GEMLB:LB_L_SIGNATURE" USE_ESIG_BLOCK_WITH_SAVE
        		PERFORM "GEMLB:LB_L_SIGNATURE"

        		FIND IN ES_SIGNATURE_VT &
            			/LOCK=NONE

        		IF ( ES_SIGNATURE_VT(ES_SIGNATURE_STATUS) = PARAMETER("STATUS_EXIT") OR &
            			ES_SIGNATURE_VT(ES_SIGNATURE_STATUS) = PARAMETER("STATUS_BACK") OR &
            			ES_SIGNATURE_VT(ES_SIGNATURE_STATUS) = PARAMETER("STATUS_FAIL") )
            			GOTO CONFIRM
        		END_IF
		END_IF
	END_BLOCK
END_FORM

FORM CARRIER_SHIPPING_CODE_ENTRY /ROW=8 /COL=2 /HEIGHT=16 /WIDTH=78 &
	/TITLE=(MESSAGE("P_37327"))

	BEGIN_BLOCK CODE_ENTRY
		
		OUTPUT_BLOCK CARRIER_ID_O /ROW=2 /COL=30 /LEN=8 &
			/SOURCE=#CARRIER_ID &
			/PROMPT=(FIELD_PROMPT(CARRIER_ID))
		
		OUTPUT_BLOCK CARRIER_NAME_O1 /ROW=2 /COL=40 /LEN=30 & 
			/SOURCE=#CARRIER_NAME 
			
		OUTPUT_BLOCK SHIP_INFO_CODE_O /ROW=3 /COL=30 /LEN=8 &
			/SOURCE=#SHIP_INFO_CODE &
			/PROMPT=(FIELD_PROMPT(SHIP_INFO_CODE))  
		
		OUTPUT_BLOCK SHIP_INFO_DESCRIPTION_O1 /ROW=3 /COL=40 /LEN=30 & 
			/SOURCE=#SHIP_INFO_DESCRIPTION

		INPUT_BLOCK CARRIER_ID_SEL_IN /ROW=2 /COL=30 /LEN=8 &
			/PROMPT=(FIELD_PROMPT(CARRIER_ID)) &
			/TARGET=#CARRIER_ID &
			/USING=CARRIER_CODES(CARRIER_ID), REQUIRED &
			/USE_IF=(#CARRIER_SHIP_INFO_CHANGE_FLAG = #YES) &
			/LOV=CARRIER_ID_LOV(CARRIER_ID, CARRIER_NAME, SCAC_CODE) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=STATUS_FLAG=PARAMETER('STATUS_ACTIVE') &
			/LOV_REDUCED_TO=CARRIER_ID &
			/LOV_SORTED_BY=CARRIER_ID

		IF ( #CARRIER_SHIP_INFO_CHANGE_FLAG = #YES ) 
			FIND IN CARRIER_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=CARRIER_ID=#CARRIER_ID &
				/WITH=STATUS_FLAG=PARAMETER('STATUS_ACTIVE')
		
			IF(%STATUS<>%SUCCESS)
				MESSAGE/IDENTIFIER/BELL/WAIT P_71010, #CARRIER_ID
				GOTO CARRIER_ID_SEL_IN
			ELSE
				#CARRIER_NAME = CARRIER_CODES(CARRIER_NAME)
			END_IF
			
			OUTPUT_BLOCK CARRIER_NAME_O2 /ROW=2 /COL=40 /LEN=30 & 
				/SOURCE=#CARRIER_NAME			
		END_IF
			
		INPUT_BLOCK SHIP_INFO_CODE_IN /ROW=3 /COL=30 /LEN=8 &
			/PROMPT=(FIELD_PROMPT(SHIP_INFO_CODE)) &
			/TARGET=#SHIP_INFO_CODE &
			/USING=SHIPPING_INFO_CODES(SHIP_INFO_CODE), REQUIRED &
			/USE_IF=(#CARRIER_SHIP_INFO_CHANGE_FLAG = #YES) &
			/LOV=CARRIER_INFO_CODES_LOV(SHIP_INFO_CODE,SHIP_INFO_DESCRIPTION) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=CARRIER_ID=#CARRIER_ID &
			/LOV_WITH=STATUS_FLAG=PARAMETER('STATUS_ACTIVE') &
			/LOV_REDUCED_TO=SHIP_INFO_CODE &
			/LOV_SORTED_BY=SHIP_INFO_CODE
		
		IF ( #CARRIER_SHIP_INFO_CHANGE_FLAG = #YES ) 
			FIND IN SHIPPING_INFO_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=SHIP_INFO_CODE=#SHIP_INFO_CODE &
				/WITH=STATUS_FLAG=PARAMETER('STATUS_ACTIVE')
		
			IF(%STATUS<>%SUCCESS)
				MESSAGE/IDENTIFIER/BELL/WAIT P_71010, #SHIP_INFO_CODE
				GOTO SHIP_INFO_CODE_IN
			ELSE
				#SHIP_INFO_DESCRIPTION = SHIPPING_INFO_CODES(SHIP_INFO_DESCRIPTION)
			END_IF
		
			OUTPUT_BLOCK SHIP_INFO_DESCRIPTION_O2 /ROW=3 /COL=40 /LEN=30 & 
				/SOURCE=#SHIP_INFO_DESCRIPTION		
		
			PERFORM "SOP:SOP_S_L_SHIPMENTS" CARRIER_INFO_XREF_CHECK ( &
											(#COMPANY_CODE), &
											(#CARRIER_ID), &
											(#SHIP_INFO_CODE), &
											#ERROR_MESSAGE_NUMBER, &
											#ERROR_MESSAGE)
		
			IF(%STATUS<>%SUCCESS)
				MESSAGE/IDENTIFIER/BELL #ERROR_MESSAGE_NUMBER
				GOTO CARRIER_ID_SEL_IN
			END_IF
		END_IF
		
		!IF(#CARRIER_ID_PRE <> #CARRIER_ID OR #SHIP_INFO_CODE_PRE <> #SHIP_INFO_CODE)
		IF ( (#SHIPMENT_CARRIER_ID <> "" AND #SHIPMENT_CARRIER_ID <> #CARRIER_ID) OR &
			 (#SHIPMENT_SHIP_INFO_CODE <> "" AND #SHIPMENT_SHIP_INFO_CODE <> #SHIP_INFO_CODE) OR &
			 (#SHIPMENT_CARRIER_ID = "" AND #CARRIER_ID_PRE <> #CARRIER_ID ) OR &
			 (#SHIPMENT_SHIP_INFO_CODE = "" AND #SHIP_INFO_CODE_PRE <> #SHIP_INFO_CODE)) 
		 
			DELETE ALL FROM SHIPMENT_CARRIER_SHIPPING_VT
			PERFORM INIT_SHIPMENT_CARRIER_SHIPPING_VT ((#CARRIER_ID), (#SHIP_INFO_CODE))
			
		END_IF
		
		IF ( (#SHIPMENT_CARRIER_ID = #CARRIER_ID AND #CARRIER_ID <> #CARRIER_ID_PRE) OR &
		     (#SHIPMENT_SHIP_INFO_CODE = #SHIP_INFO_CODE AND #SHIP_INFO_CODE <> #SHIP_INFO_CODE_PRE) ) 
		
			PERFORM LOAD_SHIPMENT_CARRIER_SHIP_INFO
		
		END_IF 
		
		CLEAR_ARRAY #IS_NUMERIC_FIELD()
		CLEAR_ARRAY #SHIP_INFO_PROMPT()
		PERFORM PUSH_SHIP_INFO_AND_FIELD_REQUIRED_ARRAY((#SHIP_INFO_CODE))
			
		#CARRIER_ID_PRE = #CARRIER_ID
		#SHIP_INFO_CODE_PRE = #SHIP_INFO_CODE
		
		#CHECK_SHIP_SHIP_VALUE_REQ = #NO
		
		FIND IN SHIPMENT_CARRIER_SHIPPING_VT &
			/LOCK=NONE &
			/WITH=SHIP_INFO_VALUE = ""
			
		IF ( %STATUS = %SUCCESS ) 
			#CHECK_SHIP_SHIP_VALUE_REQ = #YES
		END_IF  
		
		PERFORM SHIP_CARR_INFO_FORM_SWICTH
		
		IF(%STATUS=%EMPTY) EXIT(%STATUS)
		
		IF(%STATUS <> %SUCCESS AND #CARRIER_SHIP_INFO_CHANGE_FLAG = #YES) 
			GOTO CARRIER_ID_SEL_IN
		END_IF
	END_BLOCK
END_FORM

PROCEDURE_FORM SHIP_CARR_INFO_FORM_SWICTH

	BEGIN_BLOCK START_PROC
	
		PERFORM SHIPPING_CARRIER_DETAIL_INFO_ENTRY ((#CARRIER_ID), (#SHIP_INFO_CODE))

		IF(%STATUS = %SUCCESS AND #CHECK_SHIP_SHIP_VALUE_REQ = #YES )
		
			FIND IN SHIPMENT_CARRIER_SHIPPING_VT &
				/SECONDARY &
				/STREAM_NAME=SHIP_REQ &
				/WITH=FIELD_REQUIRED=#YES &
				/WITH=SHIP_INFO_VALUE=""
			
			IF(%STATUS = %SUCCESS)
			
				MESSAGE/IDENTIFIER/BELL/WAIT &
					P_33252, #SHIP_INFO_PROMPT(SHIP_REQ:SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE))
				GOTO START_PROC
			END_IF
		ELSE
		
			EXIT(%STATUS)
		END_IF
	END_BLOCK
END_FORM

PROCEDURE_FORM PUSH_SHIP_INFO_AND_FIELD_REQUIRED_ARRAY(#P_SHIP_INFO_CODE) &
	/LOCK=NONE &
	/TABLE=SHIPPING_INFO_CODES &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=SHIP_INFO_CODE=#P_SHIP_INFO_CODE &
	
	BEGIN_BLOCK PROC
	
		#SHIP_INFO_PROMPT(SHIPPING_INFO_CODES(SEQUENCE)) &
			= SHIPPING_INFO_CODES(SHIP_INFO_PROMPT)
		#IS_NUMERIC_FIELD(SHIPPING_INFO_CODES(SEQUENCE)) &
			= SHIPPING_INFO_CODES(IS_NUMERIC)
	END_BLOCK
END_FORM

TABLE_FORM SHIPPING_CARRIER_DETAIL_INFO_ENTRY (#P_CARRIER_ID, #P_SHIP_INFO_CODE) &
	/ROW=12 /COL=2 /WIDTH=78 /HEIGHT=12 &
	/OPTION=NOINSERT, NODELETE &
	/ATTRIBUTES=NOBORDER &
	/TABLE=SHIPMENT_CARRIER_SHIPPING_VT &
	/SORTED_BY=SEQUENCE
	
	BEGIN_BLOCK /DISPLAY_ONLY INIT
	
		#SHIP_INFO_VALUE = SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE)
	END_BLOCK
	
	BEGIN_BLOCK ENTRY
	
		#SHIP_INFO_VALUE = SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE)
		#IS_NUMERIC = #IS_NUMERIC_FIELD(SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)) 
	
		OUTPUT_BLOCK /ROW=1 /COL=2 &
			/HEADING=FIELD_HEADING(SHIPPING_INFO_CODES, SHIP_INFO_PROMPT) &
			/SOURCE=#SHIP_INFO_PROMPT(SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)) &
			/USING=SHIPPING_INFO_CODES(SHIP_INFO_PROMPT)

		OUTPUT_BLOCK SHIP_INFO_VALUE_O1 /ROW=1 /COL=18 &
			/HEADING=FIELD_HEADING(SHIPMENT_DETAILS, SHIP_INFO_VALUE) &
			/USING=SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE) &
			/SOURCE=#SHIP_INFO_VALUE
		
		INPUT_BLOCK SHIP_INFO_VALUE_IN_1 /ROW=1 /COL=18 &
			/HEADING=FIELD_HEADING(SHIPMENT_DETAILS, SHIP_INFO_VALUE) &
			/TARGET=#SHIP_INFO_VALUE &
			/USING=SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE), NUMERIC &
			/USE_IF=(#IS_NUMERIC = #YES AND &
			         (#ARR_SHIPPING_INFO_LINES(SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)) = "" OR & 
					  #CARRIER_SHIP_INFO_CHANGE_FLAG = #YES ) )
		
		INPUT_BLOCK SHIP_INFO_VALUE_IN_2 /ROW=1 /COL=18 &
			/HEADING=FIELD_HEADING(SHIPMENT_DETAILS, SHIP_INFO_VALUE) &
			/TARGET=#SHIP_INFO_VALUE &
			/USING=SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE) &
			/USE_IF=(#IS_NUMERIC <> #YES AND &
			         (#ARR_SHIPPING_INFO_LINES(SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)) = "" OR & 
					  #CARRIER_SHIP_INFO_CHANGE_FLAG = #YES ) )
		
		IF (SHIPMENT_CARRIER_SHIPPING_VT(FIELD_REQUIRED) = #YES &
			AND #IS_NUMERIC <> #YES AND #SHIP_INFO_VALUE = "" &
			AND #CARRIER_SHIP_INFO_CHANGE_FLAG = #YES )
		
			MESSAGE/IDENTIFIER/BELL/WAIT &
				P_33252, #SHIP_INFO_PROMPT(SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE))
			GOTO SHIP_INFO_VALUE_IN_1
		END_IF
		
		SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE) = #SHIP_INFO_VALUE
		
		OUTPUT_BLOCK UNIT_OF_MEASURE /ROW=1 /COL=69 /LEN=4 &
			/HEADING=(MESSAGE("P_09359")) &
			/SOURCE=SHIPMENT_CARRIER_SHIPPING_VT(UNIT_OF_MEASURE) 
		
		OUTPUT_BLOCK SHIP_INFO_REQUIRED /ROW=1 /COL=74 /LEN=4 &
			/HEADING=MESSAGE("P_37273") &
			/SOURCE=SHIPMENT_CARRIER_SHIPPING_VT(FIELD_REQUIRED)
	END_BLOCK
END_FORM

PROCEDURE_FORM CREATE_SHIPMENT_CARRIER_SHIPPING_VT
 
	BEGIN_BLOCK PROC
	
		#RESULT_CHK=TABLE_CHECK("SHIPMENT_CARRIER_SHIPPING_VT","")
		IF (#RESULT_CHK=%NORMAL)
			DELETE TABLE SHIPMENT_CARRIER_SHIPPING_VT
		END_IF
		
		ADD TABLE SHIPMENT_CARRIER_SHIPPING_VT &
			/DESCRIPTION='Shipment Carrier Information' &
			/VIRTUAL &
			/ADD_FIELD=SEQUENCE &
			/ADD_FIELD=FIELD_REQUIRED &
			/ADD_FIELD=UNIT_OF_MEASURE &
			/ADD_FIELD=SHIP_INFO_VALUE
	END_BLOCK 	
END_FORM

PROCEDURE_FORM INIT_SHIPMENT_CARRIER_SHIPPING_VT (#P_CARRIER_ID, #P_SHIP_INFO_CODE) &
	/LOCK=NONE &
	/TABLE=CARRIER_INFO_XREF &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=CARRIER_ID=#CARRIER_ID &
	/WITH=SHIP_INFO_CODE=#SHIP_INFO_CODE &
	/WITH=FIELD_IN_USE=#YES
	
	BEGIN_BLOCK PROC
	
		CLEAR_BUFFER SHIPMENT_CARRIER_SHIPPING_VT
		
		SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)       = CARRIER_INFO_XREF(SEQUENCE)
		SHIPMENT_CARRIER_SHIPPING_VT(FIELD_REQUIRED) = CARRIER_INFO_XREF(FIELD_REQUIRED)
		
		FIND IN SHIPPING_INFO_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=SHIP_INFO_CODE = #SHIP_INFO_CODE &
				/WITH=SEQUENCE = CARRIER_INFO_XREF(SEQUENCE)
				
		IF ( %STATUS = %SUCCESS ) 
			SHIPMENT_CARRIER_SHIPPING_VT(UNIT_OF_MEASURE) = SHIPPING_INFO_CODES(UNIT_OF_MEASURE)
		END_IF		
		
		ADD TO SHIPMENT_CARRIER_SHIPPING_VT
	END_BLOCK
END_FORM

PROCEDURE_FORM SAVE_SHIPMENT_CARRIER_INFO &
	/LOCK=NONE &
	/TABLE=SOP_DESPATCH_NOTES_VT
 
	BEGIN_BLOCK VALIDATION
	
		IF(#IS_CARR_INFO_REQ <> #YES) EXIT
		IF(#SHIP_INFO_CODE = "" OR #CARRIER_ID = "") EXIT
		
		PERFORM IS_SHIP_NOTE_CONFIRMED (#STATUS_CONF)
		
	END_BLOCK
	
	BEGIN_BLOCK CREATE_SHIPMENT_NUMBER 
		IF ( #SHIPMENT_NUMBER = "" ) 
			PERFORM CREATE_SHIPMENT_NUMBER
			
			IF ( %STATUS <> %SUCCESS  ) 
				MESSAGE/IDENTIFIER/BELL P_13310	
				EXIT(%FAILURE)
			ELSE
				MESSAGE/IDENTIFIER/BELL P_37292,#SHIPMENT_NUMBER
			END_IF 
			
		END_IF	
	END_BLOCK 
	
	BEGIN_BLOCK POPULATE_SHIPPING_HEADER
		FIND IN DESPATCH_HEADERS &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=DESPATCH_NOTE=SOP_DESPATCH_NOTES_VT(DESPATCH_NOTE) 
		
		IF ( %STATUS = %SUCCESS AND DESPATCH_HEADERS(SHIPMENT_NUMBER) = "" ) 
			DESPATCH_HEADERS(SHIPMENT_NUMBER) = #SHIPMENT_NUMBER
		END_IF
	END_BLOCK 
	
	BEGIN_BLOCK CREATE_SHIPMENT
	
		FIND IN SHIPMENT_HEADERS &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=SHIPMENT_NUMBER = #SHIPMENT_NUMBER
			
		IF ( %STATUS <> %SUCCESS ) 
			
			CLEAR_BUFFER SHIPMENT_HEADERS
			
			SHIPMENT_HEADERS(COMPANY_CODE)    = #COMPANY_CODE
			SHIPMENT_HEADERS(DIVISION)        = #DIVISION
			SHIPMENT_HEADERS(SHIPMENT_NUMBER) = #SHIPMENT_NUMBER
			SHIPMENT_HEADERS(CARRIER_ID)      = #CARRIER_ID
			SHIPMENT_HEADERS(SHIP_INFO_CODE)  = #SHIP_INFO_CODE
			SHIPMENT_HEADERS(SOP_SHIP_DATE)   = %TODAY
			
			IF ( #STATUS_CONF=#NO ) 
				SHIPMENT_HEADERS(STATUS_FLAG)     = #SHIPMENT_CONFIRM_NONE	
			ELSE
				SHIPMENT_HEADERS(STATUS_FLAG)     = #SHIPMENT_CONFIRM_SOME
			END_IF
			
			ADD TO SHIPMENT_HEADERS
			
			START_STREAM SHIP_INFO1 &
				/TABLE=SHIPMENT_CARRIER_SHIPPING_VT &
				/LOCK=NONE
					
			WHILE (1) 
				FETCH SHIP_INFO1 /FAILURE=(CONTINUE OUT) 
			
				CLEAR_BUFFER SHIPMENT_DETAILS
				
				SHIPMENT_DETAILS(COMPANY_CODE)    = #COMPANY_CODE
				SHIPMENT_DETAILS(DIVISION)        = #DIVISION
				SHIPMENT_DETAILS(SHIPMENT_NUMBER) = #SHIPMENT_NUMBER
				SHIPMENT_DETAILS(SEQUENCE)        = SHIP_INFO1:SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)
				SHIPMENT_DETAILS(SHIP_INFO_VALUE) = SHIP_INFO1:SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE)
				
				ADD TO SHIPMENT_DETAILS				
			
			END_WHILE 
		ELSE 
			
			IF ( SHIPMENT_HEADERS(CARRIER_ID) <> #CARRIER_ID OR &
				 SHIPMENT_HEADERS(SHIP_INFO_CODE) <> #SHIP_INFO_CODE ) 
			
				SHIPMENT_HEADERS(CARRIER_ID)     = #CARRIER_ID
				SHIPMENT_HEADERS(SHIP_INFO_CODE) = #SHIP_INFO_CODE
				
				START_STREAM CC &
					/TABLE=SHIPMENT_DETAILS &
					/LOCK=WRITE &
					/WITH=COMPANY_CODE=#COMPANY_CODE &
					/WITH=DIVISION=#DIVISION &
					/WITH=SHIPMENT_NUMBER = #SHIPMENT_NUMBER & 
					
				WHILE (1) 
					FETCH CC /FAILURE=(CONTINUE OUT) 
					
					DELETE FROM SHIPMENT_DETAILS
				
				END_WHILE 
			
			END_IF 
			 
			START_STREAM SHIP_INFO2 &
					/TABLE=SHIPMENT_CARRIER_SHIPPING_VT &
					/LOCK=NONE
					
			WHILE (1) 
				FETCH SHIP_INFO2 /FAILURE=(CONTINUE OUT) 
			
				FIND IN SHIPMENT_DETAILS &
					/LOCK=WRITE &
					/WITH=COMPANY_CODE=#COMPANY_CODE &
					/WITH=DIVISION=#DIVISION &
					/WITH=SHIPMENT_NUMBER = #SHIPMENT_NUMBER &
					/WITH=SEQUENCE=SHIP_INFO2:SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)
					
				IF ( %STATUS = %SUCCESS ) 
					SHIPMENT_DETAILS(SHIP_INFO_VALUE) = SHIP_INFO2:SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE)
				ELSE 	 
					CLEAR_BUFFER SHIPMENT_DETAILS
					
					SHIPMENT_DETAILS(COMPANY_CODE)    = #COMPANY_CODE
					SHIPMENT_DETAILS(DIVISION)        = #DIVISION
					SHIPMENT_DETAILS(SHIPMENT_NUMBER) = #SHIPMENT_NUMBER
					SHIPMENT_DETAILS(SEQUENCE)        = SHIP_INFO2:SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)
					SHIPMENT_DETAILS(SHIP_INFO_VALUE) = SHIP_INFO2:SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE)
				
					ADD TO SHIPMENT_DETAILS				
				END_IF
			END_WHILE 
			
			IF ( #STATUS_CONF=#YES AND &
				(SHIPMENT_HEADERS(STATUS_FLAG) = #SHIPMENT_CONFIRM_NONE OR SHIPMENT_HEADERS(STATUS_FLAG) = "" )) 
				SHIPMENT_HEADERS(STATUS_FLAG)     = #SHIPMENT_CONFIRM_SOME
			END_IF
			
		END_IF 
	END_BLOCK
	
	BEGIN_BLOCK NEXT_LOOP
	END_BLOCK
END_FORM

PROCEDURE_FORM IS_SHIP_NOTE_CONFIRMED (#R_STATUS) &

	BEGIN_BLOCK INIT
	
		#R_STATUS = #NO
	END_BLOCK

	BEGIN_BLOCK PROC
		
		FIND IN DESPATCH_NOTES &
			/LOCK=NONE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=DESPATCH_NOTE=SOP_DESPATCH_NOTES_VT(DESPATCH_NOTE) &
			/WITH=CONFIRM_DESPATCH = #YES
			
		IF(%STATUS <> %SUCCESS) 
			#R_STATUS = #NO
		ELSE
			#R_STATUS = #YES
		END_IF
	END_BLOCK
END_FORM


PROCEDURE_FORM GET_SHIPMENT_CARRIER_SHIP (#P1,#R1) 
	BEGIN_BLOCK GET_SHIPMENT_CARRIER_SHIP
		
		IF ( #P1 <> "" ) 
			FIND IN SHIPMENT_HEADERS &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=DIVISION = #DIVISION &
				/WITH=SHIPMENT_NUMBER = #P1
				
			IF ( %STATUS = %SUCCESS ) 
				#CARRIER_ID     = SHIPMENT_HEADERS(CARRIER_ID)
				#SHIP_INFO_CODE = SHIPMENT_HEADERS(SHIP_INFO_CODE)
				
				IF ( SHIPMENT_HEADERS(STATUS_FLAG) = #SHIPMENT_CONFIRM_SOME OR SHIPMENT_HEADERS(STATUS_FLAG) = #SHIPMENT_CONFIRM_ALL ) 
					#R1 = #NO	
				END_IF 
			
				PERFORM LOAD_SHIPMENT_CARRIER_SHIP_INFO
				  
			END_IF
		END_IF 
	END_BLOCK 

END_FORM 


PROCEDURE_FORM CREATE_SHIPMENT_NUMBER 
	BEGIN_BLOCK CREATE_SHIPMENT_NUMBER
		
		FIND IN SOP_TRANSACTION_TYPES &
			/LOCK=WRITE &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=TRANSACTION_TYPE=(PARAMETER("TTYPE_LN"))
		
		IF ( %STATUS = %SUCCESS ) 
			IF ( SOP_TRANSACTION_TYPES(TRANSACTION_NUMBER) <= 0 OR &
				 SOP_TRANSACTION_TYPES(TRANSACTION_NUMBER) = "" ) 
				
				#SHIPMENT_NUMBER = 1
				SOP_TRANSACTION_TYPES(TRANSACTION_NUMBER) = #SHIPMENT_NUMBER + 1
				
			ELSE

				#SHIPMENT_NUMBER = SOP_TRANSACTION_TYPES(TRANSACTION_NUMBER)
				SOP_TRANSACTION_TYPES(TRANSACTION_NUMBER) = #SHIPMENT_NUMBER + 1				
				
			END_IF
			
			EXIT(%SUCCESS)
			 
		ELSE
			EXIT(%FAILURE)
		END_IF
	END_BLOCK
END_FORM 


PROCEDURE_FORM GET_CARRIER_SHIP_DESC 
	BEGIN_BLOCK GET_CARRIER_NAME 
		IF ( #CARRIER_ID <> "" ) 
			FIND IN CARRIER_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=CARRIER_ID = #CARRIER_ID
				
			IF ( %STATUS = %SUCCESS ) 
				#CARRIER_NAME = CARRIER_CODES(CARRIER_NAME)	
			END_IF   
		END_IF		
	END_BLOCK 

	BEGIN_BLOCK GET_SHIP_CODE_DESC 
		IF ( #SHIP_INFO_CODE <> "" ) 
			FIND IN SHIPPING_INFO_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=SHIP_INFO_CODE = #SHIP_INFO_CODE
				
			IF ( %STATUS = %SUCCESS ) 
				#SHIP_INFO_DESCRIPTION = SHIPPING_INFO_CODES(SHIP_INFO_DESCRIPTION)	
			END_IF   
		END_IF	
	END_BLOCK 
END_FORM


PROCEDURE_FORM GET_SHIPMENT_NUMBER

	BEGIN_BLOCK GET_SHIPMENT_NUMBER 
		
		START_STREAM AA &
			/TABLE=DESPATCH_HEADERS &
			/LOCK=NONE &
			/SECONDARY &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES &
			/WITH=SHIPMENT_NUMBER <> "" 
			 
		FETCH AA
		
		IF ( %STATUS = %SUCCESS ) 
			#SHIPMENT_NUMBER = AA:DESPATCH_HEADERS(SHIPMENT_NUMBER)
		END_IF 
	END_BLOCK 

END_FORM 


PROCEDURE_FORM UPDATE_SHIPMENT_STATUS
	BEGIN_BLOCK UPDATE_SHIPMENT_STATUS 
		#SHIP_NOTES_ALL_CONFIRM = #YES
		
		START_STREAM SHIPMENT &
			/TABLE=DESPATCH_HEADERS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE = #COMPANY_CODE &
			/WITH=DIVISION = #DIVISION &
			/WITH=SHIPMENT_NUMBER = #SHIPMENT_NUMBER 
			
		WHILE (1) 
			FETCH SHIPMENT /FAILURE=(CONTINUE OUT) 
		
			FIND IN DESPATCH_NOTES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE=#COMPANY_CODE &
				/WITH=DIVISION=#DIVISION &
				/WITH=DESPATCH_NOTE=SHIPMENT:DESPATCH_HEADERS(DESPATCH_NOTE) &
				/WITH=CONFIRM_DESPATCH = #NO 
		
			IF ( %STATUS = %SUCCESS ) 
				#SHIP_NOTES_ALL_CONFIRM = #NO
				CONTINUE OUT
			END_IF
		END_WHILE
		
		IF ( #SHIP_NOTES_ALL_CONFIRM = #YES ) 
			FIND IN SHIPMENT_HEADERS &
				/LOCK=WRITE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=DIVISION = #DIVISION &
				/WITH=SHIPMENT_NUMBER = #SHIPMENT_NUMBER
				
			IF ( %STATUS = %SUCCESS ) 
				SHIPMENT_HEADERS(STATUS_FLAG)     = #SHIPMENT_CONFIRM_ALL	
			END_IF  
		END_IF
		
		COMMIT
		   	
	END_BLOCK

END_FORM 


PROCEDURE_FORM CHECK_SHIP_NOTES_SHIPMENT_NUMBER (#R1)
	BEGIN_BLOCK SETUP 
		#R1              = #YES
		#SHIPMENT_NUMBER = ""

		FIND IN DESPATCH_HEADERS &
			/LOCK=NONE &
			/WITH=COMPANY_CODE = #COMPANY_CODE &
			/WITH=DIVISION = #DIVISION &
			/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES &
			/WITH=SHIPMENT_NUMBER <> '0'

		IF ( %STATUS = %SUCCESS )
			#SHIPMENT_NUMBER = DESPATCH_HEADERS(SHIPMENT_NUMBER)

			FIND IN DESPATCH_HEADERS &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=DIVISION = #DIVISION    &
				/WITH=DESPATCH_NOTE AMONG #SHIP_NOTES &
				/WITH=SHIPMENT_NUMBER <> #SHIPMENT_NUMBER

			IF ( %STATUS = %SUCCESS )
				#R1 = #NO
			END_IF
		END_IF  
	END_BLOCK 

END_FORM 


PROCEDURE_FORM LOAD_SHIPMENT_CARRIER_SHIP_INFO 
	
	BEGIN_BLOCK LOAD_SHIPMENT_CARRIER_SHIP_INFO 
		
		PERFORM CREATE_SHIPMENT_CARRIER_SHIPPING_VT
			
		START_STREAM BB &
				/TABLE=SHIPMENT_DETAILS &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=DIVISION = #DIVISION &
				/WITH=SHIPMENT_NUMBER = #SHIPMENT_NUMBER 
					
		WHILE (1) 
			FETCH BB /FAILURE=(CONTINUE OUT) 
		
			CLEAR_BUFFER SHIPMENT_CARRIER_SHIPPING_VT
					
			SHIPMENT_CARRIER_SHIPPING_VT(SEQUENCE)        = BB:SHIPMENT_DETAILS(SEQUENCE)
			SHIPMENT_CARRIER_SHIPPING_VT(SHIP_INFO_VALUE) = BB:SHIPMENT_DETAILS(SHIP_INFO_VALUE)
			
			FIND IN SHIPPING_INFO_CODES &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=SHIP_INFO_CODE = #SHIP_INFO_CODE &
				/WITH=SEQUENCE = BB:SHIPMENT_DETAILS(SEQUENCE)
						
			IF ( %STATUS = %SUCCESS ) 
				SHIPMENT_CARRIER_SHIPPING_VT(UNIT_OF_MEASURE) = SHIPPING_INFO_CODES(UNIT_OF_MEASURE)
			ELSE
				SHIPMENT_CARRIER_SHIPPING_VT(UNIT_OF_MEASURE) = ""		
			END_IF  
			
			FIND IN CARRIER_INFO_XREF &
				/LOCK=NONE &
				/WITH=COMPANY_CODE = #COMPANY_CODE &
				/WITH=CARRIER_ID = #CARRIER_ID &
				/WITH=SHIP_INFO_CODE = #SHIP_INFO_CODE &
				/WITH=SEQUENCE = BB:SHIPMENT_DETAILS(SEQUENCE)
					
			IF ( %STATUS = %SUCCESS ) 
				SHIPMENT_CARRIER_SHIPPING_VT(FIELD_REQUIRED) = CARRIER_INFO_XREF(FIELD_REQUIRED)
			ELSE
				SHIPMENT_CARRIER_SHIPPING_VT(FIELD_REQUIRED) = #NO		
			END_IF					
					
			ADD TO SHIPMENT_CARRIER_SHIPPING_VT
			
		END_WHILE	
	END_BLOCK 

END_FORM 

PROCEDURE_FORM GET_SHIP_NOTES &
	/TABLE=DESPATCH_HEADERS &
	/LOCK=NONE &
	/WITH=COMPANY_CODE=#COMPANY_CODE &
	/WITH=DIVISION=#DIVISION &
	/WITH=SHIPMENT_NUMBER=#SHIPMENT_NUM &
	/SORTED_BY=(DESPATCH_NOTE)

	BEGIN_BLOCK GENERATE_STRING
		IF (#FIRST_TIME = #YES)
			#SHIP_NOTES = DESPATCH_HEADERS(DESPATCH_NOTE)
			#FIRST_TIME = #NO			
		ELSE
			IF ((#PREV_SHIP_NOTE+1)=DESPATCH_HEADERS(DESPATCH_NOTE))
				#TO_SHIP_NOTE=DESPATCH_HEADERS(DESPATCH_NOTE)
			ELSE
				IF (#TO_SHIP_NOTE<>"")
					#SHIP_NOTES = (#SHIP_NOTES & '-' & #PREV_SHIP_NOTE)
					#TO_SHIP_NOTE=""
				END_IF
				
				#SHIP_NOTES = (#SHIP_NOTES & ',' & DESPATCH_HEADERS(DESPATCH_NOTE))
			END_IF
		END_IF
		
		#PREV_SHIP_NOTE= DESPATCH_HEADERS(DESPATCH_NOTE)		
	END_BLOCK
END_FORM
