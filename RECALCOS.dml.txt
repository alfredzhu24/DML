FORM MAIN /ROW=3 /COL=2 /HEIGHT=21 /WIDTH=78 &
	/TITLE=("Customers O/S Order Value Re-calculation")

	BEGIN_BLOCK DOCUMENTATION
		
		!	=====================================================
		!
		!
		!	(c) Copyright 1988-1993 Ross Systems, Inc.
		!	All Rights Reserved
		!
		!	This program is the proprietary and confidential information
		!	of Ross Systems, Inc. and may be used and disclosed only
		!	as authorized in a license agreement authorizing and
		!	controlling such use and disclosure
		!
		!	=====================================================
		!
		!	While this program is being run, no invoices must
		!	be in the process of being Entered or Maintained or 
		! 	Updated to AR for the current Company, the entered 
		!	Division and the entered range of Customers.
		!
		!	=====================================================
	END_BLOCK

	BEGIN_BLOCK SET_UP
		START_TRANSACTION

		#YES	= PARAMETER("LANGUAGE_YES")
		#NO	= PARAMETER("LANGUAGE_NO")

		#COMPANY_CODE = PARAMETER("FIN.USER_COMPANY_CODE")
		#COMPANY_NAME = PARAMETER("FIN.USER_COMPANY_NAME")

		#R_NAME = "CUSTOMERS OS ORDER VALUE RECALC"
	END_BLOCK

	INPUT_BLOCK DIVISION /ROW=5 /COL=34 &
			/PROMPT=(FIELD_PROMPT(DIVISION)) &
			/TARGET=#DIVISION &
			/USING=AR_CONTROLS(DIVISION) &
			/LOV=SECURITY_PERIOD_ACCESS_VT(SYS_ACCESS_CODE,CODE_DESCRIPTION) &
			/LOV_WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/LOV_WITH=SOURCE_MODULE=(PARAMETER("MODULE_SO")) &
			/LOV_WITH=SYS_ALLOW_ACCESS=#YES

	BEGIN_BLOCK DIVISION_DESC
		FIND IN AR_CONTROLS &
			/WITH=COMPANY_CODE=#COMPANY_CODE &
			/WITH=DIVISION=#DIVISION &
			/LOCK=NONE
		
		IF (%STATUS<>%SUCCESS)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00818
			GOTO DIVISION
		END_IF
		
		IF (AR_CONTROLS(SOP_ACTIVE) <> #YES)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00243
			GOTO DIVISION
		END_IF

		FIND IN SECURITY_PERIOD_ACCESS_VT &
			/WITH=SYS_ACCESS_TYPE=(PARAMETER("ACCESS_TYPE_DIVISION")) &
			/WITH=SYS_ACCESS_CODE= #DIVISION &
			/WITH=SOURCE_MODULE=(PARAMETER("MODULE_SO"))
		
		IF  (%STATUS = %FAILURE)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00447
			GOTO DIVISION
		END_IF
		
		IF  (SECURITY_PERIOD_ACCESS_VT(SYS_ALLOW_ACCESS) <> #YES)
			MESSAGE/IDENTIFIER/BELL/WAIT P_00756
			GOTO DIVISION
		END_IF
		
		#DIVISION_NAME		= AR_CONTROLS(DIVISION_NAME)
		#BASE_CURRENCY_CODE	= AR_CONTROLS(SYS_CURRENCY_CODE)
		#CURRENCY_METHOD	= AR_CONTROLS(SYS_CURRENCY_METHOD)
		
		FIND IN SYS_CURRENCY_CODES &
			/LOCK=NONE &
			/WITH=SYS_CURRENCY_CODE=#BASE_CURRENCY_CODE
		
		#BASE_CURRENCY_MASK	= SYS_CURRENCY_CODES(SYS_CURRENCY_MASK)
		#BASE_CURRENCY_DECIMAL = SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)

		#DISCOUNTS_POSTED_AT	= AR_CONTROLS(DISCOUNTS_POSTED_AT)
		#DISCOUNT_FLAG		= AR_CONTROLS(DISCOUNT_FLAG)
		#AR_FREIGHT_IN_USE	= AR_CONTROLS(SOP_AR_FREIGHT_IN_USE)
	END_BLOCK

	OUTPUT_BLOCK DIV_DESC /ROW=5 /COL=41 &
			/SOURCE=(AR_CONTROLS(DIVISION_NAME))

	INPUT_BLOCK CUSTOMERS /ROW=7 /COL=34 &
			/TITLE=(FIELD_PROMPT(CUSTOMER_NUMBER)) &
			/PROMPT=(FIELD_PROMPT(CUSTOMER_NUMBER)) &
			/TARGET=#CUSTOMER_NUMBERS &
			/USING=CUSTOMERS(CUSTOMER_NUMBER),MULTIPLE &
			/LOV=CUSTOMERS(CUSTOMER_NUMBER,CUSTOMER_NAME) &
			/LOV_WITH=COMPANY_CODE=#COMPANY_CODE &
			/LOV_WITH=DIVISION=#DIVISION

	MENU_BLOCK PRINT_SELECTION /ROW=15 /COL=26 &
			/SOURCE=(MESSAGE("P_02418")) /NOREPEAT &
		/ITEM=(MESSAGE("P_02418")),(MESSAGE("P_14038")),(#UPDATE = #NO) &
		/ITEM=(MESSAGE("P_00731")),(MESSAGE("P_46039")),(#UPDATE = #YES) &
		/ITEM=(MESSAGE("P_00257")),(MESSAGE("P_00263")),(EXIT)

	BEGIN_BLOCK PERFORM
		#REPORT_TITLE_1 = "Customers O/S Order Value Re-calculation"
		IF (#UPDATE = #YES)
			#REPORT_TITLE_2 = MESSAGE("P_46039")
		ELSE
			#REPORT_TITLE_2 = ""
		END_IF

		COMMIT

		PERFORM FIX_OS_ORDER_VALUES
	END_BLOCK

END_FORM

REPORT_FORM FIX_OS_ORDER_VALUES &
	/WIDTH=132 &
	/OUTPUT=(#R_NAME) &
	/TABLE = CUSTOMERS &
	/LOCK = WRITE &
	/WITH = COMPANY_CODE = #COMPANY_CODE &
	/WITH = DIVISION = #DIVISION &
	/WITH = CUSTOMER_NUMBER AMONG #CUSTOMER_NUMBERS &
	/SORTED_BY = (CUSTOMER_NUMBER) &
	/HEADING_FORM = REPORT_HEADING &
	/FOOTING_FORM = REPORT_FOOTING

	BEGIN_BLOCK SET_UP
		#ORIG_OS_ORDER_VALUE = CUSTOMERS(OS_ORDER_VALUE)
		#NEW_OS_ORDER_VALUE = CUSTOMERS(OS_ORDER_VALUE)
		#CORRECTED_VALUE = 0.0
		#R_MESSAGE_1 = ""
		#R_MESSAGE_2 = ""

		#CUSTOMER	= CUSTOMERS(CUSTOMER_NUMBER)
	END_BLOCK

	OUTPUT_BLOCK CUSTOMER_NUMBER &
		/HEADING=FIELD_HEADING(CUSTOMER_NUMBER) &
		/SOURCE=(CUSTOMERS(CUSTOMER_NUMBER))

	OUTPUT_BLOCK CUSTOMER_NAME &
		/HEADING=FIELD_HEADING(CUSTOMER_NAME) &
		/SOURCE=(CUSTOMERS(CUSTOMER_NAME))

	OUTPUT_BLOCK CURRENT_OS_ORDER_VALUE &
		/RHEADING=MESSAGE("P_82733") &
		/SOURCE=(#ORIG_OS_ORDER_VALUE) &
		/USING=CUSTOMERS(OS_ORDER_VALUE) &
		/OUTPUT_MASK=(#BASE_CURRENCY_MASK)

	BEGIN_BLOCK CORRECT_OS_ORDER_VALUE
		PERFORM CORRECT_FOR_INVOICES
		IF (%STATUS = %FAILURE)
			GOTO NEXT_CUST
		END_IF

		PERFORM CORRECT_FOR_ORDERS
		IF (%STATUS = %FAILURE)
			GOTO NEXT_CUST
		END_IF

		#NEW_OS_ORDER_VALUE = #CORRECTED_VALUE

		IF (#UPDATE = #YES)
			CUSTOMERS(OS_ORDER_VALUE) = #CORRECTED_VALUE
			#R_MESSAGE_1 = MESSAGE("P_42522")
		END_IF
	END_BLOCK

	BEGIN_BLOCK NEXT_CUST
	END_BLOCK

	OUTPUT_BLOCK NEW_OS_ORDER_VALUE &
		/RHEADING=MESSAGE("P_59093") &
		/SOURCE=(#NEW_OS_ORDER_VALUE) &
		/USING=CUSTOMERS(OS_ORDER_VALUE) &
		/OUTPUT_MASK=(#BASE_CURRENCY_MASK)

	OUTPUT_BLOCK ERROR_MSG_1 /LEN=50 &
		/HEADING=(MESSAGE("P_34708")) &
		/SOURCE=(#R_MESSAGE_1)

	OUTPUT_BLOCK ERROR_MSG_2 /ROW=2 /COL=79 /LEN=50 &
		/NOHEADING &
		/SOURCE=(#R_MESSAGE_2)

END_FORM


PROCEDURE_FORM CORRECT_FOR_ORDERS &
	/TABLE = SALES_ORDER_HEADERS &
	/LOCK = WRITE &
	/WITH = COMPANY_CODE = #COMPANY_CODE &
	/WITH = DIVISION = #DIVISION &
	/WITH = CUSTOMER_NUMBER = #CUSTOMER &
	/SORTED_BY = (COMPANY_CODE, DIVISION, ORDER_NUMBER)

	BEGIN_BLOCK NOW_DO_LINES
		PERFORM GET_LINES_FOR_ORDERS
		IF (%STATUS = %FAILURE)
			EXIT(%FAILURE)
		END_IF
	END_BLOCK

END_FORM


PROCEDURE_FORM GET_LINES_FOR_ORDERS &
	/TABLE=SALES_ORDER_LINES &
	/LOCK=WRITE &
	/WITH = COMPANY_CODE = SALES_ORDER_HEADERS(COMPANY_CODE) &
	/WITH = DIVISION = SALES_ORDER_HEADERS(DIVISION) &
	/WITH = ORDER_NUMBER = SALES_ORDER_HEADERS(ORDER_NUMBER) &
	/SORTED_BY = (ORDER_LINE_NUMBER)

	BEGIN_BLOCK DOCUMENTATION
		! The calculation for the Outstanding Order Value for 
		! Sales Orders must be done on a line by line
		! basis.  This is due to orders that may be partially 
		! shipped or invoiced.
	END_BLOCK

	BEGIN_BLOCK SET_UP
		FIND IN SALES_ORDER_LINE_QTYS	&
			/LOCK=NONE	&
			/WITH=COMPANY_CODE = #COMPANY_CODE	&
			/WITH=DIVISION = #DIVISION	&
			/WITH=ORDER_NUMBER = SALES_ORDER_HEADERS(ORDER_NUMBER)	&
			/WITH=ORDER_LINE_NUMBER = SALES_ORDER_LINES(ORDER_LINE_NUMBER)	&
			/WITH=UNIT_OF_MEASURE = SALES_ORDER_LINES(UNIT_SALES)

		IF (%STATUS <> %SUCCESS)
			! Major error discontinue customer processing.
			#R_MESSAGE_1 = MESSAGE("P_91244")
			GOTO ORDER_LINE_FAILURE
		END_IF

		!Sales Order calculation must also take into account any quantity in progress.
		!ORDER_QUANTITY_OUTSTANDING is a computed field.
		!	Order Qty OS = Order Qty - Qty Picked - Qty In Despatch
		!			- Qty Despatched - Qty Invoiced - Qty Closed
		#ORDER_QTY_OS	= SALES_ORDER_LINE_QTYS(ORDER_QUANTITY_OUTSTANDING)	&
				+ SALES_ORDER_LINE_QTYS(IC_QTY_PICKED)	&
				+ SALES_ORDER_LINE_QTYS(IC_QTY_IN_DESPATCH)	&
				+ SALES_ORDER_LINE_QTYS(QTY_DESPATCHED)

		#ORDER_QTY	= SALES_ORDER_LINE_QTYS(ORDER_QUANTITY)

		IF (#ORDER_QTY_OS <= 0)
			GOTO NEXT_ORDER_LINE
		END_IF

                #O_LINE_VALUE		= SALES_ORDER_LINES(SOP_ORDER_TOTAL_CURRENCY)
                #O_TOTAL_LINE_VALUE	= SALES_ORDER_HEADERS(SOP_ORDER_TOTAL_CURRENCY)

		FIND IN SYS_CURRENCY_CODES &
			/LOCK=NONE &
			/WITH=SYS_CURRENCY_CODE = SALES_ORDER_HEADERS(SYS_CURRENCY_CODE)

		#CURRENCY_DECIMAL	= SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
	END_BLOCK

	BEGIN_BLOCK CALCULATE
		#QUANTITY_FACTOR	= #ORDER_QTY_OS / #ORDER_QTY

		IF (#QUANTITY_FACTOR > 1.0)
			#QUANTITY_FACTOR = 1.0
		END_IF

		!Line value portion
		!If AR Freight is in use, the freight value will be calculated in the #OS_HEADER_VALUE.
		#OS_ORDER_VALUE	= (SALES_ORDER_LINES(SOP_ORDER_TOTAL_CURRENCY)	&
				+ SALES_ORDER_LINES(LINE_TAX)	&
				- SALES_ORDER_LINES(LINE_DISCOUNT))	&
				* #QUANTITY_FACTOR

		!Header value portion
                #ORDER_DISCOUNT_PERCENT = SALES_ORDER_HEADERS(ORDER_DISCOUNT_PERCENT)

		#ORDER_DISCOUNT	= ROUND(((SALES_ORDER_LINES(SOP_ORDER_TOTAL_CURRENCY) &
				- SALES_ORDER_LINES(LINE_DISCOUNT)) * #ORDER_DISCOUNT_PERCENT/100) * #QUANTITY_FACTOR, &
					#CURRENCY_DECIMAL)

		#ORDER_DISCOUNT_TAX	= ROUND(((#ORDER_DISCOUNT_PERCENT * SALES_ORDER_LINES(LINE_TAX))/100)	&
									*#QUANTITY_FACTOR, #CURRENCY_DECIMAL)

		#ORDER_DISCOUNT	= (#ORDER_DISCOUNT + #ORDER_DISCOUNT_TAX) 

		#OS_HEADER_VALUE	= SALES_ORDER_HEADERS(MISCELLANEOUS) + SALES_ORDER_HEADERS(TAX_ON_MISCELLANEOUS)	&
					+ SALES_ORDER_HEADERS(FREIGHT) + SALES_ORDER_HEADERS(TAX_ON_FREIGHT)

		#OS_HEADER_VALUE	= #OS_HEADER_VALUE	&
					* #QUANTITY_FACTOR	&
					* (#O_LINE_VALUE / #O_TOTAL_LINE_VALUE)

		!Combine the line and header value portions.
		#OS_HEADER_VALUE	= #OS_HEADER_VALUE - #ORDER_DISCOUNT

		#OS_ORDER_VALUE	= #OS_ORDER_VALUE + #OS_HEADER_VALUE

		IF (#CURRENCY_METHOD > 0)
		! convert to base currency using rate on sales order line
			IF (SALES_ORDER_HEADERS(SYS_CURRENCY_RATIO_INDIC) = PARAMETER("MULTIPLY_RATIO_INDIC"))
				#OS_ORDER_VALUE = ROUND((#OS_ORDER_VALUE	&
						* SALES_ORDER_HEADERS(SYS_CURRENCY_RATE)),#BASE_CURRENCY_DECIMAL)
			ELSE
				#OS_ORDER_VALUE = ROUND((#OS_ORDER_VALUE 	&
						/ SALES_ORDER_HEADERS(SYS_CURRENCY_RATE)),#BASE_CURRENCY_DECIMAL)
			END_IF
		END_IF
	END_BLOCK

	BEGIN_BLOCK UPDATE
		#CORRECTED_VALUE = #CORRECTED_VALUE + #OS_ORDER_VALUE
		GOTO NEXT_ORDER_LINE
	END_BLOCK

	BEGIN_BLOCK ORDER_LINE_FAILURE
		#R_MESSAGE_2 = MESSAGE("P_56178", &
			(SALES_ORDER_LINES(ORDER_NUMBER)), &
			(SALES_ORDER_LINES(ORDER_LINE_NUMBER)))
		EXIT(%FAILURE)
	END_BLOCK

	BEGIN_BLOCK NEXT_ORDER_LINE
	END_BLOCK

END_FORM

PROCEDURE_FORM CORRECT_FOR_INVOICES &
	/TABLE = SALES_ORDER_INVOICES &
	/LOCK = WRITE &
	/WITH = COMPANY_CODE = #COMPANY_CODE &
	/WITH = DIVISION = #DIVISION &
	/WITH = CUSTOMER_NUMBER = #CUSTOMER &
	/SORTED_BY = (INVOICE_NUMBER)

	BEGIN_BLOCK DOCUMENTATION
	!Since all invoice lines are updated together (unlike sales orders),
	!use header data to calculate the OS Order Value for the invoice.
	END_BLOCK

	BEGIN_BLOCK CHECK_UPDATE_FLAG
		! SALES_ORDER_INVOICES(STATUS_FLAG) is not set in SOP during
		! any invoice function (archive, inquiry, create, maintain,
		! register or update). But selections for register and update
		! ignore invoices with this flag set... so will this function.
		!

		BEGIN_CASE (SALES_ORDER_INVOICES(UPDATE_FLAG))

			!C - Update Completed to AR
			CASE PARAMETER("UPDATE_FLAG_C")
				!This invoice has been updated to AR.
				GOTO NEXT_INVOICE

			!I - Update In Progress to AR
			CASE PARAMETER("UPDATE_FLAG_I")
				!Failure, stop process
				#R_MESSAGE_1 = MESSAGE("P_92538") & " " & MESSAGE("P_56133")
				GOTO INVOICE_FAILURE

			!E - In Process of being Entered
			CASE PARAMETER("UPDATE_FLAG_E")
				!Failure, stop process
				#R_MESSAGE_1 = MESSAGE("P_92538") & " " & MESSAGE("P_01453")
				GOTO INVOICE_FAILURE

			!N - Not Ready (Invoice entry not yet complete)
			CASE #NO
				!Failure; stop process
				#R_MESSAGE_1 = MESSAGE("P_92538") & " " & MESSAGE("P_01453")
				GOTO INVOICE_FAILURE

			CASE ELSE
			!A - Awaiting Invoice Register Run
			!R - Awaiting Invoice Update
			!M - Invoice Matched (PO or GRN)
		END_CASE
	END_BLOCK

	BEGIN_BLOCK DIRECT_INVOICE
		IF (SALES_ORDER_INVOICES(INVOICE_METHOD) = (PARAMETER("INVOICE_METHOD_DIRECT")))

			#GRAND_TOTAL	= SALES_ORDER_INVOICES(SOP_INVOICE_TOTAL_CURRENCY) &
					- SALES_ORDER_INVOICES(LINE_DISCOUNT) &
					- SALES_ORDER_INVOICES(INVOICE_DISCOUNT) &
					+ SALES_ORDER_INVOICES(FREIGHT) &
					+ SALES_ORDER_INVOICES(MISCELLANEOUS)

                        ! Note: AR Freight is never in use on a Direct Invoice,
                        ! so the freight value is always included in the total
                        ! calculation

			IF (#DISCOUNTS_POSTED_AT = PARAMETER("DISCOUNT_POSTED_AT_ENTRY"))
				#GRAND_TOTAL = #GRAND_TOTAL - SALES_ORDER_INVOICES(CASH_DISCOUNT)
			END_IF

			#INVOICE_DISCOUNT_TAX	= ROUND(SALES_ORDER_INVOICES(INVOICE_DISCOUNT_PERCENT) &
						* SALES_ORDER_INVOICES(LINE_TAX) / 100, #CURRENCY_DECIMAL)

			#GRAND_TAX	= SALES_ORDER_INVOICES(LINE_TAX) &
					- #INVOICE_DISCOUNT_TAX &
					+ SALES_ORDER_INVOICES(TAX_ON_FREIGHT) &
					+ SALES_ORDER_INVOICES(TAX_ON_MISCELLANEOUS)

			IF ((#DISCOUNTS_POSTED_AT = PARAMETER("DISCOUNT_POSTED_AT_ENTRY")) &
				OR  (#DISCOUNT_FLAG = PARAMETER("DISCOUNT_FLAG_I")))

				#GRAND_TAX = #GRAND_TAX - SALES_ORDER_INVOICES(CASH_DISCOUNT_TAX)
			END_IF

			#GRAND_TOTAL = #GRAND_TOTAL + #GRAND_TAX
	END_BLOCK

	BEGIN_BLOCK DISPATCHED_INVOICE
		ELSE
			#GRAND_TOTAL	= SALES_ORDER_INVOICES(SOP_INVOICE_TOTAL_CURRENCY)	&
					- SALES_ORDER_INVOICES(LINE_DISCOUNT)	&
					- SALES_ORDER_INVOICES(INVOICE_DISCOUNT)	&
					+ SALES_ORDER_INVOICES(FREIGHT)	&
					+ SALES_ORDER_INVOICES(MISCELLANEOUS)

			IF (#AR_FREIGHT_IN_USE = #YES)
				#GRAND_TOTAL = #GRAND_TOTAL - SALES_ORDER_INVOICES(FREIGHT)
			END_IF

			IF (#DISCOUNTS_POSTED_AT = PARAMETER("DISCOUNT_POSTED_AT_ENTRY"))
				#GRAND_TOTAL = #GRAND_TOTAL - SALES_ORDER_INVOICES(CASH_DISCOUNT)
			END_IF

			#INVOICE_DISCOUNT_TAX	= ROUND(SALES_ORDER_INVOICES(INVOICE_DISCOUNT_PERCENT) &
						* SALES_ORDER_INVOICES(LINE_TAX) / 100, #CURRENCY_DECIMAL)

			#GRAND_TAX	= SALES_ORDER_INVOICES(LINE_TAX) &
					- #INVOICE_DISCOUNT_TAX &
					+ SALES_ORDER_INVOICES(TAX_ON_FREIGHT) &
					+ SALES_ORDER_INVOICES(TAX_ON_MISCELLANEOUS)

			IF (#AR_FREIGHT_IN_USE = #YES)
				#GRAND_TAX = #GRAND_TAX - SALES_ORDER_INVOICES(TAX_ON_FREIGHT)
			END_IF

			IF ((#DISCOUNTS_POSTED_AT = PARAMETER("DISCOUNT_POSTED_AT_ENTRY")) &
				OR  (#DISCOUNT_FLAG = PARAMETER("DISCOUNT_FLAG_I")))

				#GRAND_TAX = #GRAND_TAX - SALES_ORDER_INVOICES(CASH_DISCOUNT_TAX)
			END_IF

			#GRAND_TOTAL = #GRAND_TOTAL + #GRAND_TAX
		END_IF
	END_BLOCK

	BEGIN_BLOCK UPDATE_OS_ORDERS
		#OS_ORDER_VALUE	= #GRAND_TOTAL

		IF (#CURRENCY_METHOD > 0)
		! convert to base currency using rate on sales invoice
		! what about Euro?  Safer to use GL engine currency
		! library routines.
			FIND IN SYS_CURRENCY_CODES &
				/LOCK=NONE &
				/WITH=SYS_CURRENCY_CODE = SALES_ORDER_INVOICES(SYS_BASE_CURRENCY)

			#BASE_CURRENCY_DECIMAL = SYS_CURRENCY_CODES(SYS_CURRENCY_DECIMALS)
	
			IF (SALES_ORDER_INVOICES(SYS_CURRENCY_RATIO_INDIC) = PARAMETER("MULTIPLY_RATIO_INDIC"))
				#OS_ORDER_VALUE = ROUND((#GRAND_TOTAL	&
					* SALES_ORDER_INVOICES(SYS_CURRENCY_RATE)),#BASE_CURRENCY_DECIMAL)
			ELSE
				#OS_ORDER_VALUE = ROUND((#GRAND_TOTAL	&
					/ SALES_ORDER_INVOICES(SYS_CURRENCY_RATE)),#BASE_CURRENCY_DECIMAL)
			END_IF

		END_IF

		#CORRECTED_VALUE = #CORRECTED_VALUE + #OS_ORDER_VALUE

		GOTO NEXT_INVOICE
	END_BLOCK

	BEGIN_BLOCK INVOICE_FAILURE
		#R_MESSAGE_2 = MESSAGE("P_00921", &
				(SALES_ORDER_INVOICES(INVOICE_NUMBER)))
		EXIT(%FAILURE)
	END_BLOCK

	BEGIN_BLOCK NEXT_INVOICE
	END_BLOCK

END_FORM


PROCEDURE_FORM REPORT_HEADING

	OUTPUT_BLOCK BLOCK_1 /ROW=1 /COL=LEFT &
			/SOURCE=(MASK("!DD-!3Lm-!LY !HH:!Mi", %NOW))

	OUTPUT_BLOCK BLOCK_2 /ROW=1 /COL=RIGHT &
			/SOURCE=(MESSAGE("P_00486",MASK("!-@@@@",%PAGE)))

	OUTPUT_BLOCK BLOCK_3 /ROW=1 /COL=CENTER &
			/SOURCE=(#COMPANY_CODE & ": " & TRIM(#COMPANY_NAME))

	OUTPUT_BLOCK BLOCK_4 /ROW=2 /COL=CENTER &
			/SOURCE=(#REPORT_TITLE_1)

	OUTPUT_BLOCK BLOCK_5 /ROW=3 /COL=CENTER &
			/SOURCE=(FIELD_PROMPT(DIVISION) & "  " & #DIVISION & "  " & #DIVISION_NAME)

	OUTPUT_BLOCK BLOCK_6 /ROW=4 /COL=CENTER &
			/SOURCE=(MESSAGE("P_01626") & " " & MESSAGE("P_24189") & ": " & #CUSTOMER_NUMBERS)

	OUTPUT_BLOCK BLOCK_7 /ROW=5 /COL=CENTER &
			/SOURCE=(#REPORT_TITLE_2)

END_FORM

PROCEDURE_FORM REPORT_FOOTING

	OUTPUT_BLOCK BLOCK_2 /ROW=1 /COL=CENTER &
			/SOURCE=(#REPORT_TITLE_1)

	OUTPUT_BLOCK BLOCK_3 /ROW=1 /COL=RIGHT &
			/SOURCE=(MESSAGE("P_00486",MASK("!-@@@@",%PAGE)))

END_FORM
